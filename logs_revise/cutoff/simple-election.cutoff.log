
**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


=================================================================================================================

	[FW]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 27

[FW NOTE]: number of interpreted atoms (e.g. member,le): 9

[FW NOTE]: symmetric group order: 36

[FW NOTE]: number of branching actions: 21

ivy_to_cpp target=qrm simple-election.acceptor_3_proposer_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o simple-election.acceptor_3_proposer_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 simple-election.acceptor_3_proposer_3.finite.cpp simple-election.acceptor_3_proposer_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared simple-election.acceptor_3_proposer_3.finite.o simple-election.acceptor_3_proposer_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.709 seconds

[QRM NOTE]: Time elapsed since last: 7.709 seconds

[QRM NOTE]: Peak memory: 1194455 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 7

[FW NOTE]: number of total reachable states:        254

[FW NOTE]: number of dfs representative states:     26

[FW NOTE]: number of dfs non-representative states: 228


========================================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================

sort: acceptor=['acceptor0', 'acceptor1', 'acceptor2']
sort: proposer=['proposer0', 'proposer1', 'proposer2']
sort: quorum=['quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2']
predicate: start('proposer',)
predicate: leader('proposer',)
predicate: member('acceptor', 'quorum')
predicate: didNotPromise('acceptor',)
predicate: chosenAt('quorum', 'proposer')
predicate: promise('acceptor', 'proposer')
interpreted atoms: {'member(acceptor0,quorum__acceptor0_acceptor1)': '1', 'member(acceptor0,quorum__acceptor0_acceptor2)': '1', 'member(acceptor0,quorum__acceptor1_acceptor2)': '0', 'member(acceptor1,quorum__acceptor0_acceptor1)': '1', 'member(acceptor1,quorum__acceptor0_acceptor2)': '0', 'member(acceptor1,quorum__acceptor1_acceptor2)': '1', 'member(acceptor2,quorum__acceptor0_acceptor1)': '0', 'member(acceptor2,quorum__acceptor0_acceptor2)': '1', 'member(acceptor2,quorum__acceptor1_acceptor2)': '1'}
state atoms: ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)', 'leader(proposer1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)', 'start(proposer0)', 'start(proposer1)', 'start(proposer2)']
representative states : 117440939, 117441451, 117442475, 117444523, 50597803, 201367467, 9798197163, 9800294315, 134782891, 136880043, 203464619, 17108907, 348075, 50595755, 201365419, 9798195115, 9800292267, 134780843, 136877995, 203462571, 17106859, 50594731, 201364395, 9798194091, 9800291243, 203461547


=== State Orbit 0 =====================
size : 1
repr state: 000000000111000000000000000
lex min decimal: 117440939
states:
000000000111000000000000000




=== State Orbit 1 =====================
size : 3
repr state: 000000000111000000000000100
lex min decimal: 117441451
states:
000000000111000000000000100
000000000111000000000000001
000000000111000000000000010




=== State Orbit 2 =====================
size : 3
repr state: 000000000111000000000000110
lex min decimal: 117442475
states:
000000000111000000000000101
000000000111000000000000011
000000000111000000000000110




=== State Orbit 3 =====================
size : 1
repr state: 000000000111000000000000111
lex min decimal: 117444523
states:
000000000111000000000000111




=== State Orbit 4 =====================
size : 9
repr state: 000000000011000100000000111
lex min decimal: 50597803
states:
000000000011000001000000111
000000000110000000000010111
000000000011000100000000111
000000000101000000001000111
000000000101000000010000111
000000000110000000000100111
000000000011000010000000111
000000000110000000000001111
000000000101000000100000111




=== State Orbit 5 =====================
size : 9
repr state: 100000000001000100100000111
lex min decimal: 201367467
states:
000010000010000010000010111
100000000001000100100000111
000000001100000000001001111
000000010100000000010010111
001000000001000001001000111
000000100100000000100100111
000001000010000001000001111
010000000001000010010000111
000100000010000100000100111




=== State Orbit 6 =====================
size : 3
repr state: 100100100000000100100100111
lex min decimal: 9798197163
states:
100100100000000100100100111
001001001000000001001001111
010010010000000010010010111




=== State Orbit 7 =====================
size : 3
repr state: 100100100000100100100100111
lex min decimal: 9800294315
states:
001001001000001001001001111
010010010000010010010010111
100100100000100100100100111




=== State Orbit 8 =====================
size : 18
repr state: 100000000000000100100010111
lex min decimal: 134782891
states:
010000000000000010010100111
000100000000000100001100111
000000010000000001010010111
000000001000000100001001111
000100000000000100010100111
000001000000000001010001111
000000100000000010100100111
000010000000000010100010111
000000001000000010001001111
000010000000000010001010111
010000000000000010010001111
100000000000000100100010111
100000000000000100100001111
001000000000000001001010111
001000000000000001001100111
000000010000000100010010111
000000100000000001100100111
000001000000000001100001111




=== State Orbit 9 =====================
size : 18
repr state: 100000000000100100100010111
lex min decimal: 136880043
states:
100000000000100100100010111
010000000000010010010001111
000010000000010010100010111
001000000000001001001010111
000000100000100001100100111
000001000000001001100001111
000000001000001010001001111
000001000000001001010001111
001000000000001001001100111
010000000000010010010100111
000000010000010100010010111
100000000000100100100001111
000100000000100100001100111
000100000000100100010100111
000000100000100010100100111
000010000000010010001010111
000000010000010001010010111
000000001000001100001001111




=== State Orbit 10 =====================
size : 9
repr state: 100000000001100100100000111
lex min decimal: 203464619
states:
000000100100100000100100111
000000001100001000001001111
000100000010100100000100111
000001000010001001000001111
000000010100010000010010111
000010000010010010000010111
100000000001100100100000111
001000000001001001001000111
010000000001010010010000111




=== State Orbit 11 =====================
size : 18
repr state: 000000000001000100010000111
lex min decimal: 17108907
states:
000000000010000100000010111
000000000010000010000001111
000000000001000100001000111
000000000001000001010000111
000000000010000010000100111
000000000010000001000100111
000000000100000000001100111
000000000100000000001010111
000000000100000000010100111
000000000001000100010000111
000000000100000000100010111
000000000001000001100000111
000000000010000001000010111
000000000100000000100001111
000000000001000010001000111
000000000010000100000001111
000000000001000010100000111
000000000100000000010001111




=== State Orbit 12 =====================
size : 6
repr state: 000000000000000100010001111
lex min decimal: 348075
states:
000000000000000010100001111
000000000000000100001010111
000000000000000100010001111
000000000000000001100010111
000000000000000001010100111
000000000000000010001100111




=== State Orbit 13 =====================
size : 18
repr state: 000000000011000100000000110
lex min decimal: 50595755
states:
000000000110000000000100110
000000000101000000100000101
000000000011000100000000101
000000000011000100000000110
000000000011000001000000011
000000000110000000000010011
000000000110000000000001101
000000000011000010000000110
000000000101000000100000110
000000000101000000010000011
000000000101000000001000011
000000000011000010000000011
000000000110000000000010110
000000000011000001000000101
000000000101000000010000110
000000000101000000001000101
000000000110000000000100101
000000000110000000000001011




=== State Orbit 14 =====================
size : 18
repr state: 100000000001000100100000110
lex min decimal: 201365419
states:
000000010100000000010010110
000000100100000000100100110
010000000001000010010000011
001000000001000001001000011
000001000010000001000001101
000000001100000000001001101
000100000010000100000100101
100000000001000100100000101
000000010100000000010010011
000000100100000000100100101
000000001100000000001001011
000001000010000001000001011
001000000001000001001000101
000010000010000010000010110
000010000010000010000010011
010000000001000010010000110
100000000001000100100000110
000100000010000100000100110




=== State Orbit 15 =====================
size : 6
repr state: 100100100000000100100100110
lex min decimal: 9798195115
states:
001001001000000001001001011
100100100000000100100100110
010010010000000010010010110
001001001000000001001001101
010010010000000010010010011
100100100000000100100100101




=== State Orbit 16 =====================
size : 6
repr state: 100100100000100100100100110
lex min decimal: 9800292267
states:
100100100000100100100100110
001001001000001001001001101
010010010000010010010010011
100100100000100100100100101
010010010000010010010010110
001001001000001001001001011




=== State Orbit 17 =====================
size : 18
repr state: 100000000000000100100010110
lex min decimal: 134780843
states:
100000000000000100100010110
010000000000000010010001011
010000000000000010010100110
000010000000000010100010110
000000010000000100010010110
000000010000000001010010011
000000100000000001100100101
000000001000000100001001101
000100000000000100010100110
000010000000000010001010011
000001000000000001100001101
000000100000000010100100110
001000000000000001001010011
000000001000000010001001011
000001000000000001010001011
100000000000000100100001101
000100000000000100001100101
001000000000000001001100101




=== State Orbit 18 =====================
size : 18
repr state: 100000000000100100100010110
lex min decimal: 136877995
states:
000010000000010010100010110
000000010000010001010010011
100000000000100100100001101
000010000000010010001010011
000000100000100010100100110
000000001000001010001001011
010000000000010010010100110
000001000000001001100001101
000000001000001100001001101
000100000000100100010100110
001000000000001001001010011
000100000000100100001100101
000000010000010100010010110
000001000000001001010001011
000000100000100001100100101
100000000000100100100010110
010000000000010010010001011
001000000000001001001100101




=== State Orbit 19 =====================
size : 18
repr state: 100000000001100100100000110
lex min decimal: 203462571
states:
001000000001001001001000101
010000000001010010010000011
000100000010100100000100101
000000100100100000100100101
000000001100001000001001101
000010000010010010000010110
000000010100010000010010110
000010000010010010000010011
000000100100100000100100110
000001000010001001000001011
001000000001001001001000011
000000001100001000001001011
000001000010001001000001101
100000000001100100100000101
000000010100010000010010011
100000000001100100100000110
000100000010100100000100110
010000000001010010010000110




=== State Orbit 20 =====================
size : 18
repr state: 000000000001000100010000110
lex min decimal: 17106859
states:
000000000010000100000001101
000000000100000000100010110
000000000001000100010000110
000000000001000001010000011
000000000010000010000001011
000000000100000000100001101
000000000100000000010001011
000000000010000001000010011
000000000100000000010100110
000000000100000000001100101
000000000010000100000010110
000000000001000001100000101
000000000010000001000100101
000000000001000010100000110
000000000001000010001000011
000000000001000100001000101
000000000010000010000100110
000000000100000000001010011




=== State Orbit 21 =====================
size : 9
repr state: 000000000011000100000000100
lex min decimal: 50594731
states:
000000000011000010000000010
000000000110000000000100100
000000000101000000001000001
000000000101000000010000010
000000000011000100000000100
000000000110000000000010010
000000000011000001000000001
000000000110000000000001001
000000000101000000100000100




=== State Orbit 22 =====================
size : 9
repr state: 100000000001000100100000100
lex min decimal: 201364395
states:
000001000010000001000001001
001000000001000001001000001
100000000001000100100000100
000000100100000000100100100
010000000001000010010000010
000000010100000000010010010
000100000010000100000100100
000000001100000000001001001
000010000010000010000010010




=== State Orbit 23 =====================
size : 3
repr state: 100100100000000100100100100
lex min decimal: 9798194091
states:
010010010000000010010010010
001001001000000001001001001
100100100000000100100100100




=== State Orbit 24 =====================
size : 3
repr state: 100100100000100100100100100
lex min decimal: 9800291243
states:
010010010000010010010010010
100100100000100100100100100
001001001000001001001001001




=== State Orbit 25 =====================
size : 9
repr state: 100000000001100100100000100
lex min decimal: 203461547
states:
000001000010001001000001001
000000001100001000001001001
000000010100010000010010010
000010000010010010000010010
001000000001001001001000001
000000100100100000100100100
100000000001100100100000100
010000000001010010010000010
000100000010100100000100100



[QRM NOTE]: Time elapsed since start: 8.211 seconds

[QRM NOTE]: Time elapsed since last: 0.501 seconds

[QRM NOTE]: Peak memory: 1301094 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.225 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 333070 bytes


========================================================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

========================================================================================================================


===================================================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===================================================================================================================


=== Prime Orbit 0 =====================
size : 18
num_suborbits: 1
0 (*) : ---1-------1---------------
0     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
1     : ----1------1---------------
1     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
2     : -----1-----1---------------
2     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
3     : 1---------1----------------
3     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor1)']
4     : -1--------1----------------
4     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor1)']
5     : --1-------1----------------
5     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor1)']
6     : ------1----1---------------
6     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor2)']
7     : -------1---1---------------
7     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor2)']
8     : --------1--1---------------
8     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor2)']
9     : 1--------1-----------------
9     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'didNotPromise(acceptor0)']
10     : -1-------1-----------------
10     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor0)']
11     : --1------1-----------------
11     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'didNotPromise(acceptor0)']
12     : ------1---1----------------
12     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'didNotPromise(acceptor1)']
13     : -------1--1----------------
13     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'didNotPromise(acceptor1)']
14     : --------1-1----------------
14     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'didNotPromise(acceptor1)']
15     : ---1-----1-----------------
15     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'didNotPromise(acceptor0)']
16     : ----1----1-----------------
16     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'didNotPromise(acceptor0)']
17     : -----1---1-----------------
17     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'didNotPromise(acceptor0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 9
num_suborbits: 1
18 (*) : -----------1----------1----
18     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer1)']
19     : -----------1-----------1---
19     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer2)']
20     : -----------1---------1-----
20     : ['didNotPromise(acceptor2)', 'promise(acceptor2,proposer0)']
21     : ----------1--------1-------
21     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer1)']
22     : ----------1---------1------
22     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer2)']
23     : ----------1-------1--------
23     : ['didNotPromise(acceptor1)', 'promise(acceptor1,proposer0)']
24     : ---------1------1----------
24     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer1)']
25     : ---------1-------1---------
25     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer2)']
26     : ---------1-----1-----------
26     : ['didNotPromise(acceptor0)', 'promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --1---------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
28     : -1----------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
29     : --1----------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
30     : 1------------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
31     : -1------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
32     : 1-------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --------1---1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
40     : -------1----1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : --------1----1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
42     : ------1------1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
43     : -------1------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
44     : ------1-------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ------------------1-----0--
51     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
52     : -------------------1-----0-
52     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
53     : --------------------1-----0
53     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
54     : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ---------------1--------0--
57     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
58     : ----------------1--------0-
58     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
59     : -----------------1--------0
59     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 36
num_suborbits: 1
60 (*) : -1----------------1--------
60     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer0)']
61     : --1---------------1--------
61     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer0)']
62     : 1------------------1-------
62     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
63     : --1----------------1-------
63     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor1,proposer1)']
64     : 1-------------------1------
64     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
65     : -1------------------1------
65     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
66     : ----1----------------1-----
66     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
67     : -----1---------------1-----
67     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
68     : ---1------------------1----
68     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
69     : -----1----------------1----
69     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
70     : ---1-------------------1---
70     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
71     : ----1------------------1---
71     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
72     : -1-------------1-----------
72     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer0)']
73     : --1------------1-----------
73     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer0)']
74     : 1---------------1----------
74     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer1)']
75     : --1-------------1----------
75     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor0,proposer1)']
76     : 1----------------1---------
76     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor0,proposer2)']
77     : -1---------------1---------
77     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor0,proposer2)']
78     : -------1-------------1-----
78     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer0)']
79     : --------1------------1-----
79     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer0)']
80     : ------1---------------1----
80     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
81     : --------1-------------1----
81     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor2,proposer1)']
82     : ------1----------------1---
82     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
83     : -------1---------------1---
83     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
84     : ----1----------1-----------
84     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer0)']
85     : -----1---------1-----------
85     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer0)']
86     : ---1------------1----------
86     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer1)']
87     : -----1----------1----------
87     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor0,proposer1)']
88     : ---1-------------1---------
88     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor0,proposer2)']
89     : ----1------------1---------
89     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor0,proposer2)']
90     : -------1----------1--------
90     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer0)']
91     : --------1---------1--------
91     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer0)']
92     : ------1------------1-------
92     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer1)']
93     : --------1----------1-------
93     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor1,proposer1)']
94     : ------1-------------1------
94     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor1,proposer2)']
95     : -------1------------1------
95     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ------------------11-------
96     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
97     : ------------------1-1------
97     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
98     : -------------------11------
98     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
99     : ---------------------11----
99     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
100     : ---------------------1-1---
100     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
101     : ----------------------11---
101     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 18
num_suborbits: 1
105 (*) : ------1--------------0-----
105     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
106     : -------1--------------0----
106     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
107     : --------1--------------0---
107     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
108     : ------1-----------0--------
108     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
109     : -------1-----------0-------
109     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
110     : --------1-----------0------
110     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
111     : ---1-----------------0-----
111     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor2,proposer0)']
112     : ----1-----------------0----
112     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor2,proposer1)']
113     : -----1-----------------0---
113     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor2,proposer2)']
114     : ---1-----------0-----------
114     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
115     : ----1-----------0----------
115     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
116     : -----1-----------0---------
116     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
117     : 1-----------------0--------
117     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor1,proposer0)']
118     : -1-----------------0-------
118     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor1,proposer1)']
119     : --1-----------------0------
119     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor1,proposer2)']
120     : 1--------------0-----------
120     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor0,proposer0)']
121     : -1--------------0----------
121     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor0,proposer1)']
122     : --1--------------0---------
122     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 27
num_suborbits: 2
132 (*) : -1----1--------------------
132     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
133     : --1---1--------------------
133     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
134     : 1------1-------------------
134     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
135     : --1----1-------------------
135     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
136     : 1-------1------------------
136     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
137     : -1------1------------------
137     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
138     : ----1-1--------------------
138     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
139     : -----11--------------------
139     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)']
140     : ---1---1-------------------
140     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
141     : -----1-1-------------------
141     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
142     : ---1----1------------------
142     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
143     : ----1---1------------------
143     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
144     : -1-1-----------------------
144     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
145     : --11-----------------------
145     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)']
146     : 1---1----------------------
146     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
147     : --1-1----------------------
147     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
148     : 1----1---------------------
148     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
149     : -1---1---------------------
149     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
150 (*) : ------11-------------------
150     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)']
151     : ------1-1------------------
151     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
152     : -------11------------------
152     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)']
153     : ---11----------------------
153     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)']
154     : ---1-1---------------------
154     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
155     : ----11---------------------
155     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)']
156     : 11-------------------------
156     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer1)']
157     : 1-1------------------------
157     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
158     : -11------------------------
158     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor1,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : --------0-----1-1----------
159     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
160     : -------0-----1---1---------
160     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------0-----11-----------
161     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ------0-----1----1---------
162     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
163     : -------0-----1-1-----------
163     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
164     : ------0-----1---1----------
164     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
165     : -----0--------1----1-------
165     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
166     : ----0--------1------1------
166     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
167     : -----0--------1---1--------
167     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
168     : ---0--------1-------1------
168     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
169     : ----0--------1----1--------
169     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
170     : ---0--------1------1-------
170     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
171     : --0-----------1-------1----
171     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
172     : -0-----------1---------1---
172     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
173     : --0-----------1------1-----
173     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
174     : 0-----------1----------1---
174     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
175     : -0-----------1-------1-----
175     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
176     : 0-----------1---------1----
176     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 36
num_suborbits: 1
177 (*) : --------------1-1------0---
177     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
178     : -------------1---1----0----
178     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
179     : --------------11-------0---
179     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
180     : ------------1----1---0-----
180     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
181     : -------------1-1------0----
181     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
182     : ------------1---1----0-----
182     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
183     : --------------1-1---0------
183     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
184     : -------------1---1-0-------
184     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
185     : --------------11----0------
185     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
186     : ------------1----10--------
186     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
187     : -------------1-1---0-------
187     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
188     : ------------1---1-0--------
188     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
189     : --------------1----1---0---
189     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
190     : -------------1------1-0----
190     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
191     : --------------1---1----0---
191     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
192     : ------------1-------10-----
192     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
193     : -------------1----1---0----
193     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
194     : ------------1------1-0-----
194     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
195     : --------------1--0-1-------
195     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
196     : -------------1--0---1------
196     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
197     : --------------1--01--------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
198     : ------------1--0----1------
198     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
199     : -------------1--0-1--------
199     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
200     : ------------1--0---1-------
200     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
201     : --------------1-----0-1----
201     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
202     : -------------1-----0---1---
202     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
203     : --------------1-----01-----
203     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
204     : ------------1-----0----1---
204     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
205     : -------------1-----0-1-----
205     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
206     : ------------1-----0---1----
206     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
207     : --------------1--0----1----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
208     : -------------1--0------1---
208     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
209     : --------------1--0---1-----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
210     : ------------1--0-------1---
210     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
211     : -------------1--0----1-----
211     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
212     : ------------1--0------1----
212     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 2
213 (*) : --------------1-1-----1----
213     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
214     : -------------1---1-----1---
214     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
215     : --------------11-----1-----
215     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
216     : ------------1----1-----1---
216     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
217     : -------------1-1-----1-----
217     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
218     : ------------1---1-----1----
218     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
219     : --------------1-1--1-------
219     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
220     : -------------1---1--1------
220     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
221     : --------------11--1--------
221     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
222     : ------------1----1--1------
222     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
223     : -------------1-1--1--------
223     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
224     : ------------1---1--1-------
224     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
225     : --------------1----1--1----
225     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
226     : -------------1------1--1---
226     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
227     : --------------1---1--1-----
227     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
228     : ------------1-------1--1---
228     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
229     : -------------1----1--1-----
229     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
230     : ------------1------1--1----
230     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
276 (*) : --------------1-1-1--------
276     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
277     : -------------1---11--------
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
278     : --------------11---1-------
278     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
279     : ------------1----1-1-------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
280     : -------------1-1----1------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
281     : ------------1---1---1------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
282     : --------------1-1----1-----
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
283     : -------------1---1---1-----
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
284     : --------------11------1----
284     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
285     : ------------1----1----1----
285     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
286     : -------------1-1-------1---
286     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
287     : ------------1---1------1---
287     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : -------------1------11-----
289     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
290     : --------------1---1---1----
290     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
291     : ------------1-------1-1----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
292     : -------------1----1----1---
292     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
293     : ------------1------1---1---
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 9
num_suborbits: 1
231 (*) : ----0-----------1-----1----
231     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
232     : -----0-----------1-----1---
232     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
233     : ---0-----------1-----1-----
233     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
234     : -0--------------1--1-------
234     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
235     : --0--------------1--1------
235     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
236     : 0--------------1--1--------
236     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
237     : -------0-----------1--1----
237     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
238     : --------0-----------1--1---
238     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
239     : ------0-----------1--1-----
239     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
240 (*) : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------1-1---1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
242     : -----------1--11-----------
242     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
243     : -----------11----1---------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
244     : -----------1-1-1-----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
245     : -----------11---1----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
246     : ----------1---1-1----------
246     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
247     : ----------1--1---1---------
247     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
248     : ----------1---11-----------
248     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
249     : ----------1-1----1---------
249     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
250     : ----------1--1-1-----------
250     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
251     : ----------1-1---1----------
251     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
252     : -----------1--1----1-------
252     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
253     : -----------1-1------1------
253     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
254     : -----------1--1---1--------
254     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
255     : -----------11-------1------
255     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
256     : -----------1-1----1--------
256     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
257     : -----------11------1-------
257     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
258     : ---------1----1----1-------
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
259     : ---------1---1------1------
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
260     : ---------1----1---1--------
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
261     : ---------1--1-------1------
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
262     : ---------1---1----1--------
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
263     : ---------1--1------1-------
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
264     : ----------1---1-------1----
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
265     : ----------1--1---------1---
265     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
266     : ----------1---1------1-----
266     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
267     : ----------1-1----------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
268     : ----------1--1-------1-----
268     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
269     : ----------1-1---------1----
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1---1---------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ---------1----1------1-----
272     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ---------1--1----------1---
273     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ---------1---1-------1-----
274     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ---------1--1---------1----
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 18
num_suborbits: 1
294 (*) : ----0--1--------1----------
294     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
295     : -----0--1--------1---------
295     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
296     : ---0--1--------1-----------
296     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
297     : -0-----1--------1----------
297     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
298     : --0-----1--------1---------
298     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
299     : 0-----1--------1-----------
299     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
300     : ----1--0-----------1-------
300     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
301     : -----1--0-----------1------
301     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
302     : ---1--0-----------1--------
302     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
303     : -0--1--------------1-------
303     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
304     : --0--1--------------1------
304     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
305     : 0--1--------------1--------
305     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
306     : -1-----0--------------1----
306     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
307     : --1-----0--------------1---
307     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
308     : 1-----0--------------1-----
308     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
309     : -1--0-----------------1----
309     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
310     : --1--0-----------------1---
310     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
311     : 1--0-----------------1-----
311     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 9
num_suborbits: 1
312 (*) : 1--0--1--------------------
312     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
313     : -1--0--1-------------------
313     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
314     : --1--0--1------------------
314     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
315     : 0--1--1--------------------
315     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
316     : -0--1--1-------------------
316     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
317     : --0--1--1------------------
317     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
318     : 1--1--0--------------------
318     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
319     : -1--1--0-------------------
319     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
320     : --1--1--0------------------
320     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : -0-----------1--------0----
321     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
322     : --0-----------1--------0---
322     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
323     : 0-----------1--------0-----
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
324     : ----0--------1-----0-------
324     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
325     : -----0--------1-----0------
325     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : -------0-----1--0----------
327     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
328     : --------0-----1--0---------
328     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
329     : ------0-----1--0-----------
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : -------------1--0-----0----
330     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
331     : --------------1--0-----0---
331     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : -------------1--0--0-------
333     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
334     : --------------1--0--0------
334     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : -------------1-----0--0----
336     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
337     : --------------1-----0--0---
337     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : -0---------1-1-------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
340     : --0--------1--1------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : ----0-----1--1-------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
343     : -----0----1---1------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : -------0-1---1-------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
346     : --------01----1------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1-1--0----------
348     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
349     : -----------1--1--0---------
349     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
350     : -----------11--0-----------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
351     : ----------1--1--0----------
351     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
352     : ----------1---1--0---------
352     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
353     : ----------1-1--0-----------
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1-1-----0-------
354     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
355     : -----------1--1-----0------
355     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
357     : ---------1---1-----0-------
357     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
358     : ---------1----1-----0------
358     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
359     : ---------1--1-----0--------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
360     : ----------1--1--------0----
360     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
361     : ----------1---1--------0---
361     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
362     : ----------1-1--------0-----
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
363     : ---------1---1--------0----
363     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
364     : ---------1----1--------0---
364     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
365     : ---------1--1--------0-----
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : -0--0--0-----1-------------
384     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : --0--0--0-----1------------
385     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : 0--0--0-----1--------------
386     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 3
num_suborbits: 1
387 (*) : ---------0-----000---------
387     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
388     : ----------0-------000------
388     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
389     : -----------0---------000---
389     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0--------00---0--
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0-------00------0
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
393     : -----------0----------000--
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0---------00---0
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
396     : ---------0------00------0--
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0-----00---------0
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -0-------0-----0---1------0
411     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
412     : --0------0-----0----1----0-
412     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
413     : 0--------0------0-1-------0
413     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
414     : --0------0------0---1---0--
414     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
415     : 0--------0-------01------0-
415     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
416     : -0-------0-------0-1----0--
416     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
417     : ----0----0-----0------1---0
417     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
418     : -----0---0-----0-------1-0-
418     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
419     : ---0-----0------0----1----0
419     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
420     : -----0---0------0------10--
420     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
421     : ---0-----0-------0---1---0-
421     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
422     : ----0----0-------0----1-0--
422     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
423     : -0--------0-----1-0-------0
423     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
424     : --0-------0------10------0-
424     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
425     : 0---------0----1---0------0
425     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
426     : --0-------0------1-0----0--
426     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
427     : 0---------0----1----0----0-
427     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
428     : -0--------0-----1---0---0--
428     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
429     : -------0--0-------0---1---0
429     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
430     : --------0-0-------0----1-0-
430     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
431     : ------0---0--------0-1----0
431     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
432     : --------0-0--------0---10--
432     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
433     : ------0---0---------01---0-
433     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
434     : -------0--0---------0-1-0--
434     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
435     : ----0------0----1----0----0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
436     : -----0-----0-----1---0---0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
437     : ---0-------0---1------0---0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
438     : -----0-----0-----1----0-0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
439     : ---0-------0---1-------0-0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
440     : ----0------0----1------00--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -------0---0-------1----0-0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
448     : --------0--0--------1---00-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -------0--0-----------1-0-0
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
451     : --------0-0------------100-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : ----0------0----1-------0-0
453     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
454     : -----0-----0-----1------00-
454     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : ----0----0------------1-0-0
456     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
457     : -----0---0-------------100-
457     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : -0--------0-----1-------0-0
459     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
460     : --0-------0------1------00-
460     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -0-------0---------1----0-0
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
463     : --0------0----------1---00-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 18
num_suborbits: 1
465 (*) : -0-------0-----0-0-1-------
465     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
466     : --0------0-----00---1------
466     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
467     : 0--------0------001--------
467     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
468     : ----0----0-----0-0----1----
468     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
469     : -----0---0-----00------1---
469     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
470     : ---0-----0------00---1-----
470     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
471     : -0--------0-----1-0-0------
471     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
472     : --0-------0------100-------
472     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
473     : 0---------0----1---00------
473     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
474     : -------0--0-------0-0-1----
474     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
475     : --------0-0-------00---1---
475     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
476     : ------0---0--------001-----
476     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
477     : ----0------0----1----0-0---
477     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
478     : -----0-----0-----1---00----
478     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
479     : ---0-------0---1------00---
479     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
480     : -------0---0-------1-0-0---
480     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
481     : --------0--0--------100----
481     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
482     : ------0----0------1---00---
482     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : -0-----1-0--------------0-0
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
484     : --0-----10--------------00-
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
485     : 0-----1--0---------------00
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
486     : ----0--1-0--------------0-0
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
487     : -----0--10--------------00-
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
488     : ---0--1--0---------------00
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
489     : -0--1-----0-------------0-0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
490     : --0--1----0-------------00-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
491     : 0--1------0--------------00
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
492     : ----1--0--0-------------0-0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
493     : -----1--0-0-------------00-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
494     : ---1--0---0--------------00
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
495     : -1--0------0------------0-0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
496     : --1--0-----0------------00-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
497     : 1--0-------0-------------00
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
498     : -1-----0---0------------0-0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
499     : --1-----0--0------------00-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
500     : 1-----0----0-------------00
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----0--1-0-----0----------0
507     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
508     : -----0--10-----0---------0-
508     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
509     : ---0--1--0------0---------0
509     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
510     : -----0--10------0-------0--
510     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
511     : ---0--1--0-------0-------0-
511     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
512     : ----0--1-0-------0------0--
512     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
513     : -0--1-----0-------0-------0
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
514     : --0--1----0-------0------0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
515     : 0--1------0--------0------0
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
516     : --0--1----0--------0----0--
516     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
517     : 0--1------0---------0----0-
517     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
518     : -0--1-----0---------0---0--
518     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
519     : ----1--0--0-------0-------0
519     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
520     : -----1--0-0-------0------0-
520     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
521     : ---1--0---0--------0------0
521     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
522     : -----1--0-0--------0----0--
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
523     : ---1--0---0---------0----0-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
524     : ----1--0--0---------0---0--
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
525     : -1--0------0---------0----0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
526     : --1--0-----0---------0---0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
527     : 1--0-------0----------0---0
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
528     : --1--0-----0----------0-0--
528     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
529     : 1--0-------0-----------0-0-
529     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
530     : -1--0------0-----------00--
530     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
531     : -1-----0---0---------0----0
531     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
532     : --1-----0--0---------0---0-
532     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
533     : 1-----0----0----------0---0
533     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
534     : --1-----0--0----------0-0--
534     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
535     : 1-----0----0-----------0-0-
535     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
536     : -1-----0---0-----------00--
536     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 35 =====================
size : 18
num_suborbits: 1
546 (*) : -0-----1-0-----0-0---------
546     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
547     : --0-----10-----00----------
547     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
548     : 0-----1--0------00---------
548     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
549     : ----0--1-0-----0-0---------
549     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
550     : -----0--10-----00----------
550     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
551     : ---0--1--0------00---------
551     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
552     : -0--1-----0-------0-0------
552     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
553     : --0--1----0-------00-------
553     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
554     : 0--1------0--------00------
554     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
555     : ----1--0--0-------0-0------
555     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
556     : -----1--0-0-------00-------
556     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
557     : ---1--0---0--------00------
557     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
558     : -1--0------0---------0-0---
558     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
559     : --1--0-----0---------00----
559     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
560     : 1--0-------0----------00---
560     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
561     : -1-----0---0---------0-0---
561     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
562     : --1-----0--0---------00----
562     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
563     : 1-----0----0----------00---
563     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0------0--0----1------1---0
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
565     : 0-------0-0----1-------1-0-
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
566     : -0----0---0-----1----1----0
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
567     : -0------0-0-----1------10--
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
568     : --0---0---0------1---1---0-
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
569     : --0----0--0------1----1-0--
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
570     : ---0---0---0---1---1------0
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
571     : ---0----0--0---1----1----0-
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
572     : ----0-0----0----1-1-------0
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
573     : ----0---0--0----1---1---0--
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
574     : -----00----0-----11------0-
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
575     : -----0-0---0-----1-1----0--
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
576     : 0---0----0--------1---1---0
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
577     : 0----0---0--------1----1-0-
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
578     : -0-0-----0---------1-1----0
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
579     : -0---0---0---------1---10--
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
580     : --00-----0----------11---0-
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
581     : --0-0----0----------1-1-0--
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 37 =====================
size : 18
num_suborbits: 1
582 (*) : 0---0----0-------01---1----
582     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
583     : 0----0---0------0-1----1---
583     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
584     : -0-0-----0-------0-1-1-----
584     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)']
585     : -0---0---0-----0---1---1---
585     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
586     : --00-----0------0---11-----
586     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)']
587     : --0-0----0-----0----1-1----
587     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)']
588     : 0------0--0----1----0-1----
588     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
589     : 0-------0-0----1---0---1---
589     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
590     : -0----0---0-----1---01-----
590     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)']
591     : -0------0-0-----1-0----1---
591     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
592     : --0---0---0------1-0-1-----
592     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)']
593     : --0----0--0------10---1----
593     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)']
594     : ---0---0---0---1---1---0---
594     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
595     : ---0----0--0---1----1-0----
595     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
596     : ----0-0----0----1-1----0---
596     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)']
597     : ----0---0--0----1---10-----
597     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
598     : -----00----0-----11---0----
598     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)']
599     : -----0-0---0-----1-1-0-----
599     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01---------0---0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
601     : ---0--0----01----------0-0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0--0---0-1-------0----0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
603     : ----0--0---0-1---------00--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
604     : -----0--0--0--1------0---0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : -----0--0--0--1-------0-0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : 0--0-----0--1---0---------0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
613     : 0--0-----0--1----0-------0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
614     : -0--0----0---1-0----------0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
615     : -0--0----0---1---0------0--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
616     : --0--0---0----10---------0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
617     : --0--0---0----1-0-------0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : ------0---00-------0--0---0
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
637     : ------0---00--------0--0-0-
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
638     : -------0--00------0--0----0
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
639     : -------0--00--------0--00--
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
640     : --------0-00------0--0---0-
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
641     : --------0-00-------0--0-0--
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
642     : ---0-----0-0----0-----0---0
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
643     : ---0-----0-0-----0-----0-0-
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
644     : ----0----0-0---0-----0----0
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
645     : ----0----0-0-----0-----00--
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
646     : -----0---0-0---0-----0---0-
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
647     : -----0---0-0----0-----0-0--
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
648     : 0--------00-----0--0------0
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
649     : 0--------00------0--0----0-
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
650     : -0-------00----0--0-------0
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
651     : -0-------00------0--0---0--
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
652     : --0------00----0--0------0-
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
653     : --0------00-----0--0----0--
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -----00---00-----1--0----0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
673     : ----0-0---00----1--0------0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
674     : -----0-0--00-----1--0---0--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
675     : ---0---0--00---1--0-------0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
676     : ----0---0-00----1--0----0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
677     : ---0----0-00---1--0------0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
678     : --0---0---00-----1-----0-0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
679     : -0----0---00----1-----0---0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
680     : --0----0--00-----1-----00--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
681     : 0------0--00---1-----0----0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
682     : -0------0-00----1-----0-0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
683     : 0-------0-00---1-----0---0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
684     : ---0----00-0-----0--1----0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
685     : ---0---0-0-0----0--1------0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
686     : ----0---00-0-----0--1---0--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
687     : ----0-0--0-0---0--1-------0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
688     : -----0-0-0-0----0--1----0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
689     : -----00--0-0---0--1------0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
690     : --00-----0-0--------1--0-0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
691     : -0-0-----0-0-------1--0---0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
692     : --0-0----0-0--------1--00--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
693     : 0---0----0-0------1--0----0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
694     : -0---0---0-0-------1--0-0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
695     : 0----0---0-0------1--0---0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
696     : 0-------000------0-----1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
697     : 0------0-00-----0-----1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
698     : -0------000------0-----10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
699     : -0----0--00----0-----1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
700     : --0----0-00-----0-----1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
701     : --0---0--00----0-----1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
702     : 0----0---00---------0--1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
703     : 0---0----00--------0--1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
704     : -0---0---00---------0--10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
705     : -0-0-----00-------0--1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
706     : --0-0----00--------0--1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
707     : --00-----00-------0--1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 44 =====================
size : 9
num_suborbits: 1
708 (*) : -0-------00----0-00-0------
708     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
709     : --0------00----00-00-------
709     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
710     : 0--------00-----00-00------
710     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
711     : ----0----0-0---0-0---0-0---
711     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
712     : -----0---0-0---00----00----
712     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
713     : ---0-----0-0----00----00---
713     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
714     : -------0--00------0-00-0---
714     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
715     : --------0-00------00-00----
715     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
716     : ------0---00-------00-00---
716     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 45 =====================
size : 36
num_suborbits: 1
717 (*) : 0------0-00-----00--0-1----
717     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
718     : 0-------000-----00-0---1---
718     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
719     : -0----0--00----0-0--01-----
719     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
720     : -0------000----0-00----1---
720     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
721     : --0---0--00----00--0-1-----
721     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
722     : --0----0-00----00-0---1----
722     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
723     : ---0---0-0-0----00-1---0---
723     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
724     : ---0----00-0----00--1-0----
724     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
725     : ----0-0--0-0---0-01----0---
725     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
726     : ----0---00-0---0-0--10-----
726     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
727     : -----00--0-0---00-1---0----
727     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
728     : -----0-0-0-0---00--1-0-----
728     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
729     : 0---0----00------0-00-1----
729     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
730     : 0----0---00-----0--00--1---
730     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
731     : -0-0-----00------00-01-----
731     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
732     : -0---0---00----0--0-0--1---
732     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
733     : --00-----00-----0-00-1-----
733     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
734     : --0-0----00----0--00--1----
734     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
735     : ----0-0---00----1--00--0---
735     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
736     : -----00---00-----1-00-0----
736     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
737     : ---0---0--00---1--0-0--0---
737     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
738     : -----0-0--00-----10-00-----
738     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
739     : ---0----0-00---1--00--0----
739     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
740     : ----0---0-00----1-00-0-----
740     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
741     : -0-0-----0-0-----0-1--00---
741     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
742     : --00-----0-0----0---1-00---
742     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
743     : 0---0----0-0-----01--0-0---
743     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
744     : --0-0----0-0---0----10-0---
744     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
745     : 0----0---0-0----0-1--00----
745     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
746     : -0---0---0-0---0---1-00----
746     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
747     : -0----0---00----1---0-00---
747     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
748     : --0---0---00-----1-0--00---
748     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
749     : 0------0--00---1----00-0---
749     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
750     : --0----0--00-----10--0-0---
750     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
751     : 0-------0-00---1---0-00----
751     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
752     : -0------0-00----1-0--00----
752     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 46 =====================
size : 18
num_suborbits: 1
753 (*) : 0---0--0-00------0--0-1----
753     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
754     : 0----0--000-----0--0---1---
754     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
755     : -0-0--0--00------0--01-----
755     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
756     : -0---0--000----0--0----1---
756     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
757     : --00--0--00-----0--0-1-----
757     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
758     : --0-0--0-00----0--0---1----
758     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
759     : -0-0---0-0-0-----0-1---0---
759     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
760     : --00----00-0----0---1-0----
760     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
761     : 0---0-0--0-0-----01----0---
761     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
762     : --0-0---00-0---0----10-----
762     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
763     : 0----00--0-0----0-1---0----
763     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
764     : -0---0-0-0-0---0---1-0-----
764     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
765     : -0--0-0---00----1---0--0---
765     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
766     : --0--00---00-----1-0--0----
766     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
767     : 0--0---0--00---1----0--0---
767     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
768     : --0--0-0--00-----10--0-----
768     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
769     : 0--0----0-00---1---0--0----
769     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
770     : -0--0---0-00----1-0--0-----
770     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0---0-0--000-------0------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
772     : 0----00--000--------0----0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
773     : -0-0---0-000------0-------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
774     : -0---0-0-000--------0---0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
775     : --00----0000------0------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
776     : --0-0---0000-------0----0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
777     : -0-0--0--000----------0---0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
778     : --00--0--000-----------0-0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
779     : 0---0--0-000---------0----0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
780     : --0-0--0-000-----------00--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
781     : 0----0--0000---------0---0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
782     : -0---0--0000----------0-0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 00-00-00-000--------------0
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 50 =====================
size : 18
num_suborbits: 1
810 (*) : -0---0---000---0--0-000----
810     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
811     : --0-0----000---0--00-0-0---
811     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
812     : 0----0---000----0--0000----
812     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
813     : --00-----000----0-00--00---
813     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
814     : 0---0----000-----0-000-0---
814     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
815     : -0-0-----000-----00-0-00---
815     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
816     : -0------0000---0-00--00----
816     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
817     : --0----0-000---00-0--0-0---
817     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
818     : 0-------0000----00-0-00----
818     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
819     : --0---0--000---00--0--00---
819     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
820     : 0------0-000----00--00-0---
820     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
821     : -0----0--000---0-0--0-00---
821     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
822     : ----0---0000---0-000-0-----
822     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
823     : -----0-0-000---00-0-00-----
823     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
824     : ---0----0000----0000--0----
824     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
825     : -----00--000---00--00-0----
825     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
826     : ---0---0-000----000-0--0---
826     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
827     : ----0-0--000---0-0-00--0---
827     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 51 =====================
size : 18
num_suborbits: 1
828 (*) : -0---0-0-000---0--0-00-----
828     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
829     : --0-0---0000---0--00-0-----
829     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
830     : 0----00--000----0--00-0----
830     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
831     : --00----0000----0-00--0----
831     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
832     : 0---0-0--000-----0-00--0---
832     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
833     : -0-0---0-000-----00-0--0---
833     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
834     : --0-0--0-000---0--0--0-0---
834     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
835     : -0---0--0000---0--0--00----
835     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
836     : --00--0--000----0--0--00---
836     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
837     : 0----0--0000----0--0-00----
837     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
838     : -0-0--0--000-----0--0-00---
838     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
839     : 0---0--0-000-----0--00-0---
839     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
840     : -0--0---0000---0-00--0-----
840     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
841     : --0--0-0-000---00-0--0-----
841     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
842     : 0--0----0000----00-0--0----
842     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
843     : --0--00--000---00--0--0----
843     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
844     : 0--0---0-000----00--0--0---
844     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
845     : -0--0-0--000---0-0--0--0---
845     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 52 =====================
size : 3
num_suborbits: 1
846 (*) : 0-00-00-0000----0--0--0----
846     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
847     : 00-00-00-000-----0--0--0---
847     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
848     : -00-00-00000---0--0--0-----
848     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 53

[PRIME NOTE]: number of orbits before merging: 55

[PRIME NOTE]: number of primes: 849

[QRM NOTE]: Time elapsed since start: 8.673 seconds

[QRM NOTE]: Time elapsed since last: 0.448 seconds

[QRM NOTE]: Peak memory: 2527274 bytes


=============================================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=============================================================================================================

definition primes: {0, 1, 35, 37, 8, 44, 45, 14, 46, 16, 17, 50, 51, 52, 25, 31}


New level: 0
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : []

Essensial at level 0 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, 0), (7, -1), (8, -1), (9, 1048576), (10, 0), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : {10, 6}

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Before reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, 0), (7, -1), (8, -1), (9, 1048576), (10, 0), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

[QRM NOTE]: Time elapsed since start: 8.802 seconds

[QRM NOTE]: Time elapsed since last: 0.128 seconds

[QRM NOTE]: Peak memory: 1304797 bytes


=================================================================================================================

	[QI]: Quantifier Inference on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=================================================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ------------------11-------
96     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
97     : ------------------1-1------
97     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
98     : -------------------11------
98     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
99     : ---------------------11----
99     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
100     : ---------------------1-1---
100     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
101     : ----------------------11---
101     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

part_sig: ('acceptor$0$promise$0$0; acceptor$0$promise$0$1', 'proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$0$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0, proposer$0$promise$1$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$0$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0 | proposer$0$promise$1$1}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': [acceptor$0$promise$0$0; acceptor$0$promise$0$1]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$0$promise$0': acceptor$0$promise$0$0; acceptor$0$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --1---------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
28     : -1----------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
29     : --1----------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
30     : 1------------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
31     : -1------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
32     : 1-------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --------1---1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
40     : -------1----1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : --------1----1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
42     : ------1------1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
43     : -------1------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
44     : ------1-------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

part_sig: ('proposer$0$chosenAt$1$0 | proposer$0$leader$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0, proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0 | proposer$0$leader$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1': [proposer$0$chosenAt$1$0], 'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1': proposer$0$chosenAt$1$0, 'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['chosenAt(QUORUM0,PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$start$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

part_sig: ('proposer$0$leader$0$0; proposer$1$start$0$0',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', '~start(proposer0)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$start$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$start$0': [proposer$0$leader$0$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$start$0': proposer$0$leader$0$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)


=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer0)', 'leader(proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

part_sig: ('proposer$0$leader$0$0 | proposer$0$leader$0$1',)


---------- SigGenerator ----------

terms:  ['leader(proposer0)', 'leader(proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$leader': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$leader$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$leader$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0, proposer$0$leader$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', 'leader(PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1


=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ------------------1-----0--
51     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
52     : -------------------1-----0-
52     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
53     : --------------------1-----0
53     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
54     : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ---------------1--------0--
57     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
58     : ----------------1--------0-
58     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
59     : -----------------1--------0
59     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['promise(acceptor1,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$1$start$0$0]}

sig2const: {'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

part_sig: ('acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['promise(acceptor1,proposer0)', '~start(proposer0)']

func_name2symbol:  {'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$promise': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$start$0': [proposer$0$promise$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$start$0': proposer$0$promise$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)


=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

sign_func_name2args: {'0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$chosenAt$1$0, proposer$1$start$0$0]}

sig2const: {'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

part_sig: ('proposer$0$chosenAt$1$0; proposer$1$start$0$0', 'quorum$0$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$chosenAt': 1, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0': [quorum$0$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0': quorum$0$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': [proposer$0$chosenAt$1$0; proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$start$0': proposer$0$chosenAt$1$0; proposer$1$start$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', 'chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : --------0-----1-1----------
159     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
160     : -------0-----1---1---------
160     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------0-----11-----------
161     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ------0-----1----1---------
162     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
163     : -------0-----1-1-----------
163     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
164     : ------0-----1---1----------
164     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
165     : -----0--------1----1-------
165     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
166     : ----0--------1------1------
166     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
167     : -----0--------1---1--------
167     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
168     : ---0--------1-------1------
168     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
169     : ----0--------1----1--------
169     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
170     : ---0--------1------1-------
170     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
171     : --0-----------1-------1----
171     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
172     : -0-----------1---------1---
172     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
173     : --0-----------1------1-----
173     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
174     : 0-----------1----------1---
174     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
175     : -0-----------1-------1-----
175     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
176     : 0-----------1---------1----
176     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$1$member$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$promise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '0$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$promise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$promise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,QUORUM0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1


=== Prime Orbit 12 =====================
size : 36
num_suborbits: 1
177 (*) : --------------1-1------0---
177     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
178     : -------------1---1----0----
178     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
179     : --------------11-------0---
179     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
180     : ------------1----1---0-----
180     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
181     : -------------1-1------0----
181     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
182     : ------------1---1----0-----
182     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
183     : --------------1-1---0------
183     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
184     : -------------1---1-0-------
184     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
185     : --------------11----0------
185     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
186     : ------------1----10--------
186     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
187     : -------------1-1---0-------
187     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
188     : ------------1---1-0--------
188     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
189     : --------------1----1---0---
189     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
190     : -------------1------1-0----
190     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
191     : --------------1---1----0---
191     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
192     : ------------1-------10-----
192     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
193     : -------------1----1---0----
193     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
194     : ------------1------1-0-----
194     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
195     : --------------1--0-1-------
195     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
196     : -------------1--0---1------
196     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
197     : --------------1--01--------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
198     : ------------1--0----1------
198     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
199     : -------------1--0-1--------
199     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
200     : ------------1--0---1-------
200     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
201     : --------------1-----0-1----
201     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
202     : -------------1-----0---1---
202     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
203     : --------------1-----01-----
203     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
204     : ------------1-----0----1---
204     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
205     : -------------1-----0-1-----
205     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
206     : ------------1-----0---1----
206     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
207     : --------------1--0----1----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
208     : -------------1--0------1---
208     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
209     : --------------1--0---1-----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
210     : ------------1--0-------1---
210     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
211     : -------------1--0----1-----
211     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
212     : ------------1--0------1----
212     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

part_sig: ('acceptor$0$promise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0, proposer$0$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0 | proposer$0$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$1$promise$0$0}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$promise$0': acceptor$0$promise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,ACCEPTOR0,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 13 =====================
size : 36
num_suborbits: 2
213 (*) : --------------1-1-----1----
213     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
214     : -------------1---1-----1---
214     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
215     : --------------11-----1-----
215     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
216     : ------------1----1-----1---
216     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
217     : -------------1-1-----1-----
217     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
218     : ------------1---1-----1----
218     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
219     : --------------1-1--1-------
219     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
220     : -------------1---1--1------
220     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
221     : --------------11--1--------
221     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
222     : ------------1----1--1------
222     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
223     : -------------1-1--1--------
223     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
224     : ------------1---1--1-------
224     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
225     : --------------1----1--1----
225     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
226     : -------------1------1--1---
226     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
227     : --------------1---1--1-----
227     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
228     : ------------1-------1--1---
228     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
229     : -------------1----1--1-----
229     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
230     : ------------1------1--1----
230     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
276 (*) : --------------1-1-1--------
276     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
277     : -------------1---11--------
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
278     : --------------11---1-------
278     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
279     : ------------1----1-1-------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
280     : -------------1-1----1------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
281     : ------------1---1---1------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
282     : --------------1-1----1-----
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
283     : -------------1---1---1-----
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
284     : --------------11------1----
284     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
285     : ------------1----1----1----
285     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
286     : -------------1-1-------1---
286     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
287     : ------------1---1------1---
287     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : -------------1------11-----
289     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
290     : --------------1---1---1----
290     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
291     : ------------1-------1-1----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
292     : -------------1----1----1---
292     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
293     : ------------1------1---1---
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0, proposer$0$promise$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0; proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0; proposer$0$promise$1$1')


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']

sign_func_name2args: {'0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

part_sig: ('acceptor$0$promise$0$0 | acceptor$0$promise$0$1', 'proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '0$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0, proposer$0$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0 | proposer$0$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$promise$0$0 | acceptor$0$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {'proposer$0$promise$1': [proposer$0$promise$1$0, proposer$0$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$promise$0': [acceptor$0$promise$0$0, acceptor$0$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['promise(ACCEPTOR0,PROPOSER1)', 'promise(ACCEPTOR1,PROPOSER2)', 'leader(PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
240 (*) : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------1-1---1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
242     : -----------1--11-----------
242     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
243     : -----------11----1---------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
244     : -----------1-1-1-----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
245     : -----------11---1----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
246     : ----------1---1-1----------
246     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
247     : ----------1--1---1---------
247     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
248     : ----------1---11-----------
248     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
249     : ----------1-1----1---------
249     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
250     : ----------1--1-1-----------
250     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
251     : ----------1-1---1----------
251     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
252     : -----------1--1----1-------
252     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
253     : -----------1-1------1------
253     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
254     : -----------1--1---1--------
254     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
255     : -----------11-------1------
255     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
256     : -----------1-1----1--------
256     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
257     : -----------11------1-------
257     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
258     : ---------1----1----1-------
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
259     : ---------1---1------1------
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
260     : ---------1----1---1--------
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
261     : ---------1--1-------1------
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
262     : ---------1---1----1--------
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
263     : ---------1--1------1-------
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
264     : ----------1---1-------1----
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
265     : ----------1--1---------1---
265     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
266     : ----------1---1------1-----
266     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
267     : ----------1-1----------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
268     : ----------1--1-------1-----
268     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
269     : ----------1-1---------1----
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1---1---------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ---------1----1------1-----
272     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ---------1--1----------1---
273     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ---------1---1-------1-----
274     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ---------1--1---------1----
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$promise$1$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0', 'proposer$0$leader$0$0 | proposer$0$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '0$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0, proposer$0$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0 | proposer$0$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$0$promise$0': [acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$0$promise$0': acceptor$0$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0], 'proposer$0$promise$1': [proposer$0$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0, 'proposer$0$promise$1': proposer$0$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', 'promise(ACCEPTOR1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,PROPOSER1,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)


=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : -0-----------1--------0----
321     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
322     : --0-----------1--------0---
322     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
323     : 0-----------1--------0-----
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
324     : ----0--------1-----0-------
324     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
325     : -----0--------1-----0------
325     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : -------0-----1--0----------
327     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
328     : --------0-----1--0---------
328     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
329     : ------0-----1--0-----------
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$leader': 1, '1$promise': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$member$0; acceptor$1$promise$0': [acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$member$0; acceptor$1$promise$0': acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~member(ACCEPTOR0,QUORUM0)', '~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : -------------1--0-----0----
330     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
331     : --------------1--0-----0---
331     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : -------------1--0--0-------
333     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
334     : --------------1--0--0------
334     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : -------------1-----0--0----
336     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
337     : --------------1-----0--0---
337     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

sign_func_name2args: {'0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0, proposer$1$promise$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$1]}

sig2const: {'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

part_sig: ('acceptor$1$promise$0$0 | acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1')


---------- SigGenerator ----------

terms:  ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']

func_name2symbol:  {'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$leader': 1, '1$promise': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$promise$0$0 | acceptor$1$promise$0$1}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0; proposer$1$promise$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$1$promise$0': [acceptor$1$promise$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : -0---------1-1-------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
340     : --0--------1--1------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : ----0-----1--1-------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
343     : -----0----1---1------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : -------0-1---1-------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
346     : --------01----1------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor2)', 'leader(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$leader$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0, acceptor$1$member$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0', 'quorum$1$chosenAt$0$0; quorum$1$member$1$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'didNotPromise(acceptor2)', 'leader(proposer1)', '~member(acceptor2,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$didNotPromise': 1, '0$leader': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0; quorum$1$member$1$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0; quorum$1$member$1$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': [quorum$1$chosenAt$0$0; quorum$1$member$1$0]}

	identical_single_classes: {'quorum$1$chosenAt$0; quorum$1$member$1': quorum$1$chosenAt$0$0; quorum$1$member$1$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': [acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0; acceptor$1$member$0': acceptor$0$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,QUORUM0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)


=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1-1--0----------
348     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
349     : -----------1--1--0---------
349     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
350     : -----------11--0-----------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
351     : ----------1--1--0----------
351     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
352     : ----------1---1--0---------
352     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
353     : ----------1-1--0-----------
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1-1-----0-------
354     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
355     : -----------1--1-----0------
355     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
357     : ---------1---1-----0-------
357     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
358     : ---------1----1-----0------
358     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
359     : ---------1--1-----0--------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
360     : ----------1--1--------0----
360     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
361     : ----------1---1--------0---
361     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
362     : ----------1-1--------0-----
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
363     : ---------1---1--------0----
363     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
364     : ---------1----1--------0---
364     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
365     : ---------1--1--------0-----
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))]}

const2sigs: {Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$promise$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$promise$1$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

sign_func_name2count:  {'0$didNotPromise': 1, '0$leader': 1, '1$promise': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$promise$1$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$promise$1$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0], 'acceptor$1$promise$0': [acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$didNotPromise$0': acceptor$0$didNotPromise$0$0, 'acceptor$1$promise$0': acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$promise$1': [proposer$0$leader$0$0; proposer$1$promise$1$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$promise$1': proposer$0$leader$0$0; proposer$1$promise$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

sign_func_name2args: {'0$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$didNotPromise$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$0$leader$0$0]}

sig2const: {'acceptor$0$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

part_sig: ('acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1', 'proposer$0$leader$0$0')


---------- SigGenerator ----------

terms:  ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'0$didNotPromise': 2, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$didNotPromise$0$0 | acceptor$0$didNotPromise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0}

	sort: acceptor

	identical_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$didNotPromise$0': [acceptor$0$didNotPromise$0$0, acceptor$0$didNotPromise$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0': [proposer$0$leader$0$0]}

	identical_single_classes: {'proposer$0$leader$0': proposer$0$leader$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['didNotPromise(ACCEPTOR0)', 'leader(PROPOSER0)', 'didNotPromise(ACCEPTOR1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer0)', 'promise(acceptor0,proposer0)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor0,quorum__acceptor0_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '0$leader': 1, '0$promise': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1


=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : -0--0--0-----1-------------
384     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : --0--0--0-----1------------
385     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : 0--0--0-----1--------------
386     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$leader': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$0$leader$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

part_sig: ('proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2', 'quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$chosenAt': 3, '0$leader': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$1$chosenAt$0$0 | quorum$1$chosenAt$0$1 | quorum$1$chosenAt$0$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	sort: quorum

	identical_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$1$chosenAt$0': [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$chosenAt$0$2]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$2}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.exists

quantifier mode: proposer: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: {Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))


=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0--------00---0--
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0-------00------0
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
393     : -----------0----------000--
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0---------00---0
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
396     : ---------0------00------0--
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0-----00---------0
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 2, '1$start': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$promise$1$1, proposer$1$start$0$0]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$promise$1$1 | proposer$1$start$0$0}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER1)', '~promise(ACCEPTOR0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

part_sig: ('acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$promise': 1, '1$start': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$promise$1$0, proposer$1$start$0$0, proposer$1$start$0$1]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$promise$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$promise$1': proposer$1$promise$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))


=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

sign_func_name2args: {'1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)]}

const2sigs: {Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$2]}

sig2const: {'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$2': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

part_sig: ('acceptor$1$didNotPromise$0$0', 'proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2')


---------- SigGenerator ----------

terms:  ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']

func_name2symbol:  {'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort()))}

func_name2args_sort:  {'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),)}

sign_func_name2count:  {'1$didNotPromise': 1, '1$start': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$1$didNotPromise$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

sort2part_sig: {EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$1$didNotPromise$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$start$0$0 | proposer$1$start$0$1 | proposer$1$start$0$2}

	sort: acceptor

	identical_classes: {'acceptor$1$didNotPromise$0': [acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$1$didNotPromise$0': acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1, proposer$1$start$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: acceptor: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))


=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -0-------0-----0---1------0
411     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
412     : --0------0-----0----1----0-
412     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
413     : 0--------0------0-1-------0
413     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
414     : --0------0------0---1---0--
414     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
415     : 0--------0-------01------0-
415     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
416     : -0-------0-------0-1----0--
416     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
417     : ----0----0-----0------1---0
417     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
418     : -----0---0-----0-------1-0-
418     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
419     : ---0-----0------0----1----0
419     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
420     : -----0---0------0------10--
420     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
421     : ---0-----0-------0---1---0-
421     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
422     : ----0----0-------0----1-0--
422     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
423     : -0--------0-----1-0-------0
423     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
424     : --0-------0------10------0-
424     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
425     : 0---------0----1---0------0
425     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
426     : --0-------0------1-0----0--
426     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
427     : 0---------0----1----0----0-
427     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
428     : -0--------0-----1---0---0--
428     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
429     : -------0--0-------0---1---0
429     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
430     : --------0-0-------0----1-0-
430     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
431     : ------0---0--------0-1----0
431     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
432     : --------0-0--------0---10--
432     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
433     : ------0---0---------01---0-
433     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
434     : -------0--0---------0-1-0--
434     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
435     : ----0------0----1----0----0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
436     : -----0-----0-----1---0---0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
437     : ---0-------0---1------0---0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
438     : -----0-----0-----1----0-0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
439     : ---0-------0---1-------0-0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
440     : ----0------0----1------00--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '0$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0], 'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$1; acceptor$0$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, 'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$1; acceptor$0$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$promise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', 'promise(ACCEPTOR1,PROPOSER0)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -------0---0-------1----0-0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
448     : --------0--0--------1---00-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -------0--0-----------1-0-0
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
451     : --------0-0------------100-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : ----0------0----1-------0-0
453     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
454     : -----0-----0-----1------00-
454     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : ----0----0------------1-0-0
456     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
457     : -----0---0-------------100-
457     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : -0--------0-----1-------0-0
459     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
460     : --0-------0------1------00-
460     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -0-------0---------1----0-0
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
463     : --0------0----------1---00-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', 'promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 1, '0$promise': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0], 'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0': acceptor$0$member$0$0; acceptor$0$promise$0$0, 'acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~didNotPromise(ACCEPTOR1)', '~start(PROPOSER0)', 'promise(ACCEPTOR0,PROPOSER1)', 'member(ACCEPTOR1,QUORUM0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,ACCEPTOR0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : -0-----1-0--------------0-0
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
484     : --0-----10--------------00-
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
485     : 0-----1--0---------------00
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
486     : ----0--1-0--------------0-0
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
487     : -----0--10--------------00-
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
488     : ---0--1--0---------------00
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
489     : -0--1-----0-------------0-0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
490     : --0--1----0-------------00-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
491     : 0--1------0--------------00
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
492     : ----1--0--0-------------0-0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
493     : -----1--0-0-------------00-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
494     : ---1--0---0--------------00
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
495     : -1--0------0------------0-0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
496     : --1--0-----0------------00-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
497     : 1--0-------0-------------00
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
498     : -1-----0---0------------0-0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
499     : --1-----0--0------------00-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
500     : 1-----0----0-------------00
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$start': 2, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER0)', '~member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR0,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)', 'chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----0--1-0-----0----------0
507     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
508     : -----0--10-----0---------0-
508     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
509     : ---0--1--0------0---------0
509     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
510     : -----0--10------0-------0--
510     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
511     : ---0--1--0-------0-------0-
511     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
512     : ----0--1-0-------0------0--
512     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
513     : -0--1-----0-------0-------0
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
514     : --0--1----0-------0------0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
515     : 0--1------0--------0------0
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
516     : --0--1----0--------0----0--
516     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
517     : 0--1------0---------0----0-
517     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
518     : -0--1-----0---------0---0--
518     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
519     : ----1--0--0-------0-------0
519     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
520     : -----1--0-0-------0------0-
520     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
521     : ---1--0---0--------0------0
521     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
522     : -----1--0-0--------0----0--
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
523     : ---1--0---0---------0----0-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
524     : ----1--0--0---------0---0--
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
525     : -1--0------0---------0----0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
526     : --1--0-----0---------0---0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
527     : 1--0-------0----------0---0
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
528     : --1--0-----0----------0-0--
528     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
529     : 1--0-------0-----------0-0-
529     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
530     : -1--0------0-----------00--
530     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
531     : -1-----0---0---------0----0
531     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
532     : --1-----0--0---------0---0-
532     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
533     : 1-----0----0----------0---0
533     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
534     : --1-----0--0----------0-0--
534     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
535     : 1-----0----0-----------0-0-
535     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
536     : -1-----0---0-----------00--
536     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$chosenAt$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$0$chosenAt$0$0, quorum$1$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$0$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$0$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '0$chosenAt': 1, '1$didNotPromise': 1, '1$promise': 1, '1$start': 1, '0$member': 1, '1$member': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$0; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$0; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': [quorum$0$chosenAt$0$0; quorum$1$member$1$0], 'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$chosenAt$0; quorum$1$member$1': quorum$0$chosenAt$0$0; quorum$1$member$1$0, 'quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$chosenAt$1; proposer$1$chosenAt$1': proposer$0$chosenAt$1$0; proposer$1$chosenAt$1$0, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', '~member(ACCEPTOR0,QUORUM0)', 'chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM0,PROPOSER2. start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER0)', '~didNotPromise(ACCEPTOR1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall PROPOSER1,QUORUM0,ACCEPTOR0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1


=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0------0--0----1------1---0
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
565     : 0-------0-0----1-------1-0-
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
566     : -0----0---0-----1----1----0
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
567     : -0------0-0-----1------10--
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
568     : --0---0---0------1---1---0-
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
569     : --0----0--0------1----1-0--
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
570     : ---0---0---0---1---1------0
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
571     : ---0----0--0---1----1----0-
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
572     : ----0-0----0----1-1-------0
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
573     : ----0---0--0----1---1---0--
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
574     : -----00----0-----11------0-
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
575     : -----0-0---0-----1-1----0--
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
576     : 0---0----0--------1---1---0
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
577     : 0----0---0--------1----1-0-
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
578     : -0-0-----0---------1-1----0
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
579     : -0---0---0---------1---10--
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
580     : --00-----0----------11---0-
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
581     : --0-0----0----------1-1-0--
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$0$promise$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$1, acceptor$0$member$0$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$1, acceptor$0$member$0$3, acceptor$1$member$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0 | proposer$0$promise$1$1; proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0 | acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0, proposer$0$promise$1$1; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0, proposer$1$chosenAt$1$0, proposer$0$promise$1$1, proposer$1$chosenAt$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$promise$0$1; acceptor$1$member$0$0], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$promise$0$0, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$promise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER0)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', 'promise(ACCEPTOR2,PROPOSER1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)


=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01---------0---0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
601     : ---0--0----01----------0-0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0--0---0-1-------0----0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
603     : ----0--0---0-1---------00--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
604     : -----0--0--0--1------0---0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : -----0--0--0--1-------0-0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : 0--0-----0--1---0---------0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
613     : 0--0-----0--1----0-------0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
614     : -0--0----0---1-0----------0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
615     : -0--0----0---1---0------0--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
616     : --0--0---0----10---------0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
617     : --0--0---0----1-0-------0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 1, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$promise$1': proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER2)', '~promise(ACCEPTOR0,PROPOSER1)', 'leader(PROPOSER0)', '~chosenAt(QUORUM0,PROPOSER0)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM0,PROPOSER2. ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),), (Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$1], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', 'leader(proposer0)', '~start(proposer1)', '~start(proposer2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$start': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$start$0$0, proposer$1$start$0$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$0 | quorum$0$member$1$1; quorum$1$chosenAt$0$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$start$0$0 | proposer$1$start$0$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$0, quorum$0$member$1$1; quorum$1$chosenAt$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$start$0': [proposer$1$start$0$0, proposer$1$start$0$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', '~start(PROPOSER0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$leader': [(Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$leader$0$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$1$promise$0$1, acceptor$0$member$0$0, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$1]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$leader$0$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1', 'proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1', 'quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'leader': Const('leader', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'leader': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 1, '0$leader': 1, '1$promise': 2, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$promise$1$0, proposer$1$promise$1$1], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$1$chosenAt$0$1 | quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$promise$1$0 | proposer$1$promise$1$1, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$1$chosenAt$0$1, quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0, quorum$1$chosenAt$0$1, quorum$0$member$1$1, quorum$1$chosenAt$0$0]}

	sort: proposer

	identical_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	identical_single_classes: {'proposer$0$leader$0; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$leader$0$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1}

	identical_multi_classes: {'proposer$1$promise$1': [proposer$1$promise$1$0, proposer$1$promise$1$1]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0; acceptor$1$promise$0': acceptor$0$member$0$0; acceptor$0$member$0$1; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0; acceptor$1$promise$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$leader': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~promise(ACCEPTOR0,PROPOSER0)', 'member(ACCEPTOR0,QUORUM0)', 'leader(PROPOSER1)', 'member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1


=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : ------0---00-------0--0---0
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
637     : ------0---00--------0--0-0-
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
638     : -------0--00------0--0----0
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
639     : -------0--00--------0--00--
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
640     : --------0-00------0--0---0-
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
641     : --------0-00-------0--0-0--
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
642     : ---0-----0-0----0-----0---0
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
643     : ---0-----0-0-----0-----0-0-
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
644     : ----0----0-0---0-----0----0
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
645     : ----0----0-0-----0-----00--
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
646     : -----0---0-0---0-----0---0-
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
647     : -----0---0-0----0-----0-0--
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
648     : 0--------00-----0--0------0
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
649     : 0--------00------0--0----0-
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
650     : -0-------00----0--0-------0
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
651     : -0-------00------0--0---0--
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
652     : --0------00----0--0------0-
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
653     : --0------00-----0--0----0--
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$promise$1$0, proposer$1$promise$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 1, '1$didNotPromise': 2, '1$promise': 2, '1$start': 1, '0$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0, proposer$1$promise$1$0; proposer$1$promise$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0 | proposer$1$promise$1$0; proposer$1$promise$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0]}

	identical_single_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0': quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0}

	identical_multi_classes: {}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0], 'proposer$1$promise$1; proposer$1$promise$1': [proposer$1$promise$1$0; proposer$1$promise$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1': proposer$1$chosenAt$1$0, 'proposer$1$promise$1; proposer$1$promise$1': proposer$1$promise$1$0; proposer$1$promise$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$1$didNotPromise$0$1; acceptor$1$promise$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$1, acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR1,PROPOSER1)', '~didNotPromise(ACCEPTOR0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)


=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$1, proposer$0$promise$1$0], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 2, '0$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$2, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1 | proposer$1$chosenAt$1$2 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$2], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$1, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$2, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$0$promise$0$0; acceptor$1$member$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER0)', '~didNotPromise(ACCEPTOR2)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR2,QUORUM2)', '~chosenAt(QUORUM2,PROPOSER1)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,PROPOSER2,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)


=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -----00---00-----1--0----0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
673     : ----0-0---00----1--0------0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
674     : -----0-0--00-----1--0---0--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
675     : ---0---0--00---1--0-------0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
676     : ----0---0-00----1--0----0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
677     : ---0----0-00---1--0------0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
678     : --0---0---00-----1-----0-0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
679     : -0----0---00----1-----0---0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
680     : --0----0--00-----1-----00--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
681     : 0------0--00---1-----0----0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
682     : -0------0-00----1-----0-0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
683     : 0-------0-00---1-----0---0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
684     : ---0----00-0-----0--1----0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
685     : ---0---0-0-0----0--1------0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
686     : ----0---00-0-----0--1---0--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
687     : ----0-0--0-0---0--1-------0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
688     : -----0-0-0-0----0--1----0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
689     : -----00--0-0---0--1------0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
690     : --00-----0-0--------1--0-0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
691     : -0-0-----0-0-------1--0---0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
692     : --0-0----0-0--------1--00--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
693     : 0---0----0-0------1--0----0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
694     : -0---0---0-0-------1--0-0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
695     : 0----0---0-0------1--0---0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
696     : 0-------000------0-----1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
697     : 0------0-00-----0-----1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
698     : -0------000------0-----10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
699     : -0----0--00----0-----1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
700     : --0----0-00-----0-----1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
701     : --0---0--00----0-----1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
702     : 0----0---00---------0--1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
703     : 0---0----00--------0--1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
704     : -0---0---00---------0--10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
705     : -0-0-----00-------0--1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
706     : --0-0----00--------0--1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
707     : --00-----00-------0--1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '0$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$0$promise$1$0, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$2, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$0$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$0$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$0$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 2, '0$promise': 1, '1$promise': 1, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, proposer$1$chosenAt$1$1, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0 | proposer$1$chosenAt$1$1 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0], 'proposer$1$chosenAt$1': [proposer$1$chosenAt$1$1], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$0$promise$1; proposer$1$chosenAt$1; proposer$1$promise$1': proposer$0$promise$1$0; proposer$1$chosenAt$1$0; proposer$1$promise$1$0, 'proposer$1$chosenAt$1': proposer$1$chosenAt$1$1, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1], 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$promise$0; acceptor$1$member$0': acceptor$0$member$0$0; acceptor$0$promise$0$0; acceptor$1$member$0$1, 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$1, 'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '0$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'promise(ACCEPTOR0,PROPOSER0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)


=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0---0-0--000-------0------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
772     : 0----00--000--------0----0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
773     : -0-0---0-000------0-------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
774     : -0---0-0-000--------0---0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
775     : --00----0000------0------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
776     : --0-0---0000-------0----0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
777     : -0-0--0--000----------0---0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
778     : --00--0--000-----------0-0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
779     : 0---0--0-000---------0----0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
780     : --0-0--0-000-----------00--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
781     : 0----0--0000---------0---0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
782     : -0---0--0000----------0-0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 3, '1$didNotPromise': 3, '1$promise': 1, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$1; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$2; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$1, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$2, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2], 'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1': proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2, 'proposer$1$chosenAt$1; proposer$1$promise$1': proposer$1$chosenAt$1$1; proposer$1$promise$1$0, 'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$0}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', '~promise(ACCEPTOR2,PROPOSER1)', '~didNotPromise(ACCEPTOR2)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR2,QUORUM0)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR2,QUORUM2)', '~didNotPromise(ACCEPTOR0)', '~chosenAt(QUORUM0,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,PROPOSER2,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | promise(ACCEPTOR2,PROPOSER1) | didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)


=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$promise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$promise$1$1], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$promise$1$0], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$1$promise$0$0, acceptor$0$member$0$0, acceptor$1$member$0$1], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$1$promise$0$1, acceptor$0$member$0$2, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$3], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$promise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$promise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$promise$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1}

part_sig: ('acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1', 'proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'promise': Const('promise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'promise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 2, '1$didNotPromise': 3, '1$promise': 2, '1$start': 1, '0$member': 4, '1$member': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$promise$1$1 | proposer$1$chosenAt$1$1; proposer$1$promise$1$0 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0 | acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2 | acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$0; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$1; quorum$1$member$1$1]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$0, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$1, quorum$1$member$1$1]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0; proposer$1$promise$1$1, proposer$1$chosenAt$1$1; proposer$1$promise$1$0], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$promise$1': [proposer$1$chosenAt$1$0, proposer$1$promise$1$1, proposer$1$chosenAt$1$1, proposer$1$promise$1$0]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$1; acceptor$1$promise$0$0, acceptor$0$member$0$2; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0; acceptor$1$promise$0$1], 'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': [acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2]}

	identical_single_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0': acceptor$0$member$0$1; acceptor$0$member$0$3; acceptor$1$didNotPromise$0$2}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0; acceptor$1$promise$0': [acceptor$0$member$0$0, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$1, acceptor$1$promise$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0, acceptor$1$promise$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$promise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$start': [[Var('PROPOSER2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~start(PROPOSER2)', '~didNotPromise(ACCEPTOR1)', '~promise(ACCEPTOR0,PROPOSER1)', '~chosenAt(QUORUM0,PROPOSER0)', '~promise(ACCEPTOR2,PROPOSER0)', 'member(ACCEPTOR1,QUORUM1)', '~member(ACCEPTOR0,QUORUM1)', '~didNotPromise(ACCEPTOR2)', 'member(ACCEPTOR2,QUORUM1)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)', '~chosenAt(QUORUM1,PROPOSER1)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)


=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 00-00-00-000--------------0
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

sign_func_name2args: {'1$chosenAt': [(Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))), (Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))))], '1$didNotPromise': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))),)], '1$start': [(Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))),)], '0$member': [(Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))], '1$member': [(Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))), (Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))))]}

const2sigs: {Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$member$1$1], Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4], Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5], Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$member$1$0], Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))): [quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$member$1$2], Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$0, acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$member$0$2], Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$member$0$0], Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))): [acceptor$1$didNotPromise$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$member$0$1], Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))): [proposer$1$start$0$0]}

sig2const: {'quorum$1$chosenAt$0$0': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$0': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$1': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$2': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$2': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$3': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$3': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$4': Const('proposer0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'quorum$1$chosenAt$0$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'proposer$1$chosenAt$1$5': Const('proposer1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$1$didNotPromise$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$1': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'acceptor$1$didNotPromise$0$2': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'proposer$1$start$0$0': Const('proposer2', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'acceptor$0$member$0$0': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$1': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$2': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$3': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$3': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$4': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$4': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$0$member$0$5': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$0$member$1$5': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$0': Const('acceptor1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$0': Const('quorum__acceptor0_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$1': Const('acceptor2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$1': Const('quorum__acceptor0_acceptor1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), 'acceptor$1$member$0$2': Const('acceptor0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), 'quorum$1$member$1$2': Const('quorum__acceptor1_acceptor2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

part_sig: ('acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0', 'proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0', 'quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2')


---------- SigGenerator ----------

terms:  ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)', 'member(acceptor0,quorum__acceptor0_acceptor2)', '~member(acceptor1,quorum__acceptor0_acceptor2)', 'member(acceptor2,quorum__acceptor0_acceptor2)', 'member(acceptor0,quorum__acceptor0_acceptor1)', 'member(acceptor1,quorum__acceptor0_acceptor1)', '~member(acceptor2,quorum__acceptor0_acceptor1)', '~member(acceptor0,quorum__acceptor1_acceptor2)', 'member(acceptor1,quorum__acceptor1_acceptor2)', 'member(acceptor2,quorum__acceptor1_acceptor2)']

func_name2symbol:  {'chosenAt': Const('chosenAt', FunctionSort(EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'didNotPromise': Const('didNotPromise', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), BooleanSort())), 'start': Const('start', FunctionSort(EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')), BooleanSort())), 'member': Const('member', FunctionSort(EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), BooleanSort()))}

func_name2args_sort:  {'chosenAt': (EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')), EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), 'didNotPromise': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')),), 'start': (EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')),), 'member': (EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')), EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

sign_func_name2count:  {'1$chosenAt': 6, '1$didNotPromise': 3, '1$start': 1, '0$member': 6, '1$member': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2], EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5, proposer$1$start$0$0], EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

sort2part_sig: {EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')): quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0 | quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1 | quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2, EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')): proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4 | proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5 | proposer$1$start$0$0, EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')): acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2 | acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1 | acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0}

	sort: quorum

	identical_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0; quorum$0$member$1$1; quorum$1$chosenAt$0$2; quorum$1$chosenAt$0$3; quorum$1$member$1$0, quorum$0$member$1$2; quorum$0$member$1$3; quorum$1$chosenAt$0$0; quorum$1$chosenAt$0$1; quorum$1$member$1$1, quorum$0$member$1$4; quorum$0$member$1$5; quorum$1$chosenAt$0$4; quorum$1$chosenAt$0$5; quorum$1$member$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'quorum$0$member$1; quorum$0$member$1; quorum$1$chosenAt$0; quorum$1$chosenAt$0; quorum$1$member$1': [quorum$0$member$1$0, quorum$0$member$1$1, quorum$1$chosenAt$0$2, quorum$1$chosenAt$0$3, quorum$1$member$1$0, quorum$0$member$1$2, quorum$0$member$1$3, quorum$1$chosenAt$0$0, quorum$1$chosenAt$0$1, quorum$1$member$1$1, quorum$0$member$1$4, quorum$0$member$1$5, quorum$1$chosenAt$0$4, quorum$1$chosenAt$0$5, quorum$1$member$1$2]}

	sort: proposer

	identical_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0; proposer$1$chosenAt$1$2; proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1; proposer$1$chosenAt$1$3; proposer$1$chosenAt$1$5], 'proposer$1$start$0': [proposer$1$start$0$0]}

	identical_single_classes: {'proposer$1$start$0': proposer$1$start$0$0}

	identical_multi_classes: {'proposer$1$chosenAt$1; proposer$1$chosenAt$1; proposer$1$chosenAt$1': [proposer$1$chosenAt$1$0, proposer$1$chosenAt$1$2, proposer$1$chosenAt$1$4, proposer$1$chosenAt$1$1, proposer$1$chosenAt$1$3, proposer$1$chosenAt$1$5]}

	sort: acceptor

	identical_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0; acceptor$0$member$0$2; acceptor$1$didNotPromise$0$0; acceptor$1$member$0$2, acceptor$0$member$0$1; acceptor$0$member$0$5; acceptor$1$didNotPromise$0$2; acceptor$1$member$0$1, acceptor$0$member$0$3; acceptor$0$member$0$4; acceptor$1$didNotPromise$0$1; acceptor$1$member$0$0]}

	identical_single_classes: {}

	identical_multi_classes: {'acceptor$0$member$0; acceptor$0$member$0; acceptor$1$didNotPromise$0; acceptor$1$member$0': [acceptor$0$member$0$0, acceptor$0$member$0$2, acceptor$1$didNotPromise$0$0, acceptor$1$member$0$2, acceptor$0$member$0$1, acceptor$0$member$0$5, acceptor$1$didNotPromise$0$2, acceptor$1$member$0$1, acceptor$0$member$0$3, acceptor$0$member$0$4, acceptor$1$didNotPromise$0$1, acceptor$1$member$0$0]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: quorum: QuantifierMode.forall

quantifier mode: proposer: QuantifierMode.forall_exists

quantifier mode: acceptor: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2'))), Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))}

exists_qvars: {Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$chosenAt': [[Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))], [Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2'))), Var('PROPOSER0', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '1$didNotPromise': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2')))]], '1$start': [[Var('PROPOSER1', EnumeratedSort('proposer', ('proposer0', 'proposer1', 'proposer2')))]], '0$member': [[Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]], '1$member': [[Var('ACCEPTOR2', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM0', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR1', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM1', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))], [Var('ACCEPTOR0', EnumeratedSort('acceptor', ('acceptor0', 'acceptor1', 'acceptor2'))), Var('QUORUM2', EnumeratedSort('quorum', ('quorum__acceptor0_acceptor1', 'quorum__acceptor0_acceptor2', 'quorum__acceptor1_acceptor2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['member(ACCEPTOR0,QUORUM0)', 'member(ACCEPTOR1,QUORUM0)', '~member(ACCEPTOR0,QUORUM2)', '~didNotPromise(ACCEPTOR1)', 'member(ACCEPTOR1,QUORUM2)', '~chosenAt(QUORUM0,PROPOSER0)', '~start(PROPOSER1)', '~didNotPromise(ACCEPTOR2)', '~chosenAt(QUORUM2,PROPOSER0)', '~member(ACCEPTOR1,QUORUM1)', '~chosenAt(QUORUM1,PROPOSER0)', 'member(ACCEPTOR0,QUORUM1)', 'member(ACCEPTOR2,QUORUM1)', 'member(ACCEPTOR2,QUORUM2)', '~didNotPromise(ACCEPTOR0)', '~member(ACCEPTOR2,QUORUM0)']


---------- QFormula: get_qclause ----------

qclause: forall ACCEPTOR0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | start(PROPOSER1) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)


===========================================================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

===========================================================================================================================


=== Prime Orbit 7 =====================
size : 9
num_suborbits: 1
96 (*) : ------------------11-------
96     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer1)']
97     : ------------------1-1------
97     : ['promise(acceptor1,proposer0)', 'promise(acceptor1,proposer2)']
98     : -------------------11------
98     : ['promise(acceptor1,proposer1)', 'promise(acceptor1,proposer2)']
99     : ---------------------11----
99     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer1)']
100     : ---------------------1-1---
100     : ['promise(acceptor2,proposer0)', 'promise(acceptor2,proposer2)']
101     : ----------------------11---
101     : ['promise(acceptor2,proposer1)', 'promise(acceptor2,proposer2)']
102     : ---------------11----------
102     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer1)']
103     : ---------------1-1---------
103     : ['promise(acceptor0,proposer0)', 'promise(acceptor0,proposer2)']
104     : ----------------11---------
104     : ['promise(acceptor0,proposer1)', 'promise(acceptor0,proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 2 =====================
size : 18
num_suborbits: 1
27 (*) : --1---------1--------------
27     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer0)']
28     : -1----------1--------------
28     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer0)']
29     : --1----------1-------------
29     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', 'leader(proposer1)']
30     : 1------------1-------------
30     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer1)']
31     : -1------------1------------
31     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', 'leader(proposer2)']
32     : 1-------------1------------
32     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', 'leader(proposer2)']
33     : -----1------1--------------
33     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer0)']
34     : ----1-------1--------------
34     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer0)']
35     : -----1-------1-------------
35     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', 'leader(proposer1)']
36     : ---1---------1-------------
36     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer1)']
37     : ----1---------1------------
37     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', 'leader(proposer2)']
38     : ---1----------1------------
38     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', 'leader(proposer2)']
39     : --------1---1--------------
39     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer0)']
40     : -------1----1--------------
40     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer0)']
41     : --------1----1-------------
41     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', 'leader(proposer1)']
42     : ------1------1-------------
42     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer1)']
43     : -------1------1------------
43     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', 'leader(proposer2)']
44     : ------1-------1------------
44     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1,QUORUM0. ~chosenAt(QUORUM0,PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 6




=== Prime Orbit 3 =====================
size : 3
num_suborbits: 1
45 (*) : ------------1-----------0--
45     : ['leader(proposer0)', '~start(proposer0)']
46     : -------------1-----------0-
46     : ['leader(proposer1)', '~start(proposer1)']
47     : --------------1-----------0
47     : ['leader(proposer2)', '~start(proposer2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0. start(PROPOSER0) | ~leader(PROPOSER0)
qcost : 3




=== Prime Orbit 4 =====================
size : 3
num_suborbits: 1
48 (*) : ------------1-1------------
48     : ['leader(proposer0)', 'leader(proposer2)']
49     : ------------11-------------
49     : ['leader(proposer0)', 'leader(proposer1)']
50     : -------------11------------
50     : ['leader(proposer1)', 'leader(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall PROPOSER0,PROPOSER1. ~leader(PROPOSER0) | ~leader(PROPOSER1) | PROPOSER0 = PROPOSER1
qcost : 5




=== Prime Orbit 5 =====================
size : 9
num_suborbits: 1
51 (*) : ------------------1-----0--
51     : ['promise(acceptor1,proposer0)', '~start(proposer0)']
52     : -------------------1-----0-
52     : ['promise(acceptor1,proposer1)', '~start(proposer1)']
53     : --------------------1-----0
53     : ['promise(acceptor1,proposer2)', '~start(proposer2)']
54     : ---------------------1--0--
54     : ['promise(acceptor2,proposer0)', '~start(proposer0)']
55     : ----------------------1--0-
55     : ['promise(acceptor2,proposer1)', '~start(proposer1)']
56     : -----------------------1--0
56     : ['promise(acceptor2,proposer2)', '~start(proposer2)']
57     : ---------------1--------0--
57     : ['promise(acceptor0,proposer0)', '~start(proposer0)']
58     : ----------------1--------0-
58     : ['promise(acceptor0,proposer1)', '~start(proposer1)']
59     : -----------------1--------0
59     : ['promise(acceptor0,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0)
qcost : 4




=== Prime Orbit 9 =====================
size : 9
num_suborbits: 1
123 (*) : ------1-----------------0--
123     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~start(proposer0)']
124     : -------1-----------------0-
124     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~start(proposer1)']
125     : --------1-----------------0
125     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~start(proposer2)']
126     : ---1--------------------0--
126     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~start(proposer0)']
127     : ----1--------------------0-
127     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~start(proposer1)']
128     : -----1--------------------0
128     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~start(proposer2)']
129     : 1-----------------------0--
129     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~start(proposer0)']
130     : -1-----------------------0-
130     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~start(proposer1)']
131     : --1-----------------------0
131     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~start(proposer2)']
num_forall :   2
num_exists :   0
num_literals : 2
quantified form : forall PROPOSER0,QUORUM0. start(PROPOSER0) | ~chosenAt(QUORUM0,PROPOSER0)
qcost : 4




=== Prime Orbit 11 =====================
size : 18
num_suborbits: 1
159 (*) : --------0-----1-1----------
159     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
160     : -------0-----1---1---------
160     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
161     : --------0-----11-----------
161     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
162     : ------0-----1----1---------
162     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
163     : -------0-----1-1-----------
163     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
164     : ------0-----1---1----------
164     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
165     : -----0--------1----1-------
165     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
166     : ----0--------1------1------
166     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
167     : -----0--------1---1--------
167     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
168     : ---0--------1-------1------
168     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
169     : ----0--------1----1--------
169     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
170     : ---0--------1------1-------
170     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
171     : --0-----------1-------1----
171     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
172     : -0-----------1---------1---
172     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
173     : --0-----------1------1-----
173     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
174     : 0-----------1----------1---
174     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
175     : -0-----------1-------1-----
175     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
176     : 0-----------1---------1----
176     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,PROPOSER1,QUORUM0,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | PROPOSER0 = PROPOSER1
qcost : 9




=== Prime Orbit 12 =====================
size : 36
num_suborbits: 1
177 (*) : --------------1-1------0---
177     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)']
178     : -------------1---1----0----
178     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)']
179     : --------------11-------0---
179     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)']
180     : ------------1----1---0-----
180     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)']
181     : -------------1-1------0----
181     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)']
182     : ------------1---1----0-----
182     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)']
183     : --------------1-1---0------
183     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)']
184     : -------------1---1-0-------
184     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)']
185     : --------------11----0------
185     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)']
186     : ------------1----10--------
186     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)']
187     : -------------1-1---0-------
187     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)']
188     : ------------1---1-0--------
188     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)']
189     : --------------1----1---0---
189     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)']
190     : -------------1------1-0----
190     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)']
191     : --------------1---1----0---
191     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)']
192     : ------------1-------10-----
192     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)']
193     : -------------1----1---0----
193     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)']
194     : ------------1------1-0-----
194     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)']
195     : --------------1--0-1-------
195     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer2)']
196     : -------------1--0---1------
196     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer1)']
197     : --------------1--01--------
197     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer2)']
198     : ------------1--0----1------
198     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', '~promise(acceptor0,proposer0)']
199     : -------------1--0-1--------
199     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', '~promise(acceptor0,proposer1)']
200     : ------------1--0---1-------
200     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', '~promise(acceptor0,proposer0)']
201     : --------------1-----0-1----
201     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer2)']
202     : -------------1-----0---1---
202     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer1)']
203     : --------------1-----01-----
203     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer2)']
204     : ------------1-----0----1---
204     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor1,proposer0)']
205     : -------------1-----0-1-----
205     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor1,proposer1)']
206     : ------------1-----0---1----
206     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor1,proposer0)']
207     : --------------1--0----1----
207     : ['leader(proposer2)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer2)']
208     : -------------1--0------1---
208     : ['leader(proposer1)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer1)']
209     : --------------1--0---1-----
209     : ['leader(proposer2)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer2)']
210     : ------------1--0-------1---
210     : ['leader(proposer0)', 'promise(acceptor2,proposer2)', '~promise(acceptor0,proposer0)']
211     : -------------1--0----1-----
211     : ['leader(proposer1)', 'promise(acceptor2,proposer0)', '~promise(acceptor0,proposer1)']
212     : ------------1--0------1----
212     : ['leader(proposer0)', 'promise(acceptor2,proposer1)', '~promise(acceptor0,proposer0)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,PROPOSER1,ACCEPTOR0,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | (ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 9




=== Prime Orbit 13 =====================
size : 36
num_suborbits: 2
213 (*) : --------------1-1-----1----
213     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
214     : -------------1---1-----1---
214     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
215     : --------------11-----1-----
215     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
216     : ------------1----1-----1---
216     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer2)']
217     : -------------1-1-----1-----
217     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer0)']
218     : ------------1---1-----1----
218     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer1)']
219     : --------------1-1--1-------
219     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
220     : -------------1---1--1------
220     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
221     : --------------11--1--------
221     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
222     : ------------1----1--1------
222     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer2)']
223     : -------------1-1--1--------
223     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer0)']
224     : ------------1---1--1-------
224     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer1)']
225     : --------------1----1--1----
225     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
226     : -------------1------1--1---
226     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
227     : --------------1---1--1-----
227     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
228     : ------------1-------1--1---
228     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer2)']
229     : -------------1----1--1-----
229     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer0)']
230     : ------------1------1--1----
230     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer1)']
276 (*) : --------------1-1-1--------
276     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)']
277     : -------------1---11--------
277     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)']
278     : --------------11---1-------
278     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)']
279     : ------------1----1-1-------
279     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)']
280     : -------------1-1----1------
280     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)']
281     : ------------1---1---1------
281     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)']
282     : --------------1-1----1-----
282     : ['leader(proposer2)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)']
283     : -------------1---1---1-----
283     : ['leader(proposer1)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)']
284     : --------------11------1----
284     : ['leader(proposer2)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)']
285     : ------------1----1----1----
285     : ['leader(proposer0)', 'promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)']
286     : -------------1-1-------1---
286     : ['leader(proposer1)', 'promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)']
287     : ------------1---1------1---
287     : ['leader(proposer0)', 'promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)']
288     : --------------1----1-1-----
288     : ['leader(proposer2)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)']
289     : -------------1------11-----
289     : ['leader(proposer1)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)']
290     : --------------1---1---1----
290     : ['leader(proposer2)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)']
291     : ------------1-------1-1----
291     : ['leader(proposer0)', 'promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)']
292     : -------------1----1----1---
292     : ['leader(proposer1)', 'promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)']
293     : ------------1------1---1---
293     : ['leader(proposer0)', 'promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)']
num_forall :   5
num_exists :   0
num_literals : 6
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,ACCEPTOR1. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR1,PROPOSER2) | ~leader(PROPOSER0) | (PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1)
qcost : 11




=== Prime Orbit 15 =====================
size : 36
num_suborbits: 1
240 (*) : -----------1--1-1----------
240     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
241     : -----------1-1---1---------
241     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
242     : -----------1--11-----------
242     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
243     : -----------11----1---------
243     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
244     : -----------1-1-1-----------
244     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
245     : -----------11---1----------
245     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
246     : ----------1---1-1----------
246     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer1)']
247     : ----------1--1---1---------
247     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer2)']
248     : ----------1---11-----------
248     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor0,proposer0)']
249     : ----------1-1----1---------
249     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer2)']
250     : ----------1--1-1-----------
250     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor0,proposer0)']
251     : ----------1-1---1----------
251     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor0,proposer1)']
252     : -----------1--1----1-------
252     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
253     : -----------1-1------1------
253     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
254     : -----------1--1---1--------
254     : ['didNotPromise(acceptor2)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
255     : -----------11-------1------
255     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
256     : -----------1-1----1--------
256     : ['didNotPromise(acceptor2)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
257     : -----------11------1-------
257     : ['didNotPromise(acceptor2)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
258     : ---------1----1----1-------
258     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer1)']
259     : ---------1---1------1------
259     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer2)']
260     : ---------1----1---1--------
260     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor1,proposer0)']
261     : ---------1--1-------1------
261     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer2)']
262     : ---------1---1----1--------
262     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor1,proposer0)']
263     : ---------1--1------1-------
263     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor1,proposer1)']
264     : ----------1---1-------1----
264     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
265     : ----------1--1---------1---
265     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
266     : ----------1---1------1-----
266     : ['didNotPromise(acceptor1)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
267     : ----------1-1----------1---
267     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
268     : ----------1--1-------1-----
268     : ['didNotPromise(acceptor1)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
269     : ----------1-1---------1----
269     : ['didNotPromise(acceptor1)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
270     : ---------1----1-------1----
270     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer1)']
271     : ---------1---1---------1---
271     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer2)']
272     : ---------1----1------1-----
272     : ['didNotPromise(acceptor0)', 'leader(proposer2)', 'promise(acceptor2,proposer0)']
273     : ---------1--1----------1---
273     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer2)']
274     : ---------1---1-------1-----
274     : ['didNotPromise(acceptor0)', 'leader(proposer1)', 'promise(acceptor2,proposer0)']
275     : ---------1--1---------1----
275     : ['didNotPromise(acceptor0)', 'leader(proposer0)', 'promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   0
num_literals : 5
quantified form : forall PROPOSER0,PROPOSER1,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~promise(ACCEPTOR1,PROPOSER1) | (PROPOSER0 = PROPOSER1 | ACCEPTOR0 = ACCEPTOR1)
qcost : 9




=== Prime Orbit 18 =====================
size : 9
num_suborbits: 1
321 (*) : -0-----------1--------0----
321     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
322     : --0-----------1--------0---
322     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
323     : 0-----------1--------0-----
323     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
324     : ----0--------1-----0-------
324     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~promise(acceptor1,proposer1)']
325     : -----0--------1-----0------
325     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~promise(acceptor1,proposer2)']
326     : ---0--------1-----0--------
326     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~promise(acceptor1,proposer0)']
327     : -------0-----1--0----------
327     : ['leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~promise(acceptor0,proposer1)']
328     : --------0-----1--0---------
328     : ['leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~promise(acceptor0,proposer2)']
329     : ------0-----1--0-----------
329     : ['leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~promise(acceptor0,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 19 =====================
size : 9
num_suborbits: 1
330 (*) : -------------1--0-----0----
330     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)']
331     : --------------1--0-----0---
331     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)']
332     : ------------1--0-----0-----
332     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)']
333     : -------------1--0--0-------
333     : ['leader(proposer1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)']
334     : --------------1--0--0------
334     : ['leader(proposer2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)']
335     : ------------1--0--0--------
335     : ['leader(proposer0)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)']
336     : -------------1-----0--0----
336     : ['leader(proposer1)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)']
337     : --------------1-----0--0---
337     : ['leader(proposer2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)']
338     : ------------1-----0--0-----
338     : ['leader(proposer0)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 20 =====================
size : 9
num_suborbits: 1
339 (*) : -0---------1-1-------------
339     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)']
340     : --0--------1--1------------
340     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)']
341     : 0----------11--------------
341     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)']
342     : ----0-----1--1-------------
342     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
343     : -----0----1---1------------
343     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
344     : ---0------1-1--------------
344     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
345     : -------0-1---1-------------
345     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
346     : --------01----1------------
346     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
347     : ------0--1--1--------------
347     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,QUORUM0,ACCEPTOR0. ~didNotPromise(ACCEPTOR0) | member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)
qcost : 7




=== Prime Orbit 21 =====================
size : 18
num_suborbits: 1
348 (*) : -----------1-1--0----------
348     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
349     : -----------1--1--0---------
349     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
350     : -----------11--0-----------
350     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
351     : ----------1--1--0----------
351     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor0,proposer1)']
352     : ----------1---1--0---------
352     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor0,proposer2)']
353     : ----------1-1--0-----------
353     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor0,proposer0)']
354     : -----------1-1-----0-------
354     : ['didNotPromise(acceptor2)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
355     : -----------1--1-----0------
355     : ['didNotPromise(acceptor2)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
356     : -----------11-----0--------
356     : ['didNotPromise(acceptor2)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
357     : ---------1---1-----0-------
357     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor1,proposer1)']
358     : ---------1----1-----0------
358     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor1,proposer2)']
359     : ---------1--1-----0--------
359     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor1,proposer0)']
360     : ----------1--1--------0----
360     : ['didNotPromise(acceptor1)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
361     : ----------1---1--------0---
361     : ['didNotPromise(acceptor1)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
362     : ----------1-1--------0-----
362     : ['didNotPromise(acceptor1)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
363     : ---------1---1--------0----
363     : ['didNotPromise(acceptor0)', 'leader(proposer1)', '~promise(acceptor2,proposer1)']
364     : ---------1----1--------0---
364     : ['didNotPromise(acceptor0)', 'leader(proposer2)', '~promise(acceptor2,proposer2)']
365     : ---------1--1--------0-----
365     : ['didNotPromise(acceptor0)', 'leader(proposer0)', '~promise(acceptor2,proposer0)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | promise(ACCEPTOR1,PROPOSER0) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 22 =====================
size : 9
num_suborbits: 1
366 (*) : ---------1-11--------------
366     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
367     : ---------1-1-1-------------
367     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
368     : ---------1-1--1------------
368     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
369     : ---------11-1--------------
369     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer0)']
370     : ---------11--1-------------
370     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer1)']
371     : ---------11---1------------
371     : ['didNotPromise(acceptor0)', 'didNotPromise(acceptor1)', 'leader(proposer2)']
372     : ----------111--------------
372     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer0)']
373     : ----------11-1-------------
373     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer1)']
374     : ----------11--1------------
374     : ['didNotPromise(acceptor1)', 'didNotPromise(acceptor2)', 'leader(proposer2)']
num_forall :   3
num_exists :   0
num_literals : 4
quantified form : forall PROPOSER0,ACCEPTOR0,ACCEPTOR1. ~didNotPromise(ACCEPTOR0) | ~leader(PROPOSER0) | ~didNotPromise(ACCEPTOR1) | ACCEPTOR0 = ACCEPTOR1
qcost : 7




=== Prime Orbit 23 =====================
size : 9
num_suborbits: 1
375 (*) : 0--0--------1--1-----------
375     : ['leader(proposer0)', 'promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)']
376     : -0--0--------1--1----------
376     : ['leader(proposer1)', 'promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)']
377     : --0--0--------1--1---------
377     : ['leader(proposer2)', 'promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)']
378     : 0-----0-----1-----1--------
378     : ['leader(proposer0)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
379     : -0-----0-----1-----1-------
379     : ['leader(proposer1)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
380     : --0-----0-----1-----1------
380     : ['leader(proposer2)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
381     : ---0--0-----1--------1-----
381     : ['leader(proposer0)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
382     : ----0--0-----1--------1----
382     : ['leader(proposer1)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
383     : -----0--0-----1--------1---
383     : ['leader(proposer2)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
num_forall :   4
num_exists :   0
num_literals : 7
quantified form : forall QUORUM1,QUORUM0,ACCEPTOR0,PROPOSER0. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | QUORUM0 = QUORUM1
qcost : 11




=== Prime Orbit 24 =====================
size : 3
num_suborbits: 1
384 (*) : -0--0--0-----1-------------
384     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)']
385     : --0--0--0-----1------------
385     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)']
386     : 0--0--0-----1--------------
386     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0))
qcost : 4




=== Prime Orbit 26 =====================
size : 9
num_suborbits: 1
390 (*) : ----------0--------00---0--
390     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
391     : ----------0-------0-0----0-
391     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
392     : ----------0-------00------0
392     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
393     : -----------0----------000--
393     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
394     : -----------0---------0-0-0-
394     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
395     : -----------0---------00---0
395     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
396     : ---------0------00------0--
396     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
397     : ---------0-----0-0-------0-
397     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
398     : ---------0-----00---------0
398     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. start(PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 27 =====================
size : 9
num_suborbits: 1
399 (*) : ---------0-------0------00-
399     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)', '~start(proposer1)']
400     : ---------0------0-------0-0
400     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)', '~start(proposer2)']
401     : ---------0-----0---------00
401     : ['~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)', '~start(proposer2)']
402     : ----------0---------0---00-
402     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)', '~start(proposer1)']
403     : ----------0--------0----0-0
403     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)', '~start(proposer2)']
404     : ----------0-------0------00
404     : ['~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)', '~start(proposer2)']
405     : -----------0-----------000-
405     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)', '~start(proposer1)']
406     : -----------0----------0-0-0
406     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)', '~start(proposer2)']
407     : -----------0---------0---00
407     : ['~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   2
num_exists :   1
num_literals : 4
quantified form : forall PROPOSER1,ACCEPTOR0. promise(ACCEPTOR0,PROPOSER1) | didNotPromise(ACCEPTOR0) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1))
qcost : 7




=== Prime Orbit 28 =====================
size : 3
num_suborbits: 1
408 (*) : ---------0--------------000
408     : ['~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
409     : ----------0-------------000
409     : ['~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
410     : -----------0------------000
410     : ['~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   1
num_exists :   1
num_literals : 2
quantified form : forall ACCEPTOR0. (exists PROPOSER0. start(PROPOSER0) | didNotPromise(ACCEPTOR0))
qcost : 4




=== Prime Orbit 29 =====================
size : 36
num_suborbits: 1
411 (*) : -0-------0-----0---1------0
411     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
412     : --0------0-----0----1----0-
412     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
413     : 0--------0------0-1-------0
413     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
414     : --0------0------0---1---0--
414     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
415     : 0--------0-------01------0-
415     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
416     : -0-------0-------0-1----0--
416     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
417     : ----0----0-----0------1---0
417     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
418     : -----0---0-----0-------1-0-
418     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
419     : ---0-----0------0----1----0
419     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
420     : -----0---0------0------10--
420     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
421     : ---0-----0-------0---1---0-
421     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
422     : ----0----0-------0----1-0--
422     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
423     : -0--------0-----1-0-------0
423     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
424     : --0-------0------10------0-
424     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
425     : 0---------0----1---0------0
425     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
426     : --0-------0------1-0----0--
426     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
427     : 0---------0----1----0----0-
427     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
428     : -0--------0-----1---0---0--
428     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
429     : -------0--0-------0---1---0
429     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
430     : --------0-0-------0----1-0-
430     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
431     : ------0---0--------0-1----0
431     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
432     : --------0-0--------0---10--
432     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
433     : ------0---0---------01---0-
433     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
434     : -------0--0---------0-1-0--
434     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
435     : ----0------0----1----0----0
435     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
436     : -----0-----0-----1---0---0-
436     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
437     : ---0-------0---1------0---0
437     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
438     : -----0-----0-----1----0-0--
438     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
439     : ---0-------0---1-------0-0-
439     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
440     : ----0------0----1------00--
440     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
441     : -------0---0-------1-0----0
441     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
442     : --------0--0--------10---0-
442     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
443     : ------0----0------1---0---0
443     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
444     : --------0--0--------1-0-0--
444     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
445     : ------0----0------1----0-0-
445     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
446     : -------0---0-------1---00--
446     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | ~promise(ACCEPTOR1,PROPOSER0) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 1
447 (*) : -------0---0-------1----0-0
447     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
448     : --------0--0--------1---00-
448     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
449     : ------0----0------1------00
449     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
450     : -------0--0-----------1-0-0
450     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
451     : --------0-0------------100-
451     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
452     : ------0---0----------1---00
452     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
453     : ----0------0----1-------0-0
453     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
454     : -----0-----0-----1------00-
454     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
455     : ---0-------0---1---------00
455     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
456     : ----0----0------------1-0-0
456     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
457     : -----0---0-------------100-
457     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
458     : ---0-----0-----------1---00
458     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
459     : -0--------0-----1-------0-0
459     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
460     : --0-------0------1------00-
460     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
461     : 0---------0----1---------00
461     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
462     : -0-------0---------1----0-0
462     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
463     : --0------0----------1---00-
463     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
464     : 0--------0--------1------00
464     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,QUORUM0,ACCEPTOR0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | didNotPromise(ACCEPTOR1) | ~promise(ACCEPTOR0,PROPOSER1) | ~member(ACCEPTOR1,QUORUM0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 32 =====================
size : 18
num_suborbits: 1
483 (*) : -0-----1-0--------------0-0
483     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
484     : --0-----10--------------00-
484     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
485     : 0-----1--0---------------00
485     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
486     : ----0--1-0--------------0-0
486     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
487     : -----0--10--------------00-
487     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
488     : ---0--1--0---------------00
488     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
489     : -0--1-----0-------------0-0
489     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
490     : --0--1----0-------------00-
490     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
491     : 0--1------0--------------00
491     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
492     : ----1--0--0-------------0-0
492     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
493     : -----1--0-0-------------00-
493     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
494     : ---1--0---0--------------00
494     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
495     : -1--0------0------------0-0
495     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
496     : --1--0-----0------------00-
496     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
497     : 1--0-------0-------------00
497     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
498     : -1-----0---0------------0-0
498     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
499     : --1-----0--0------------00-
499     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
500     : 1-----0----0-------------00
500     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR0,QUORUM1) | chosenAt(QUORUM1,PROPOSER1) | didNotPromise(ACCEPTOR0) | ~chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 13




=== Prime Orbit 33 =====================
size : 36
num_suborbits: 1
501 (*) : -0-----1-0-----0----------0
501     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
502     : --0-----10-----0---------0-
502     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
503     : 0-----1--0------0---------0
503     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
504     : --0-----10------0-------0--
504     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
505     : 0-----1--0-------0-------0-
505     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
506     : -0-----1-0-------0------0--
506     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
507     : ----0--1-0-----0----------0
507     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
508     : -----0--10-----0---------0-
508     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
509     : ---0--1--0------0---------0
509     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
510     : -----0--10------0-------0--
510     : ['chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
511     : ---0--1--0-------0-------0-
511     : ['chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
512     : ----0--1-0-------0------0--
512     : ['chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
513     : -0--1-----0-------0-------0
513     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
514     : --0--1----0-------0------0-
514     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
515     : 0--1------0--------0------0
515     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
516     : --0--1----0--------0----0--
516     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
517     : 0--1------0---------0----0-
517     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
518     : -0--1-----0---------0---0--
518     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
519     : ----1--0--0-------0-------0
519     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
520     : -----1--0-0-------0------0-
520     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
521     : ---1--0---0--------0------0
521     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
522     : -----1--0-0--------0----0--
522     : ['chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
523     : ---1--0---0---------0----0-
523     : ['chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
524     : ----1--0--0---------0---0--
524     : ['chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
525     : -1--0------0---------0----0
525     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
526     : --1--0-----0---------0---0-
526     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
527     : 1--0-------0----------0---0
527     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
528     : --1--0-----0----------0-0--
528     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
529     : 1--0-------0-----------0-0-
529     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
530     : -1--0------0-----------00--
530     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
531     : -1-----0---0---------0----0
531     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
532     : --1-----0--0---------0---0-
532     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
533     : 1-----0----0----------0---0
533     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
534     : --1-----0--0----------0-0--
534     : ['chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
535     : 1-----0----0-----------0-0-
535     : ['chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
536     : -1-----0---0-----------00--
536     : ['chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 11
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM0,PROPOSER2. start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | member(ACCEPTOR0,QUORUM0) | ~chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 17




=== Prime Orbit 34 =====================
size : 9
num_suborbits: 1
537 (*) : -------0--00------------0-0
537     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
538     : --------0-00------------00-
538     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
539     : ------0---00-------------00
539     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
540     : ----0----0-0------------0-0
540     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
541     : -----0---0-0------------00-
541     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
542     : ---0-----0-0-------------00
542     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
543     : -0-------00-------------0-0
543     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
544     : --0------00-------------00-
544     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
545     : 0--------00--------------00
545     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
num_forall :   4
num_exists :   1
num_literals : 8
quantified form : forall PROPOSER1,QUORUM0,ACCEPTOR0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | didNotPromise(ACCEPTOR1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | ACCEPTOR0 = ACCEPTOR1
qcost : 13




=== Prime Orbit 36 =====================
size : 18
num_suborbits: 1
564 (*) : 0------0--0----1------1---0
564     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer2)']
565     : 0-------0-0----1-------1-0-
565     : ['promise(acceptor0,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer1)']
566     : -0----0---0-----1----1----0
566     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
567     : -0------0-0-----1------10--
567     : ['promise(acceptor0,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)']
568     : --0---0---0------1---1---0-
568     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
569     : --0----0--0------1----1-0--
569     : ['promise(acceptor0,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)']
570     : ---0---0---0---1---1------0
570     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
571     : ---0----0--0---1----1----0-
571     : ['promise(acceptor0,proposer0)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer1)']
572     : ----0-0----0----1-1-------0
572     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
573     : ----0---0--0----1---1---0--
573     : ['promise(acceptor0,proposer1)', 'promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)']
574     : -----00----0-----11------0-
574     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
575     : -----0-0---0-----1-1----0--
575     : ['promise(acceptor0,proposer2)', 'promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
576     : 0---0----0--------1---1---0
576     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer2)']
577     : 0----0---0--------1----1-0-
577     : ['promise(acceptor1,proposer0)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer1)']
578     : -0-0-----0---------1-1----0
578     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer2)']
579     : -0---0---0---------1---10--
579     : ['promise(acceptor1,proposer1)', 'promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)']
580     : --00-----0----------11---0-
580     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)']
581     : --0-0----0----------1-1-0--
581     : ['promise(acceptor1,proposer2)', 'promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 19
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | ~promise(ACCEPTOR2,PROPOSER1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)
qcost : 27




=== Prime Orbit 38 =====================
size : 18
num_suborbits: 1
600 (*) : ---0--0----01---------0---0
600     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
601     : ---0--0----01----------0-0-
601     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
602     : ----0--0---0-1-------0----0
602     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
603     : ----0--0---0-1---------00--
603     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
604     : -----0--0--0--1------0---0-
604     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
605     : -----0--0--0--1-------0-0--
605     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
606     : 0-----0---0-1------0------0
606     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
607     : 0-----0---0-1-------0----0-
607     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
608     : -0-----0--0--1----0-------0
608     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
609     : -0-----0--0--1------0---0--
609     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
610     : --0-----0-0---1---0------0-
610     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
611     : --0-----0-0---1----0----0--
611     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
612     : 0--0-----0--1---0---------0
612     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
613     : 0--0-----0--1----0-------0-
613     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
614     : -0--0----0---1-0----------0
614     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
615     : -0--0----0---1---0------0--
615     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
616     : --0--0---0----10---------0-
616     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
617     : --0--0---0----1-0-------0--
617     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM0,PROPOSER2. ~member(ACCEPTOR0,QUORUM0) | start(PROPOSER2) | promise(ACCEPTOR0,PROPOSER1) | ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | QUORUM0 = QUORUM1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 39 =====================
size : 9
num_suborbits: 1
618 (*) : ---0--0----01------------00
618     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~start(proposer1)', '~start(proposer2)']
619     : ----0--0---0-1----------0-0
619     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer2)']
620     : -----0--0--0--1---------00-
620     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~start(proposer0)', '~start(proposer1)']
621     : 0-----0---0-1------------00
621     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~start(proposer1)', '~start(proposer2)']
622     : -0-----0--0--1----------0-0
622     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer2)']
623     : --0-----0-0---1---------00-
623     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~start(proposer0)', '~start(proposer1)']
624     : 0--0-----0--1------------00
624     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~start(proposer1)', '~start(proposer2)']
625     : -0--0----0---1----------0-0
625     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer2)']
626     : --0--0---0----1---------00-
626     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~start(proposer0)', '~start(proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (start(PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 40 =====================
size : 9
num_suborbits: 1
627 (*) : 0--0-----0--1---00---------
627     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer1)', '~promise(acceptor0,proposer2)']
628     : -0--0----0---1-0-0---------
628     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer2)']
629     : --0--0---0----100----------
629     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~promise(acceptor0,proposer0)', '~promise(acceptor0,proposer1)']
630     : 0-----0---0-1------00------
630     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~promise(acceptor1,proposer2)']
631     : -0-----0--0--1----0-0------
631     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer2)']
632     : --0-----0-0---1---00-------
632     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~promise(acceptor1,proposer1)']
633     : ---0--0----01---------00---
633     : ['leader(proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~promise(acceptor2,proposer2)']
634     : ----0--0---0-1-------0-0---
634     : ['leader(proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer2)']
635     : -----0--0--0--1------00----
635     : ['leader(proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~promise(acceptor2,proposer1)']
num_forall :   4
num_exists :   1
num_literals : 9
quantified form : forall QUORUM1,PROPOSER1,QUORUM0,ACCEPTOR0. ~member(ACCEPTOR0,QUORUM0) | ~leader(PROPOSER1) | ~member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | chosenAt(QUORUM1,PROPOSER1) | (exists PROPOSER0. (promise(ACCEPTOR0,PROPOSER0) & PROPOSER0 ~= PROPOSER1)) | QUORUM0 = QUORUM1
qcost : 14




=== Prime Orbit 41 =====================
size : 18
num_suborbits: 1
636 (*) : ------0---00-------0--0---0
636     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
637     : ------0---00--------0--0-0-
637     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
638     : -------0--00------0--0----0
638     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
639     : -------0--00--------0--00--
639     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
640     : --------0-00------0--0---0-
640     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
641     : --------0-00-------0--0-0--
641     : ['~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
642     : ---0-----0-0----0-----0---0
642     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
643     : ---0-----0-0-----0-----0-0-
643     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
644     : ----0----0-0---0-----0----0
644     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
645     : ----0----0-0-----0-----00--
645     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
646     : -----0---0-0---0-----0---0-
646     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
647     : -----0---0-0----0-----0-0--
647     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
648     : 0--------00-----0--0------0
648     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
649     : 0--------00------0--0----0-
649     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
650     : -0-------00----0--0-------0
650     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
651     : -0-------00------0--0---0--
651     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
652     : --0------00----0--0------0-
652     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
653     : --0------00-----0--0----0--
653     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
num_forall :   6
num_exists :   0
num_literals : 12
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR1,PROPOSER1) | didNotPromise(ACCEPTOR0) | (PROPOSER0 = PROPOSER2 | PROPOSER1 = PROPOSER2 | ACCEPTOR0 = ACCEPTOR1 | PROPOSER0 = PROPOSER1)
qcost : 18




=== Prime Orbit 42 =====================
size : 18
num_suborbits: 1
654 (*) : --0--00---00-----1-------0-
654     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
655     : -0--0-0---00----1---------0
655     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
656     : --0--0-0--00-----1------0--
656     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
657     : 0--0---0--00---1----------0
657     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
658     : -0--0---0-00----1-------0--
658     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
659     : 0--0----0-00---1---------0-
659     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
660     : --00----00-0--------1----0-
660     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
661     : -0-0---0-0-0-------1------0
661     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
662     : --0-0---00-0--------1---0--
662     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
663     : 0---0-0--0-0------1-------0
663     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer2)']
664     : -0---0-0-0-0-------1----0--
664     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer0)']
665     : 0----00--0-0------1------0-
665     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~start(proposer1)']
666     : 0----0--000------------1-0-
666     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
667     : 0---0--0-00-----------1---0
667     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
668     : -0---0--000------------10--
668     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
669     : -0-0--0--00----------1----0
669     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer2)']
670     : --0-0--0-00-----------1-0--
670     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer0)']
671     : --00--0--00----------1---0-
671     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~start(proposer1)']
num_forall :   9
num_exists :   0
num_literals : 25
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,PROPOSER2,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | chosenAt(QUORUM0,PROPOSER0) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | chosenAt(QUORUM2,PROPOSER1) | member(ACCEPTOR2,QUORUM0) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 34




=== Prime Orbit 43 =====================
size : 36
num_suborbits: 1
672 (*) : -----00---00-----1--0----0-
672     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
673     : ----0-0---00----1--0------0
673     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
674     : -----0-0--00-----1--0---0--
674     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
675     : ---0---0--00---1--0-------0
675     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
676     : ----0---0-00----1--0----0--
676     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
677     : ---0----0-00---1--0------0-
677     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
678     : --0---0---00-----1-----0-0-
678     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
679     : -0----0---00----1-----0---0
679     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
680     : --0----0--00-----1-----00--
680     : ['promise(acceptor0,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
681     : 0------0--00---1-----0----0
681     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
682     : -0------0-00----1-----0-0--
682     : ['promise(acceptor0,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
683     : 0-------0-00---1-----0---0-
683     : ['promise(acceptor0,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
684     : ---0----00-0-----0--1----0-
684     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
685     : ---0---0-0-0----0--1------0
685     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
686     : ----0---00-0-----0--1---0--
686     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
687     : ----0-0--0-0---0--1-------0
687     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
688     : -----0-0-0-0----0--1----0--
688     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
689     : -----00--0-0---0--1------0-
689     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
690     : --00-----0-0--------1--0-0-
690     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
691     : -0-0-----0-0-------1--0---0
691     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
692     : --0-0----0-0--------1--00--
692     : ['promise(acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
693     : 0---0----0-0------1--0----0
693     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
694     : -0---0---0-0-------1--0-0--
694     : ['promise(acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
695     : 0----0---0-0------1--0---0-
695     : ['promise(acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
696     : 0-------000------0-----1-0-
696     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
697     : 0------0-00-----0-----1---0
697     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
698     : -0------000------0-----10--
698     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
699     : -0----0--00----0-----1----0
699     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
700     : --0----0-00-----0-----1-0--
700     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
701     : --0---0--00----0-----1---0-
701     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
702     : 0----0---00---------0--1-0-
702     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
703     : 0---0----00--------0--1---0
703     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
704     : -0---0---00---------0--10--
704     : ['promise(acceptor2,proposer2)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
705     : -0-0-----00-------0--1----0
705     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
706     : --0-0----00--------0--1-0--
706     : ['promise(acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
707     : --00-----00-------0--1---0-
707     : ['promise(acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
num_forall :   8
num_exists :   0
num_literals : 20
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~promise(ACCEPTOR0,PROPOSER0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)
qcost : 28




=== Prime Orbit 47 =====================
size : 18
num_suborbits: 1
771 (*) : 0---0-0--000-------0------0
771     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
772     : 0----00--000--------0----0-
772     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
773     : -0-0---0-000------0-------0
773     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
774     : -0---0-0-000--------0---0--
774     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
775     : --00----0000------0------0-
775     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
776     : --0-0---0000-------0----0--
776     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
777     : -0-0--0--000----------0---0
777     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
778     : --00--0--000-----------0-0-
778     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
779     : 0---0--0-000---------0----0
779     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
780     : --0-0--0-000-----------00--
780     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
781     : 0----0--0000---------0---0-
781     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
782     : -0---0--0000----------0-0--
782     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
783     : 0--0---0-000----0---------0
783     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer2)']
784     : 0--0----0000-----0-------0-
784     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer1)']
785     : -0--0-0--000---0----------0
785     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer2)']
786     : -0--0---0000-----0------0--
786     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~start(proposer0)']
787     : --0--00--000---0---------0-
787     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~start(proposer1)']
788     : --0--0-0-000----0-------0--
788     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~start(proposer0)']
num_forall :   9
num_exists :   0
num_literals : 26
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,PROPOSER2,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | promise(ACCEPTOR2,PROPOSER1) | didNotPromise(ACCEPTOR2) | chosenAt(QUORUM2,PROPOSER0) | member(ACCEPTOR2,QUORUM0) | member(ACCEPTOR1,QUORUM1) | chosenAt(QUORUM1,PROPOSER0) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | chosenAt(QUORUM0,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | QUORUM1 = QUORUM2 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 35




=== Prime Orbit 48 =====================
size : 18
num_suborbits: 1
789 (*) : ----0-0--000---0---0------0
789     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer1)', '~start(proposer2)']
790     : -----00--000---0----0----0-
790     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor1,proposer2)', '~start(proposer1)']
791     : ---0---0-000----0-0-------0
791     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer0)', '~start(proposer2)']
792     : -----0-0-000----0---0---0--
792     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor1,proposer2)', '~start(proposer0)']
793     : ---0----0000-----00------0-
793     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer0)', '~start(proposer1)']
794     : ----0---0000-----0-0----0--
794     : ['~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor1,proposer1)', '~start(proposer0)']
795     : -0----0--000---0------0---0
795     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
796     : --0---0--000---0-------0-0-
796     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
797     : 0------0-000----0----0----0
797     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
798     : --0----0-000----0------00--
798     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
799     : 0-------0000-----0---0---0-
799     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
800     : -0------0000-----0----0-0--
800     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor0,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
801     : -0-0-----000------0---0---0
801     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer1)', '~start(proposer2)']
802     : --00-----000------0----0-0-
802     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer0)', '~promise(acceptor2,proposer2)', '~start(proposer1)']
803     : 0---0----000-------0-0----0
803     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer0)', '~start(proposer2)']
804     : --0-0----000-------0---00--
804     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer1)', '~promise(acceptor2,proposer2)', '~start(proposer0)']
805     : 0----0---000--------00---0-
805     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer0)', '~start(proposer1)']
806     : -0---0---000--------0-0-0--
806     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~promise(acceptor1,proposer2)', '~promise(acceptor2,proposer1)', '~start(proposer0)']
num_forall :   8
num_exists :   0
num_literals : 21
quantified form : forall ACCEPTOR0,PROPOSER0,PROPOSER1,PROPOSER2,QUORUM1,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | start(PROPOSER2) | didNotPromise(ACCEPTOR1) | promise(ACCEPTOR0,PROPOSER1) | chosenAt(QUORUM0,PROPOSER0) | promise(ACCEPTOR2,PROPOSER0) | ~member(ACCEPTOR1,QUORUM1) | member(ACCEPTOR0,QUORUM1) | didNotPromise(ACCEPTOR2) | ~member(ACCEPTOR2,QUORUM1) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | chosenAt(QUORUM1,PROPOSER1) | (ACCEPTOR0 = ACCEPTOR2 | PROPOSER1 = PROPOSER2 | PROPOSER0 = PROPOSER1 | PROPOSER0 = PROPOSER2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM1)
qcost : 29




=== Prime Orbit 49 =====================
size : 3
num_suborbits: 1
807 (*) : 00-00-00-000--------------0
807     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer2)']
808     : 0-00-00-0000-------------0-
808     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer0)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer0)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer0)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer1)']
809     : -00-00-00000------------0--
809     : ['~chosenAt(quorum__acceptor0_acceptor1,proposer1)', '~chosenAt(quorum__acceptor0_acceptor1,proposer2)', '~chosenAt(quorum__acceptor0_acceptor2,proposer1)', '~chosenAt(quorum__acceptor0_acceptor2,proposer2)', '~chosenAt(quorum__acceptor1_acceptor2,proposer1)', '~chosenAt(quorum__acceptor1_acceptor2,proposer2)', '~didNotPromise(acceptor0)', '~didNotPromise(acceptor1)', '~didNotPromise(acceptor2)', '~start(proposer0)']
num_forall :   7
num_exists :   1
num_literals : 23
quantified form : forall ACCEPTOR0,PROPOSER1,QUORUM1,QUORUM2,ACCEPTOR2,QUORUM0,ACCEPTOR1. ~member(ACCEPTOR0,QUORUM0) | ~member(ACCEPTOR1,QUORUM0) | member(ACCEPTOR0,QUORUM2) | didNotPromise(ACCEPTOR1) | ~member(ACCEPTOR1,QUORUM2) | start(PROPOSER1) | didNotPromise(ACCEPTOR2) | member(ACCEPTOR1,QUORUM1) | ~member(ACCEPTOR0,QUORUM1) | ~member(ACCEPTOR2,QUORUM1) | ~member(ACCEPTOR2,QUORUM2) | didNotPromise(ACCEPTOR0) | member(ACCEPTOR2,QUORUM0) | (exists PROPOSER0. ((chosenAt(QUORUM0,PROPOSER0) | chosenAt(QUORUM2,PROPOSER0) | chosenAt(QUORUM1,PROPOSER0)) & PROPOSER0 ~= PROPOSER1)) | (ACCEPTOR0 = ACCEPTOR2 | QUORUM1 = QUORUM2 | ACCEPTOR1 = ACCEPTOR2 | ACCEPTOR0 = ACCEPTOR1 | QUORUM0 = QUORUM2 | QUORUM0 = QUORUM1)
qcost : 31



[QRM NOTE]: Time elapsed since start: 11.120 seconds

[QRM NOTE]: Time elapsed since last: 2.318 seconds

[QRM NOTE]: Peak memory: 3324743 bytes


==========================================================================================================

	[MIN]: Minimization on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

==========================================================================================================


New level: 1
 pending : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Before reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 1 among pending : [2, 3, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 3 with phase True at level 1

After decision at level 1
 pending : [2, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


New level: 2
 pending : [2, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


Before reduction : 
 pending  : [2, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, 17179869184), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 2 among pending : [2, 4, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


New level: 3
 pending : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, 4294967296), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 3 among pending : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]


New level: 4
 pending : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [2, 5, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, 536870912), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 40, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 9, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [5, 9, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 9, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24]


Solution : [7, 3, 4, 24] has cost 18.


Decide in level 4 among pending : [5, 9, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 9, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28]


New level: 5
 pending : [5, 9, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28]


Before reduction : 
 pending  : [5, 9, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 9, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28]


Solution : [7, 3, 4, 24, 28] has cost 22.


Decide in level 5 among pending : [5, 9, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [5, 9, 26, 27, 29, 30, 32, 33, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


New level: 6
 pending : [5, 9, 26, 27, 29, 30, 32, 33, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


Before reduction : 
 pending  : [5, 9, 26, 27, 29, 30, 32, 33, 36, 38, 39, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [5, 9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


Before reduction : 
 pending  : [5, 9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


Solution : [7, 3, 4, 24, 28, 34] has cost 35.


Decide in level 6 among pending : [5, 9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34, 5]


New level: 7
 pending : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34, 5]


Before reduction : 
 pending  : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 38, 9, 41, 42, 43, 47, 48, 49, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 5]


Solution : [7, 3, 4, 24, 28, 34, 5] has cost 39.


Before backtrack at level 7
 pending : []
 solution : [7, 3, 4, 24, 28, 34, 5]

After backtrack at level 7
 pending : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


Before reduction : 
 pending  : [9, 26, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]

Essensial at level 7 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {33, 36, 38, 9, 41, 42, 43, 47, 48, 49, 27, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 26]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 34, 26]


Solution : [7, 3, 4, 24, 28, 34, 26] has cost 42.


Before backtrack at level 7
 pending : []
 solution : [7, 3, 4, 24, 28, 34, 26]

After backtrack at level 7
 pending : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]


Before backtrack at level 6
 pending : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 34]

After backtrack at level 6
 pending : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28]


Before reduction : 
 pending  : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28]


Solution : [7, 3, 4, 24, 28] has cost 22.


Decide in level 6 among pending : [26, 9, 27, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28, 27]


New level: 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27]


Solution : [7, 3, 4, 24, 28, 27] has cost 29.


Decide in level 7 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27, 26]


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27, 26]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 9, 41, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 26]


Solution : [7, 3, 4, 24, 28, 27, 26] has cost 36.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 28, 27, 26]

After backtrack at level 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 28, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 9, 41, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 27, 5]


Solution : [7, 3, 4, 24, 28, 27, 5] has cost 33.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 28, 27, 5]

After backtrack at level 8
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 27]


Before backtrack at level 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 28, 27]

After backtrack at level 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28]


Solution : [7, 3, 4, 24, 28] has cost 22.


Decide in level 7 among pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28, 5]


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28, 5]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 41, 42, 43, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 5]


Solution : [7, 3, 4, 24, 28, 5] has cost 26.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 28, 5]

After backtrack at level 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 41, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 28, 26]


Solution : [7, 3, 4, 24, 28, 26] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 28, 26]

After backtrack at level 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39]
 solution : [7, 3, 4, 24, 28]


Before backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39]
 solution : [7, 3, 4, 24, 28]

After backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28]


Before backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24, 28]

After backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24, 28]


Before backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24, 28]

After backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24]


Solution : [7, 3, 4, 24] has cost 18.


Decide in level 5 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24, 34]


New level: 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24, 34]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 24, 34]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 24, 34]


Solution : [7, 3, 4, 24, 34] has cost 31.


Before backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27]
 solution : [7, 3, 4, 24, 34]

After backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 39]
 solution : [7, 3, 4, 24, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 39]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 39]
 solution : [7, 3, 4, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 39]
 solution : [7, 3, 4, 24]


Solution : [7, 3, 4, 24] has cost 18.


Decide in level 6 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 39]
 solution : [7, 3, 4, 24, 27]


New level: 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 39]
 solution : [7, 3, 4, 24, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 39]
 solution : [7, 3, 4, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27]


Solution : [7, 3, 4, 24, 27] has cost 25.


Decide in level 7 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27, 26]


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27, 26]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 9, 41, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 26]


Solution : [7, 3, 4, 24, 27, 26] has cost 32.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 27, 26]

After backtrack at level 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5]
 solution : [7, 3, 4, 24, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 9, 41, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 27, 5]


Solution : [7, 3, 4, 24, 27, 5] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 27, 5]

After backtrack at level 8
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 27]


Before backtrack at level 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 24, 27]

After backtrack at level 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24]


Solution : [7, 3, 4, 24] has cost 18.


Decide in level 7 among pending : [5, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 5]


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 5]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 41, 42, 43, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 5]


Solution : [7, 3, 4, 24, 5] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 5]

After backtrack at level 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 26]
 solution : [7, 3, 4, 24]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 41, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 24, 26]


Solution : [7, 3, 4, 24, 26] has cost 25.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 4, 24, 26]

After backtrack at level 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39]
 solution : [7, 3, 4, 24]


Before backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39]
 solution : [7, 3, 4, 24]

After backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24]


Before backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5]
 solution : [7, 3, 4, 24]

After backtrack at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24]


Before backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27]
 solution : [7, 3, 4, 24]

After backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24]


Before backtrack at level 4
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 4, 24]

After backtrack at level 4
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 4 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 34, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]


New level: 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 30, 32, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 30}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]


Solution : [7, 3, 4, 34] has cost 27.


Before backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28]
 solution : [7, 3, 4, 34]

After backtrack at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28, 30, 32]
 solution : [7, 3, 4, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28, 30, 32]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28, 30, 32]
 solution : [7, 3, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, 536870912), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 4096), (40, 524288), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28, 30, 32]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 5 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 28, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]


New level: 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 6 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 40, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 18]


New level: 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 18]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32]
 solution : [7, 3, 4, 28, 18]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32]
 solution : [7, 3, 4, 28, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32]
 solution : [7, 3, 4, 28, 18]


Solution : [7, 3, 4, 28, 18] has cost 25.


Before backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32]
 solution : [7, 3, 4, 28, 18]

After backtrack at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 7 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 39, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]


New level: 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]


Solution : [7, 3, 4, 28, 39] has cost 32.


Before backtrack at level 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]

After backtrack at level 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 8 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 27, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]


New level: 9
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 30}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]


Solution : [7, 3, 4, 28, 27] has cost 25.


Before backtrack at level 9
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 27]

After backtrack at level 9
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 9 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 19, 20, 21, 22, 23, 40, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 19]


New level: 10
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 19]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 30, 32]
 solution : [7, 3, 4, 28, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28, 19]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28, 19]


Solution : [7, 3, 4, 28, 19] has cost 25.


Before backtrack at level 10
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28, 19]

After backtrack at level 10
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28]


Solution : [7, 3, 4, 28] has cost 18.


Decide in level 10 among pending : [26, 9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]


New level: 11
 pending : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]


Before reduction : 
 pending  : [9, 29, 33, 36, 38, 41, 42, 43, 47, 48, 49, 5, 30, 32, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 5, 9, 41, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]


Before reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]


Solution : [7, 3, 4, 28, 26] has cost 25.


Before backtrack at level 11
 pending : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 26]

After backtrack at level 11
 pending : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28]


Before reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 5, 30, 32]
 solution : [7, 3, 4, 28]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 41, 42, 43, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 11 among pending : [38, 2, 11, 12, 13, 15, 20, 21, 22, 23, 40]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [38, 2, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]


New level: 12
 pending : [38, 2, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]


Before reduction : 
 pending  : [38, 2, 12, 13, 15, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [38, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]


Before reduction : 
 pending  : [38, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]


Solution : [7, 3, 4, 28, 5, 11] has cost 31.


Before backtrack at level 12
 pending : [38, 20, 21, 22, 23, 40]
 solution : [7, 3, 4, 28, 5, 11]

After backtrack at level 12
 pending : [38, 20, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [38, 20, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [38, 20, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 20, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 12 among pending : [38, 20, 21, 22, 23, 40, 2, 12, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [38, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5, 20]


New level: 13
 pending : [38, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5, 20]


Before reduction : 
 pending  : [38, 21, 22, 23, 40, 2, 12, 13, 15]
 solution : [7, 3, 4, 28, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 12, 13]
 solution : [7, 3, 4, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 2, 12, 13]
 solution : [7, 3, 4, 28, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 12, 13]
 solution : [7, 3, 4, 28, 5, 20]


Solution : [7, 3, 4, 28, 5, 20] has cost 29.


Before backtrack at level 13
 pending : [38, 23, 40, 2, 12, 13]
 solution : [7, 3, 4, 28, 5, 20]

After backtrack at level 13
 pending : [38, 23, 40, 2, 12, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [38, 23, 40, 2, 12, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 12, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 12, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 13 among pending : [38, 23, 40, 2, 12, 13, 21, 22, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 2, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5, 12]


New level: 14
 pending : [38, 23, 40, 2, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 21, 22, 15]
 solution : [7, 3, 4, 28, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 21, 22]
 solution : [7, 3, 4, 28, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 21, 22]
 solution : [7, 3, 4, 28, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 21, 22]
 solution : [7, 3, 4, 28, 5, 12]


Solution : [7, 3, 4, 28, 5, 12] has cost 31.


Before backtrack at level 14
 pending : [38, 23, 40, 21, 22]
 solution : [7, 3, 4, 28, 5, 12]

After backtrack at level 14
 pending : [38, 23, 40, 21, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [38, 23, 40, 21, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 21, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 21, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5]


Solution : [7, 3, 4, 28, 5] has cost 22.


Decide in level 14 among pending : [38, 23, 40, 21, 22, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 21]


New level: 15
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 28, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 28, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 28, 5, 21]


Solution : [7, 3, 4, 28, 5, 21] has cost 29.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 28, 5, 21]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 28, 5, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 28, 5]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 22]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 22]


Solution : [7, 3, 4, 28, 5, 22] has cost 29.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 28, 5, 22]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 28, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 28, 5]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11]
 solution : [7, 3, 4, 28]


Before backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11]
 solution : [7, 3, 4, 28]

After backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26]
 solution : [7, 3, 4, 28]


Before backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26]
 solution : [7, 3, 4, 28]

After backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19]
 solution : [7, 3, 4, 28]


Before backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19]
 solution : [7, 3, 4, 28]

After backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27]
 solution : [7, 3, 4, 28]


Before backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27]
 solution : [7, 3, 4, 28]

After backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39]
 solution : [7, 3, 4, 28]


Before backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39]
 solution : [7, 3, 4, 28]

After backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39, 18]
 solution : [7, 3, 4, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39, 18]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39, 18]
 solution : [7, 3, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39, 18]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 6 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 27, 39, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]


New level: 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 30, 32, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39, 18]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 7 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39]
 solution : [7, 3, 4, 27, 18]


New level: 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39]
 solution : [7, 3, 4, 27, 18]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 11, 26, 19, 39]
 solution : [7, 3, 4, 27, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 39, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 18]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 18]


Solution : [7, 3, 4, 27, 18] has cost 28.


Before backtrack at level 8
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 18]

After backtrack at level 8
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 39]
 solution : [7, 3, 4, 27, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 39]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 39]
 solution : [7, 3, 4, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 39]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 8 among pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 39]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 19]


New level: 9
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 19]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 39, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 19]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, 0), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 19]


Solution : [7, 3, 4, 27, 19] has cost 28.


Before backtrack at level 9
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26]
 solution : [7, 3, 4, 27, 19]

After backtrack at level 9
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 9 among pending : [38, 5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 38]


New level: 10
 pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 38]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 33554432), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 27, 38]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 27, 38]


Solution : [7, 3, 4, 27, 38] has cost 39.


Before backtrack at level 10
 pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 27, 38]

After backtrack at level 10
 pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 131072), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 131072), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 10 among pending : [5, 9, 29, 33, 36, 41, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 10

After decision at level 10
 pending : [5, 9, 29, 33, 36, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]


New level: 11
 pending : [5, 9, 29, 33, 36, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]


Before reduction : 
 pending  : [5, 9, 29, 33, 36, 42, 43, 47, 48, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 67584), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {33, 36, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 67584), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 67584), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]


Solution : [7, 3, 4, 27, 41] has cost 39.


Before backtrack at level 11
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 41]

After backtrack at level 11
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27, 41]


Invert decision for 41 at level 10


New level: 11
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 67584), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48, 49]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 11 among pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 11

After decision at level 11
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48]
 solution : [7, 3, 4, 27, 49]


New level: 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48]
 solution : [7, 3, 4, 27, 49]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 36, 42, 43, 47, 48]
 solution : [7, 3, 4, 27, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {48, 42, 43, 36}

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47]
 solution : [7, 3, 4, 27, 49]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47]
 solution : [7, 3, 4, 27, 49]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47]
 solution : [7, 3, 4, 27, 49]


Solution : [7, 3, 4, 27, 49] has cost 52.


Before backtrack at level 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47]
 solution : [7, 3, 4, 27, 49]

After backtrack at level 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27, 49]


Invert decision for 49 at level 11


New level: 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]


Solution : [7, 3, 4, 27] has cost 21.


Decide in level 12 among pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27, 5]


New level: 13
 pending : [26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27, 5]


Before reduction : 
 pending  : [26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 36, 9, 42, 43, 47, 48, 26, 29}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 5]


Solution : [7, 3, 4, 27, 5] has cost 25.


Before backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 5]

After backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]

Essensial at level 13 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {33, 36, 9, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 26]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 26]


Solution : [7, 3, 4, 27, 26] has cost 28.


Before backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 4, 27, 26]

After backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]


Before backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 4, 27]

After backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5]
 solution : [7, 3, 4, 27]


Before backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5]
 solution : [7, 3, 4, 27]

After backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49]
 solution : [7, 3, 4, 27]


Before backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49]
 solution : [7, 3, 4, 27]

After backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41]
 solution : [7, 3, 4, 27]


Before backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41]
 solution : [7, 3, 4, 27]

After backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38]
 solution : [7, 3, 4, 27]


Before backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38]
 solution : [7, 3, 4, 27]

After backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19]
 solution : [7, 3, 4, 27]


Before backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19]
 solution : [7, 3, 4, 27]

After backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32, 18]
 solution : [7, 3, 4, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32, 18]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32, 18]
 solution : [7, 3, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32, 18]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 7 among pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32, 18]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32]
 solution : [7, 3, 4, 18]


New level: 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 19, 30, 32]
 solution : [7, 3, 4, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, 268435456), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]


Solution : [7, 3, 4, 18] has cost 21.


Decide in level 8 among pending : [39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18, 26]


New level: 9
 pending : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18, 26]


Before reduction : 
 pending  : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 26]


Solution : [7, 3, 4, 18, 26] has cost 28.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 4, 18, 26]

After backtrack at level 9
 pending : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]


Before reduction : 
 pending  : [39, 9, 29, 33, 47, 36, 42, 43, 48, 5, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 18, 5]


Solution : [7, 3, 4, 18, 5] has cost 25.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 4, 18, 5]

After backtrack at level 9
 pending : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]


Before backtrack at level 8
 pending : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 18]

After backtrack at level 8
 pending : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 8 among pending : [5, 39, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]


New level: 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, 134217728), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]


Solution : [7, 3, 4, 39] has cost 28.


Before backtrack at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]

After backtrack at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 16777216), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 9 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26]
 solution : [7, 3, 4, 19]


New level: 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26]
 solution : [7, 3, 4, 19]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26]
 solution : [7, 3, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, 134217728), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19]


Solution : [7, 3, 4, 19] has cost 21.


Decide in level 10 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19, 5]


New level: 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19, 5]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, -1), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 5]


Solution : [7, 3, 4, 19, 5] has cost 25.


Before backtrack at level 11
 pending : []
 solution : [7, 3, 4, 19, 5]

After backtrack at level 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 26]
 solution : [7, 3, 4, 19]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 4, 19, 26]


Solution : [7, 3, 4, 19, 26] has cost 28.


Before backtrack at level 11
 pending : []
 solution : [7, 3, 4, 19, 26]

After backtrack at level 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 19]


Before backtrack at level 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32]
 solution : [7, 3, 4, 19]

After backtrack at level 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4]


Solution : [7, 3, 4] has cost 14.


Decide in level 10 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4, 26]


New level: 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 38, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 5]
 solution : [7, 3, 4, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 8388608), (12, 4194304), (13, 139264), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 524288), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 5, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 21.


Decide in level 11 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 26, 11]


New level: 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 26, 11]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 26, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 26, 11]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 26, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 26, 11]


Solution : [7, 3, 4, 26, 11] has cost 30.


Before backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 26, 11]

After backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 26, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 21.


Decide in level 12 among pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 26, 20]


New level: 13
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 26, 20]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 26, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 26, 20]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 26, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 26, 20]


Solution : [7, 3, 4, 26, 20] has cost 28.


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 26, 20]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 26, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 21.


Decide in level 13 among pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 26, 12]


New level: 14
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 26, 12]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 26, 12]


Before reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 26, 12]


Solution : [7, 3, 4, 26, 12] has cost 30.


Before backtrack at level 14
 pending : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 26, 12]

After backtrack at level 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 26, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 26]


Solution : [7, 3, 4, 26] has cost 21.


Decide in level 14 among pending : [38, 23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 26, 21]


New level: 15
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 26, 21]


Before reduction : 
 pending  : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 26, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 26, 21]


Before reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 26, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 26, 21]


Solution : [7, 3, 4, 26, 21] has cost 28.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 26, 21]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 26, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 26]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 26, 22]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 26, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 26, 22]


Solution : [7, 3, 4, 26, 22] has cost 28.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 26, 22]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 26]


Before backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 26]

After backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 26]


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 26]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 26]


Before backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 26]

After backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 26]


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 26]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 11]
 solution : [7, 3, 4, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 11]
 solution : [7, 3, 4]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 11]
 solution : [7, 3, 4]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 11 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 5, 11]


New level: 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 4194304), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 5, 11]


Solution : [7, 3, 4, 5, 11] has cost 27.


Before backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 4, 5, 11]

After backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 5, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 32768), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 12 among pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 5, 20]


New level: 13
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 4, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, 2097152), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 5, 20]


Solution : [7, 3, 4, 5, 20] has cost 25.


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 4, 5, 20]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 5, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 524288), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 13 among pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 5, 12]


New level: 14
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 4, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 5, 12]


Solution : [7, 3, 4, 5, 12] has cost 27.


Before backtrack at level 14
 pending : [38, 23, 40, 22, 21]
 solution : [7, 3, 4, 5, 12]

After backtrack at level 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 5, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8192), (22, 8192), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 4, 5]


Solution : [7, 3, 4, 5] has cost 18.


Decide in level 14 among pending : [38, 23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 5, 21]


New level: 15
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 4, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 1048576), (22, 32768), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 5, 21]


Solution : [7, 3, 4, 5, 21] has cost 25.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13]
 solution : [7, 3, 4, 5, 21]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 5, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 4, 5]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 32768), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 33280), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 5, 22]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 5, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 5, 22]


Solution : [7, 3, 4, 5, 22] has cost 25.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 4, 5, 22]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 4, 5]

After backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 4, 5]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 4, 5]

After backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 4, 5]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11]
 solution : [7, 3, 4]


Before backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11]
 solution : [7, 3, 4]

After backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26]
 solution : [7, 3, 4]


Before backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26]
 solution : [7, 3, 4]

After backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19]
 solution : [7, 3, 4]


Before backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19]
 solution : [7, 3, 4]

After backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39]
 solution : [7, 3, 4]


Before backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39]
 solution : [7, 3, 4]

After backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18]
 solution : [7, 3, 4]


Before backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18]
 solution : [7, 3, 4]

After backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27]
 solution : [7, 3, 4]


Before backtrack at level 5
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27]
 solution : [7, 3, 4]

After backtrack at level 5
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28]
 solution : [7, 3, 4]


Before backtrack at level 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28]
 solution : [7, 3, 4]

After backtrack at level 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34]
 solution : [7, 3, 4]


Before backtrack at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34]
 solution : [7, 3, 4]

After backtrack at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34, 24]
 solution : [7, 3, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34, 24]
 solution : [7, 3]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34, 24]
 solution : [7, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 67584), (14, -1), (15, 16384), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34, 24]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 3 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34, 24]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34]
 solution : [7, 3, 24]


New level: 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 26, 19, 39, 18, 27, 28, 34]
 solution : [7, 3, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, 2147483648), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 40, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 28, 34]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 28, 34]
 solution : [7, 3, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 28, 34]
 solution : [7, 3, 24]


Solution : [7, 3, 24] has cost 13.


Decide in level 4 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 28, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 34]
 solution : [7, 3, 24, 28]


New level: 5
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 34]
 solution : [7, 3, 24, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 34]
 solution : [7, 3, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 34]
 solution : [7, 3, 24, 28]


Solution : [7, 3, 24, 28] has cost 17.


Decide in level 5 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27]
 solution : [7, 3, 24, 28, 34]


New level: 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27]
 solution : [7, 3, 24, 28, 34]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 26, 39, 27]
 solution : [7, 3, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27]
 solution : [7, 3, 24, 28, 34]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27]
 solution : [7, 3, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27]
 solution : [7, 3, 24, 28, 34]


Solution : [7, 3, 24, 28, 34] has cost 30.


Before backtrack at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27]
 solution : [7, 3, 24, 28, 34]

After backtrack at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 30, 32, 39]
 solution : [7, 3, 24, 28, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 30, 32, 39]
 solution : [7, 3, 24, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 30, 32, 39]
 solution : [7, 3, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 2048), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 30, 32, 39]
 solution : [7, 3, 24, 28]


Solution : [7, 3, 24, 28] has cost 17.


Decide in level 6 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 27]


New level: 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26]
 solution : [7, 3, 24, 28, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26]
 solution : [7, 3, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26]
 solution : [7, 3, 24, 28, 27]


Solution : [7, 3, 24, 28, 27] has cost 24.


Before backtrack at level 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26]
 solution : [7, 3, 24, 28, 27]

After backtrack at level 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28]


Solution : [7, 3, 24, 28] has cost 17.


Decide in level 7 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 5]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 5]


Solution : [7, 3, 24, 28, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 28, 5]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 39]
 solution : [7, 3, 24, 28]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 28, 26]


Solution : [7, 3, 24, 28, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 28, 26]

After backtrack at level 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 24, 28]


Before backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 24, 28]

After backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5]
 solution : [7, 3, 24, 28]


Before backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5]
 solution : [7, 3, 24, 28]

After backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24, 28]


Before backtrack at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24, 28]

After backtrack at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24]


Solution : [7, 3, 24] has cost 13.


Decide in level 5 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24, 34]


New level: 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24, 34]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27]
 solution : [7, 3, 24, 34]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27]
 solution : [7, 3, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27]
 solution : [7, 3, 24, 34]


Solution : [7, 3, 24, 34] has cost 26.


Before backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27]
 solution : [7, 3, 24, 34]

After backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 24, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 2097152), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 24]


Solution : [7, 3, 24] has cost 13.


Decide in level 6 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 24, 27]


New level: 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 24, 27]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27]


Solution : [7, 3, 24, 27] has cost 20.


Decide in level 7 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27, 26]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27, 26]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 5, 38, 9, 42, 43, 41, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 26]


Solution : [7, 3, 24, 27, 26] has cost 27.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 27, 26]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 24, 27]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 27, 5]


Solution : [7, 3, 24, 27, 5] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 27, 5]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41]
 solution : [7, 3, 24, 27]


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41]
 solution : [7, 3, 24, 27]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24]


Solution : [7, 3, 24] has cost 13.


Decide in level 7 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24, 5]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 5]


Solution : [7, 3, 24, 5] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 5]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 24]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 24, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 24, 26]


Solution : [7, 3, 24, 26] has cost 20.


Before backtrack at level 8
 pending : []
 solution : [7, 3, 24, 26]

After backtrack at level 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 24]


Before backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 24]

After backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5]
 solution : [7, 3, 24]


Before backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5]
 solution : [7, 3, 24]

After backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24]


Before backtrack at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27]
 solution : [7, 3, 24]

After backtrack at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24]


Before backtrack at level 4
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34]
 solution : [7, 3, 24]

After backtrack at level 4
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7, 3, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7, 3]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 4 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 4

After decision at level 4
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 28]
 solution : [7, 3, 18]


New level: 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 28]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 28]
 solution : [7, 3, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, 1073741824), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 28]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 28]
 solution : [7, 3, 18]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 28]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 5 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 34, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 28]
 solution : [7, 3, 18, 34]


New level: 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 28]
 solution : [7, 3, 18, 34]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 5, 27, 28]
 solution : [7, 3, 18, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, 536870912), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28]
 solution : [7, 3, 18, 34]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28]
 solution : [7, 3, 18, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28]
 solution : [7, 3, 18, 34]


Solution : [7, 3, 18, 34] has cost 29.


Before backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28]
 solution : [7, 3, 18, 34]

After backtrack at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28, 30, 32, 39]
 solution : [7, 3, 18, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28, 30, 32, 39]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28, 30, 32, 39]
 solution : [7, 3, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, 536870912), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 8388608), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 4194304), (48, 524288), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28, 30, 32, 39]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 6 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 28, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 6

After decision at level 6
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]


New level: 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]


Solution : [7, 3, 18, 28] has cost 20.


Before backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]

After backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18, 28]


Invert decision for 28 at level 6


New level: 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 7 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 27]


New level: 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 27]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 30, 39}

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 18, 27]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 18, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 18, 27]


Solution : [7, 3, 18, 27] has cost 23.


Before backtrack at level 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 18, 27]

After backtrack at level 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18]


Solution : [7, 3, 18] has cost 16.


Decide in level 8 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 26]


New level: 9
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 26]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 18, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 18, 26]


Solution : [7, 3, 18, 26] has cost 23.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 18, 26]

After backtrack at level 9
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 30, 32, 39]
 solution : [7, 3, 18]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 18, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 18, 5]


Solution : [7, 3, 18, 5] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 3, 18, 5]

After backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 18]


Before backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39]
 solution : [7, 3, 18]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 18]


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26]
 solution : [7, 3, 18]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27]
 solution : [7, 3, 18]


Before backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27]
 solution : [7, 3, 18]

After backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28]
 solution : [7, 3, 18]


Before backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28]
 solution : [7, 3, 18]

After backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3, 18]


Invert decision for 18 at level 4


New level: 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 5 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 28, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3, 28]


New level: 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, 536870912), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 6 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 34]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 34]
 solution : [7, 3, 28, 19]


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 34]
 solution : [7, 3, 28, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 34]
 solution : [7, 3, 28, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34]
 solution : [7, 3, 28, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34]
 solution : [7, 3, 28, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34]
 solution : [7, 3, 28, 19]


Solution : [7, 3, 28, 19] has cost 20.


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34]
 solution : [7, 3, 28, 19]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 262144), (30, 524288), (31, -1), (32, 4096), (33, 4096), (34, 268435456), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 7 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 7

After decision at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]


New level: 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, 268435456), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 30}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]


Solution : [7, 3, 28, 34] has cost 26.


Before backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 34]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 34]


Invert decision for 34 at level 7


New level: 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 8 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]


Solution : [7, 3, 28, 39] has cost 27.


Before backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]

After backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 67108864), (28, -1), (29, 524288), (30, 262144), (31, -1), (32, 2048), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 9 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 27]


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 134217728), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 30}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 27]


Solution : [7, 3, 28, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 27]

After backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28]


Solution : [7, 3, 28] has cost 13.


Decide in level 10 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 5]


New level: 11
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 3, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 11 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 28, 5, 11]


New level: 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 28, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 28, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 28, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 28, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 28, 5, 11]


Solution : [7, 3, 28, 5, 11] has cost 26.


Before backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20]
 solution : [7, 3, 28, 5, 11]

After backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 28, 5, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 12 among pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 28, 5, 20]


New level: 13
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 28, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 28, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 28, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 28, 5, 20]


Solution : [7, 3, 28, 5, 20] has cost 24.


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12]
 solution : [7, 3, 28, 5, 20]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 28, 5, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 13 among pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 28, 5, 12]


New level: 14
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 28, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 3, 28, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 28, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 28, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 3, 28, 5, 12]


Solution : [7, 3, 28, 5, 12] has cost 26.


Before backtrack at level 14
 pending : [38, 23, 40, 22, 21]
 solution : [7, 3, 28, 5, 12]

After backtrack at level 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 28, 5, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 3, 28, 5]


Solution : [7, 3, 28, 5] has cost 17.


Decide in level 14 among pending : [38, 23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 28, 5, 21]


New level: 15
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 28, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 3, 28, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 28, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 28, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 3, 28, 5, 21]


Solution : [7, 3, 28, 5, 21] has cost 24.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13]
 solution : [7, 3, 28, 5, 21]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 28, 5, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 28, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 3, 28, 5]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 28, 5, 22]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 28, 5, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 28, 5, 22]


Solution : [7, 3, 28, 5, 22] has cost 24.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15]
 solution : [7, 3, 28, 5, 22]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 28, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 3, 28, 5]

After backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 28, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 3, 28, 5]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 28, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 28, 5]

After backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 28, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 28, 5]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 11]
 solution : [7, 3, 28, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 11]
 solution : [7, 3, 28]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 30, 32, 11]
 solution : [7, 3, 28]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 26]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 26]


Solution : [7, 3, 28, 26] has cost 20.


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 28, 26]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32]
 solution : [7, 3, 28]


Before backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32]
 solution : [7, 3, 28]

After backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5]
 solution : [7, 3, 28]


Before backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5]
 solution : [7, 3, 28]

After backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27]
 solution : [7, 3, 28]


Before backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27]
 solution : [7, 3, 28]

After backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39]
 solution : [7, 3, 28]


Before backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39]
 solution : [7, 3, 28]

After backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34]
 solution : [7, 3, 28]


Before backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34]
 solution : [7, 3, 28]

After backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34, 19]
 solution : [7, 3, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34, 19]
 solution : [7, 3]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34, 19]
 solution : [7, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34, 19]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 6 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 34, 19]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 19]
 solution : [7, 3, 34]


New level: 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 19]
 solution : [7, 3, 34]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 5, 27, 39, 19]
 solution : [7, 3, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, 536870912), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19]
 solution : [7, 3, 34]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19]
 solution : [7, 3, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19]
 solution : [7, 3, 34]


Solution : [7, 3, 34] has cost 22.


Before backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19]
 solution : [7, 3, 34]

After backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19, 30, 32]
 solution : [7, 3, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19, 30, 32]
 solution : [7, 3]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19, 30, 32]
 solution : [7, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 8192), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 4096), (40, 2097152), (41, 16777216), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 2097152), (49, 8388608), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19, 30, 32]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 7 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 19, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 7

After decision at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]


New level: 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, 536870912), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, 0), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]
 solution : [7, 3, 19]


Solution : [7, 3, 19] has cost 16.


Decide in level 8 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 27, 39, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 27]


New level: 9
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 27]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 30, 39}

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 19, 27]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 19, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 19, 27]


Solution : [7, 3, 19, 27] has cost 23.


Before backtrack at level 9
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5]
 solution : [7, 3, 19, 27]

After backtrack at level 9
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19]


Solution : [7, 3, 19] has cost 16.


Decide in level 9 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 26]


New level: 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 26]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 262144), (30, 1048576), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 1024), (39, 2048), (40, -1), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 19, 26]


Before reduction : 
 pending  : []
 solution : [7, 3, 19, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 19, 26]


Solution : [7, 3, 19, 26] has cost 23.


Before backtrack at level 10
 pending : []
 solution : [7, 3, 19, 26]

After backtrack at level 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 5, 39, 30, 32]
 solution : [7, 3, 19]

Essensial at level 10 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 3, 19, 5]


Before reduction : 
 pending  : []
 solution : [7, 3, 19, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [7, 3, 19, 5]


Solution : [7, 3, 19, 5] has cost 20.


Before backtrack at level 10
 pending : []
 solution : [7, 3, 19, 5]

After backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32]
 solution : [7, 3, 19]


Before backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32]
 solution : [7, 3, 19]

After backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26]
 solution : [7, 3, 19]


Before backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26]
 solution : [7, 3, 19]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 3, 19]


Invert decision for 19 at level 7


New level: 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 3]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 8 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, 268435456), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 30}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 9 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 9

After decision at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]


New level: 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 39, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 67108864), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {39}

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 0), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]


Solution : [7, 3, 27, 38] has cost 34.


Before backtrack at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 27, 38]

After backtrack at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 38]


Invert decision for 38 at level 9


New level: 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 4194304), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 524288), (24, -1), (25, -1), (26, 4194304), (27, -1), (28, -1), (29, 32768), (30, -1), (31, -1), (32, -1), (33, 512), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 524288), (41, 33554432), (42, 16384), (43, 16384), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 524288), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 10 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 10

After decision at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]


New level: 11
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {48, 42, 43, 36}

After reduction : 
 pending  : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 2048), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]


Solution : [7, 3, 27, 49] has cost 47.


Before backtrack at level 11
 pending : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 49]

After backtrack at level 11
 pending : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27, 49]


Invert decision for 49 at level 10


New level: 11
 pending : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 2048), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 2048), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 11 among pending : [5, 9, 29, 33, 47, 41, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [5, 9, 29, 33, 47, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27, 41]


New level: 12
 pending : [5, 9, 29, 33, 47, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27, 41]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 36, 42, 43, 48]
 solution : [7, 3, 27, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 270336), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 65536), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 9, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 41]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 270336), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 65536), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 270336), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 65536), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 41]


Solution : [7, 3, 27, 41] has cost 34.


Before backtrack at level 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39]
 solution : [7, 3, 27, 41]

After backtrack at level 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 65536), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 270336), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 65536), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 12 among pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 39, 9, 29, 33, 47, 36, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]


New level: 13
 pending : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]


Before reduction : 
 pending  : [5, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 12, 13, 15}

After reduction : 
 pending  : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]


Before reduction : 
 pending  : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]


Solution : [7, 3, 27, 11] has cost 25.


Before backtrack at level 13
 pending : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 11]

After backtrack at level 13
 pending : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 32768), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, 512), (40, 2048), (41, -1), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27]


Solution : [7, 3, 27] has cost 16.


Decide in level 13 among pending : [5, 26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]


New level: 14
 pending : [26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]


Before reduction : 
 pending  : [26, 23, 40, 22, 21, 20, 39, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 16777216), (6, -1), (7, -1), (8, -1), (9, 131072), (10, -1), (11, -1), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 16777216), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 2048), (34, -1), (35, -1), (36, 2048), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 2097152), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 9, 42, 43, 47, 48, 26, 29}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]


Solution : [7, 3, 27, 5] has cost 20.


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 5]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]

Essensial at level 14 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {33, 36, 9, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 26]


Solution : [7, 3, 27, 26] has cost 23.


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12]
 solution : [7, 3, 27, 26]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 3, 27]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5]
 solution : [7, 3, 27]


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5]
 solution : [7, 3, 27]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11]
 solution : [7, 3, 27]


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11]
 solution : [7, 3, 27]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41]
 solution : [7, 3, 27]


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41]
 solution : [7, 3, 27]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49]
 solution : [7, 3, 27]


Before backtrack at level 9
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49]
 solution : [7, 3, 27]

After backtrack at level 9
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, 512), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 9 among pending : [23, 40, 22, 21, 20, 39, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 9

After decision at level 9
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]


New level: 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, 134217728), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]


Solution : [7, 3, 39] has cost 23.


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 39]


Invert decision for 39 at level 9


New level: 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 524288), (31, -1), (32, 4096), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 33554432), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3]


Solution : [7, 3] has cost 9.


Decide in level 10 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 26, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 26]


New level: 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 5, 11, 41, 49, 30, 32, 38]
 solution : [7, 3, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 67108864), (6, -1), (7, -1), (8, -1), (9, 524288), (10, -1), (11, 33554432), (12, 16777216), (13, 557056), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, 67108864), (27, -1), (28, -1), (29, 524288), (30, 1048576), (31, -1), (32, 8192), (33, 8192), (34, -1), (35, -1), (36, 8192), (37, -1), (38, 67108864), (39, -1), (40, 2097152), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 8388608), (49, 33554432), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 5, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11, 38]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11, 38]
 solution : [7, 3, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11, 38]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 16.


Decide in level 11 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11, 38]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 38]
 solution : [7, 3, 26, 11]


New level: 12
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 38]
 solution : [7, 3, 26, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 38]
 solution : [7, 3, 26, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 38]
 solution : [7, 3, 26, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 38]
 solution : [7, 3, 26, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 38]
 solution : [7, 3, 26, 11]


Solution : [7, 3, 26, 11] has cost 25.


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 38]
 solution : [7, 3, 26, 11]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 38, 2, 13, 15, 12]
 solution : [7, 3, 26, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [23, 40, 22, 21, 20, 38, 2, 13, 15, 12]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 38, 2, 13, 15, 12]
 solution : [7, 3, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 38, 2, 13, 15, 12]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 16.


Decide in level 12 among pending : [23, 40, 22, 21, 20, 38, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [23, 40, 22, 21, 38, 2, 13, 15, 12]
 solution : [7, 3, 26, 20]


New level: 13
 pending : [23, 40, 22, 21, 38, 2, 13, 15, 12]
 solution : [7, 3, 26, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 38, 2, 13, 15, 12]
 solution : [7, 3, 26, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 26, 20]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 26, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 26, 20]


Solution : [7, 3, 26, 20] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 26, 20]

After backtrack at level 13
 pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 26, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 16.


Decide in level 13 among pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 26, 12]


New level: 14
 pending : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 26, 12]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 26, 12]


Before reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 26, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 26, 12]


Solution : [7, 3, 26, 12] has cost 25.


Before backtrack at level 14
 pending : [23, 40, 38, 22, 21]
 solution : [7, 3, 26, 12]

After backtrack at level 14
 pending : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 26, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 26]


Solution : [7, 3, 26] has cost 16.


Decide in level 14 among pending : [23, 40, 38, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 26, 21]


New level: 15
 pending : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 26, 21]


Before reduction : 
 pending  : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 26, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 26, 21]


Before reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 26, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 26, 21]


Solution : [7, 3, 26, 21] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 38, 2, 13]
 solution : [7, 3, 26, 21]

After backtrack at level 15
 pending : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 26, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 26]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 26]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 26, 22]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 26, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 26, 22]


Solution : [7, 3, 26, 22] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 26, 22]

After backtrack at level 15
 pending : [23, 40, 38, 2, 13, 15, 22]
 solution : [7, 3, 26]


Before backtrack at level 14
 pending : [23, 40, 38, 2, 13, 15, 22]
 solution : [7, 3, 26]

After backtrack at level 14
 pending : [23, 40, 38, 2, 13, 15, 22, 21]
 solution : [7, 3, 26]


Before backtrack at level 13
 pending : [23, 40, 38, 2, 13, 15, 22, 21]
 solution : [7, 3, 26]

After backtrack at level 13
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 26]


Before backtrack at level 12
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 26]

After backtrack at level 12
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 26]


Before backtrack at level 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 26]

After backtrack at level 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 5, 41, 49, 30, 32, 11]
 solution : [7, 3, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 5, 41, 49, 30, 32, 11]
 solution : [7, 3]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 5, 41, 49, 30, 32, 11]
 solution : [7, 3]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 131072), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 11 among pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 5, 11]


New level: 12
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 5, 11]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 16777216), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [23, 40, 38, 22, 21, 20]
 solution : [7, 3, 5, 11]


Before reduction : 
 pending  : [23, 40, 38, 22, 21, 20]
 solution : [7, 3, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21, 20]
 solution : [7, 3, 5, 11]


Solution : [7, 3, 5, 11] has cost 22.


Before backtrack at level 12
 pending : [23, 40, 38, 22, 21, 20]
 solution : [7, 3, 5, 11]

After backtrack at level 12
 pending : [23, 40, 38, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 5, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [23, 40, 38, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [23, 40, 38, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 131072), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 12 among pending : [23, 40, 38, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [23, 40, 38, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 5, 20]


New level: 13
 pending : [23, 40, 38, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 5, 20]


Before reduction : 
 pending  : [23, 40, 38, 22, 21, 2, 13, 15, 12]
 solution : [7, 3, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8388608), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 5, 20]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 5, 20]


Solution : [7, 3, 5, 20] has cost 20.


Before backtrack at level 13
 pending : [23, 40, 38, 2, 13, 12]
 solution : [7, 3, 5, 20]

After backtrack at level 13
 pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 5, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 2097152), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 12, 22, 21, 15]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 13 among pending : [23, 40, 38, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 5, 12]


New level: 14
 pending : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 5, 12]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 22, 21, 15]
 solution : [7, 3, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 8388608), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 5, 12]


Before reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21]
 solution : [7, 3, 5, 12]


Solution : [7, 3, 5, 12] has cost 22.


Before backtrack at level 14
 pending : [23, 40, 38, 22, 21]
 solution : [7, 3, 5, 12]

After backtrack at level 14
 pending : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 5, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 32768), (22, 32768), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 38, 22, 21, 2, 13, 15]
 solution : [7, 3, 5]


Solution : [7, 3, 5] has cost 13.


Decide in level 14 among pending : [23, 40, 38, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 5, 21]


New level: 15
 pending : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 5, 21]


Before reduction : 
 pending  : [23, 40, 38, 22, 2, 13, 15]
 solution : [7, 3, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 4194304), (22, 131072), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 5, 21]


Before reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13]
 solution : [7, 3, 5, 21]


Solution : [7, 3, 5, 21] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 38, 2, 13]
 solution : [7, 3, 5, 21]

After backtrack at level 15
 pending : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 5, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 5]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 22, 15]
 solution : [7, 3, 5]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 133120), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 5, 22]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 5, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 5, 22]


Solution : [7, 3, 5, 22] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 38, 2, 13, 15]
 solution : [7, 3, 5, 22]

After backtrack at level 15
 pending : [23, 40, 38, 2, 13, 15, 22]
 solution : [7, 3, 5]


Before backtrack at level 14
 pending : [23, 40, 38, 2, 13, 15, 22]
 solution : [7, 3, 5]

After backtrack at level 14
 pending : [23, 40, 38, 2, 13, 15, 22, 21]
 solution : [7, 3, 5]


Before backtrack at level 13
 pending : [23, 40, 38, 2, 13, 15, 22, 21]
 solution : [7, 3, 5]

After backtrack at level 13
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 5]


Before backtrack at level 12
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12]
 solution : [7, 3, 5]

After backtrack at level 12
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 5]


Before backtrack at level 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 3, 5]

After backtrack at level 11
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11]
 solution : [7, 3]


Before backtrack at level 10
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11]
 solution : [7, 3]

After backtrack at level 10
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26]
 solution : [7, 3]


Before backtrack at level 9
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26]
 solution : [7, 3]

After backtrack at level 9
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39]
 solution : [7, 3]


Before backtrack at level 8
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39]
 solution : [7, 3]

After backtrack at level 8
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27]
 solution : [7, 3]


Before backtrack at level 7
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27]
 solution : [7, 3]

After backtrack at level 7
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19]
 solution : [7, 3]


Before backtrack at level 6
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19]
 solution : [7, 3]

After backtrack at level 6
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34]
 solution : [7, 3]


Before backtrack at level 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34]
 solution : [7, 3]

After backtrack at level 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28]
 solution : [7, 3]


Before backtrack at level 4
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28]
 solution : [7, 3]

After backtrack at level 4
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18]
 solution : [7, 3]


Before backtrack at level 3
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18]
 solution : [7, 3]

After backtrack at level 3
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 3]


Before backtrack at level 2
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 3]

After backtrack at level 2
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24, 4]
 solution : [7, 3]


Invert decision for 3 at level 1


New level: 2
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24, 4]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24, 4]
 solution : [7]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 270336), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 2 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24, 4]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 2 among pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24, 4]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 4 with phase True at level 2

After decision at level 2
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 4]


New level: 3
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 4]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 4]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, 17179869184), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 3 among pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 28, 18, 24]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 3

After decision at level 3
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 18, 24]
 solution : [7, 4, 28]


New level: 4
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 18, 24]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 18, 24]
 solution : [7, 4, 28]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 18, 24]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 4 among pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 34, 18, 24]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]


New level: 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 30}

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]


Solution : [7, 4, 28, 34] has cost 28.


Before backtrack at level 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24]
 solution : [7, 4, 28, 34]

After backtrack at level 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24, 30, 32]
 solution : [7, 4, 28, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24, 30, 32]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24, 30, 32]
 solution : [7, 4, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 4096), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24, 30, 32]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 5 among pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 24, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 5

After decision at level 5
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 30, 32]
 solution : [7, 4, 28, 24]


New level: 6
 pending : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 30, 32]
 solution : [7, 4, 28, 24]


Before reduction : 
 pending  : [23, 40, 38, 2, 13, 15, 22, 21, 12, 20, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 11, 26, 39, 27, 19, 18, 30, 32]
 solution : [7, 4, 28, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {2, 40, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32]
 solution : [7, 4, 28, 24]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32]
 solution : [7, 4, 28, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32]
 solution : [7, 4, 28, 24]


Solution : [7, 4, 28, 24] has cost 19.


Before backtrack at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32]
 solution : [7, 4, 28, 24]

After backtrack at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 24]


Invert decision for 24 at level 5


New level: 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 6 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]


New level: 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]


Solution : [7, 4, 28, 27] has cost 22.


Before backtrack at level 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 4, 28, 27]

After backtrack at level 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 30, 32]
 solution : [7, 4, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 30, 32]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 30, 32]
 solution : [7, 4, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 30, 32]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 7 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 4, 28, 18]


New level: 8
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 4, 28, 18]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 4, 28, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 18]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 18]


Solution : [7, 4, 28, 18] has cost 22.


Before backtrack at level 8
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 18]

After backtrack at level 8
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 28, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 8 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 19]


New level: 9
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 19]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 19]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 19]


Solution : [7, 4, 28, 19] has cost 22.


Before backtrack at level 9
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32]
 solution : [7, 4, 28, 19]

After backtrack at level 9
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28]


Solution : [7, 4, 28] has cost 15.


Decide in level 9 among pending : [38, 5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]


New level: 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 39, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 134217728), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]


Solution : [7, 4, 28, 5] has cost 19.


Before backtrack at level 10
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 5]

After backtrack at level 10
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32]
 solution : [7, 4, 28, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32]
 solution : [7, 4, 28]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32]
 solution : [7, 4, 28]

Essensial at level 10 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, 512), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, 134217728), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 26]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, 134217728), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 134217728), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 26]


Solution : [7, 4, 28, 26] has cost 22.


Before backtrack at level 10
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 28, 26]

After backtrack at level 10
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4, 28]


Before backtrack at level 9
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4, 28]

After backtrack at level 9
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 4, 28]


Before backtrack at level 8
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 4, 28]

After backtrack at level 8
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19]
 solution : [7, 4, 28]


Before backtrack at level 7
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19]
 solution : [7, 4, 28]

After backtrack at level 7
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18]
 solution : [7, 4, 28]


Before backtrack at level 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18]
 solution : [7, 4, 28]

After backtrack at level 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27]
 solution : [7, 4, 28]


Before backtrack at level 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27]
 solution : [7, 4, 28]

After backtrack at level 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24]
 solution : [7, 4, 28]


Before backtrack at level 4
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24]
 solution : [7, 4, 28]

After backtrack at level 4
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24, 34]
 solution : [7, 4, 28]


Invert decision for 28 at level 3


New level: 4
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24, 34]
 solution : [7, 4]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24, 34]
 solution : [7, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, 134217728), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24, 34]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 4 among pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24, 34]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 4

After decision at level 4
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]


New level: 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : {32, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]


Solution : [7, 4, 34] has cost 24.


Before backtrack at level 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24]
 solution : [7, 4, 34]

After backtrack at level 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24, 30, 32]
 solution : [7, 4, 34]


Invert decision for 34 at level 4


New level: 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24, 30, 32]
 solution : [7, 4]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24, 30, 32]
 solution : [7, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 67108864), (39, 8192), (40, 1048576), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24, 30, 32]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 5 among pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 27, 24, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 5

After decision at level 5
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4, 27]


New level: 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4, 27]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30}

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24]
 solution : [7, 4, 27]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24]
 solution : [7, 4, 27]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24]
 solution : [7, 4, 27]


Solution : [7, 4, 27] has cost 18.


Before backtrack at level 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24]
 solution : [7, 4, 27]

After backtrack at level 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4, 27]


Invert decision for 27 at level 5


New level: 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 33554432), (39, 512), (40, 1048576), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 6 among pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 24, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 30, 32]
 solution : [7, 4, 24]


New level: 7
 pending : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 30, 32]
 solution : [7, 4, 24]


Before reduction : 
 pending  : [38, 39, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 19, 18, 30, 32]
 solution : [7, 4, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, 1073741824), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 40, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24]


Before reduction : 
 pending  : [38, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24]


Solution : [7, 4, 24] has cost 15.


Decide in level 7 among pending : [38, 39, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24, 26]


New level: 8
 pending : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24, 26]


Before reduction : 
 pending  : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 4, 24, 26]


Before reduction : 
 pending  : []
 solution : [7, 4, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 24, 26]


Solution : [7, 4, 24, 26] has cost 22.


Before backtrack at level 8
 pending : []
 solution : [7, 4, 24, 26]

After backtrack at level 8
 pending : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24]


Before reduction : 
 pending  : [38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32]
 solution : [7, 4, 24]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 4, 24, 5]


Before reduction : 
 pending  : []
 solution : [7, 4, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 4, 24, 5]


Solution : [7, 4, 24, 5] has cost 19.


Before backtrack at level 8
 pending : []
 solution : [7, 4, 24, 5]

After backtrack at level 8
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4, 24]


Before backtrack at level 7
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4, 24]

After backtrack at level 7
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 26]
 solution : [7, 4, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 26]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 26]
 solution : [7, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 26]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 7 among pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 7

After decision at level 7
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 4, 18]


New level: 8
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 4, 18]


Before reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 26]
 solution : [7, 4, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, 536870912), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 18]


Before reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 18]


Solution : [7, 4, 18] has cost 18.


Before backtrack at level 8
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 18]

After backtrack at level 8
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 18]


Invert decision for 18 at level 7


New level: 8
 pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 8 among pending : [5, 38, 39, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, 268435456), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]


Solution : [7, 4, 39] has cost 25.


Before backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]

After backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 33554432), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 9 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 19]


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, 268435456), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 19]


Solution : [7, 4, 19] has cost 18.


Before backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26]
 solution : [7, 4, 19]

After backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4]


Solution : [7, 4] has cost 11.


Decide in level 10 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]


New level: 11
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 16777216), (12, 8388608), (13, 278528), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 1048576), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 67108864), (39, -1), (40, 1048576), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 11 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 4, 5, 11]


New level: 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 4, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 4, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {2, 12, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 4, 5, 11]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 4, 5, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20]
 solution : [7, 4, 5, 11]


Solution : [7, 4, 5, 11] has cost 24.


Before backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20]
 solution : [7, 4, 5, 11]

After backtrack at level 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 4, 5, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 4, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 65536), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 12 among pending : [38, 23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 4, 5, 20]


New level: 13
 pending : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 4, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 4, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1048576), (13, 66048), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {21, 22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 4, 5, 20]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 4, 5, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1048576), (13, 66048), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1048576), (13, 66048), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12]
 solution : [7, 4, 5, 20]


Solution : [7, 4, 5, 20] has cost 22.


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12]
 solution : [7, 4, 5, 20]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 4, 5, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 4, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1048576), (13, 66048), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 13 among pending : [38, 23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 4, 5, 12]


New level: 14
 pending : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 4, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 21, 15]
 solution : [7, 4, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {2, 13, 15}

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 4, 5, 12]


Before reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 4, 5, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21]
 solution : [7, 4, 5, 12]


Solution : [7, 4, 5, 12] has cost 24.


Before backtrack at level 14
 pending : [38, 23, 40, 22, 21]
 solution : [7, 4, 5, 12]

After backtrack at level 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 4, 5, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 16384), (22, 16384), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 1024), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [38, 23, 40, 22, 21, 2, 13, 15]
 solution : [7, 4, 5]


Solution : [7, 4, 5] has cost 15.


Decide in level 14 among pending : [38, 23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 4, 5, 21]


New level: 15
 pending : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 4, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 22, 2, 13, 15]
 solution : [7, 4, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 66048), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {22, 15}

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 4, 5, 21]


Before reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 4, 5, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 66048), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 66048), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13]
 solution : [7, 4, 5, 21]


Solution : [7, 4, 5, 21] has cost 22.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13]
 solution : [7, 4, 5, 21]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 4, 5, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 4, 5]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 22, 15]
 solution : [7, 4, 5]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 65536), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 66048), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 131072), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 512), (39, -1), (40, 131072), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 4, 5, 22]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 4, 5, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15]
 solution : [7, 4, 5, 22]


Solution : [7, 4, 5, 22] has cost 22.


Before backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15]
 solution : [7, 4, 5, 22]

After backtrack at level 15
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 4, 5]


Before backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22]
 solution : [7, 4, 5]

After backtrack at level 14
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 4, 5]


Before backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21]
 solution : [7, 4, 5]

After backtrack at level 13
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 4, 5]


Before backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 4, 5]

After backtrack at level 12
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 4, 5]


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 4, 5]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 11]
 solution : [7, 4, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 11]
 solution : [7, 4]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 26, 11]
 solution : [7, 4]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 135168), (14, -1), (15, 32768), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 32768), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 26]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 26]


Solution : [7, 4, 26] has cost 18.


Before backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 4, 26]

After backtrack at level 11
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4]


Before backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 4]

After backtrack at level 10
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 4]


Before backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 4]

After backtrack at level 9
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19]
 solution : [7, 4]


Before backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19]
 solution : [7, 4]

After backtrack at level 8
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39]
 solution : [7, 4]


Before backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39]
 solution : [7, 4]

After backtrack at level 7
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18]
 solution : [7, 4]


Before backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18]
 solution : [7, 4]

After backtrack at level 6
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24]
 solution : [7, 4]


Before backtrack at level 5
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24]
 solution : [7, 4]

After backtrack at level 5
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27]
 solution : [7, 4]


Before backtrack at level 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27]
 solution : [7, 4]

After backtrack at level 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34]
 solution : [7, 4]


Before backtrack at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34]
 solution : [7, 4]

After backtrack at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34, 28]
 solution : [7, 4]


Invert decision for 4 at level 2


New level: 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34, 28]
 solution : [7]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34, 28]
 solution : [7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 131072), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 8388608), (12, 4194304), (13, 135168), (14, -1), (15, 65536), (16, -1), (17, -1), (18, -1), (19, -1), (20, 4194304), (21, 2097152), (22, 65536), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, 65536), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34, 28]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 3 among pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 24, 27, 34, 28]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 24 with phase True at level 3

After decision at level 3
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 27, 34, 28]
 solution : [7, 24]


New level: 4
 pending : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 27, 34, 28]
 solution : [7, 24]


Before reduction : 
 pending  : [38, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 19, 39, 18, 27, 34, 28]
 solution : [7, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, 4294967296), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : {2, 40, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34, 28]
 solution : [7, 24]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34, 28]
 solution : [7, 24]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34, 28]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 4 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34]
 solution : [7, 24, 28]


New level: 5
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34]
 solution : [7, 24, 28]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34]
 solution : [7, 24, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34]
 solution : [7, 24, 28]


Solution : [7, 24, 28] has cost 14.


Decide in level 5 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27]
 solution : [7, 24, 28, 34]


New level: 6
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27]
 solution : [7, 24, 28, 34]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 39, 27]
 solution : [7, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27]
 solution : [7, 24, 28, 34]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27]
 solution : [7, 24, 28, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27]
 solution : [7, 24, 28, 34]


Solution : [7, 24, 28, 34] has cost 27.


Before backtrack at level 6
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27]
 solution : [7, 24, 28, 34]

After backtrack at level 6
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27, 30, 32, 39]
 solution : [7, 24, 28, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27, 30, 32, 39]
 solution : [7, 24, 28]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27, 30, 32, 39]
 solution : [7, 24, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 2048), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27, 30, 32, 39]
 solution : [7, 24, 28]


Solution : [7, 24, 28] has cost 14.


Decide in level 6 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 27]


New level: 7
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 27]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5]
 solution : [7, 24, 28, 27]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5]
 solution : [7, 24, 28, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5]
 solution : [7, 24, 28, 27]


Solution : [7, 24, 28, 27] has cost 21.


Before backtrack at level 7
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5]
 solution : [7, 24, 28, 27]

After backtrack at level 7
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28]


Before reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28]


Solution : [7, 24, 28] has cost 14.


Decide in level 7 among pending : [38, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 26]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 26]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 24, 28, 26]


Before reduction : 
 pending  : []
 solution : [7, 24, 28, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 28, 26]


Solution : [7, 24, 28, 26] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 28, 26]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 30, 32, 39]
 solution : [7, 24, 28]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 24, 28, 5]


Before reduction : 
 pending  : []
 solution : [7, 24, 28, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 28, 5]


Solution : [7, 24, 28, 5] has cost 18.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 28, 5]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39]
 solution : [7, 24, 28]


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39]
 solution : [7, 24, 28]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26]
 solution : [7, 24, 28]


Before backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26]
 solution : [7, 24, 28]

After backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24, 28]


Before backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24, 28]

After backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 5 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24, 34]


New level: 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, 2147483648), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30, 39}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27]
 solution : [7, 24, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27]
 solution : [7, 24, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27]
 solution : [7, 24, 34]


Solution : [7, 24, 34] has cost 23.


Before backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27]
 solution : [7, 24, 34]

After backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 39]
 solution : [7, 24, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 39]
 solution : [7, 24]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 39]
 solution : [7, 24]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 4096), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 16777216), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 8388608), (48, 1048576), (49, 4194304), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 39]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 6 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 39]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 39]
 solution : [7, 24, 27]


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 39]
 solution : [7, 24, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 39]
 solution : [7, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30, 39}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27]


Solution : [7, 24, 27] has cost 17.


Decide in level 7 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27, 5]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27, 5]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 26, 29}

After reduction : 
 pending  : []
 solution : [7, 24, 27, 5]


Before reduction : 
 pending  : []
 solution : [7, 24, 27, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 27, 5]


Solution : [7, 24, 27, 5] has cost 21.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 27, 5]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26]
 solution : [7, 24, 27]

Essensial at level 8 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 29}

After reduction : 
 pending  : []
 solution : [7, 24, 27, 26]


Before reduction : 
 pending  : []
 solution : [7, 24, 27, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 27, 26]


Solution : [7, 24, 27, 26] has cost 24.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 27, 26]

After backtrack at level 8
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49]
 solution : [7, 24, 27]


Before backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49]
 solution : [7, 24, 27]

After backtrack at level 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24]


Before reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24]


Solution : [7, 24] has cost 10.


Decide in level 7 among pending : [26, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24, 26]


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24, 26]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 24, 26]


Before reduction : 
 pending  : []
 solution : [7, 24, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 26]


Solution : [7, 24, 26] has cost 17.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 26]

After backtrack at level 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24]


Before reduction : 
 pending  : [38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 5]
 solution : [7, 24]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 24, 5]


Before reduction : 
 pending  : []
 solution : [7, 24, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [7, 24, 5]


Solution : [7, 24, 5] has cost 14.


Before backtrack at level 8
 pending : []
 solution : [7, 24, 5]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39]
 solution : [7, 24]


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39]
 solution : [7, 24]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26]
 solution : [7, 24]


Before backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26]
 solution : [7, 24]

After backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24]


Before backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27]
 solution : [7, 24]

After backtrack at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24]


Before backtrack at level 4
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 24]

After backtrack at level 4
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7, 24]


Invert decision for 24 at level 3


New level: 4
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 4 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18, 28]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 28 with phase True at level 4

After decision at level 4
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 28]


New level: 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 28]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, 4294967296), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 5 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 18]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 18]


New level: 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 18]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 28, 18]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 28, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 28, 18]


Solution : [7, 28, 18] has cost 17.


Before backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34]
 solution : [7, 28, 18]

After backtrack at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, 1073741824), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 6 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 34, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 6

After decision at level 6
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, 1073741824), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {32, 30}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]


Solution : [7, 28, 34] has cost 23.


Before backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19]
 solution : [7, 28, 34]

After backtrack at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 28, 34]


Invert decision for 34 at level 6


New level: 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 16384), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 16384), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 7 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 7

After decision at level 7
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 19]


New level: 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32]
 solution : [7, 28, 19]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32]
 solution : [7, 28, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32]
 solution : [7, 28, 19]


Solution : [7, 28, 19] has cost 17.


Before backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32]
 solution : [7, 28, 19]

After backtrack at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 19]


Invert decision for 19 at level 7


New level: 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 524288), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 2048), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 8 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 39, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 8

After decision at level 8
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 536870912), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 8192), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]


Solution : [7, 28, 39] has cost 24.


Before backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]

After backtrack at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 39]


Invert decision for 39 at level 8


New level: 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 268435456), (28, -1), (29, 1048576), (30, 1048576), (31, -1), (32, 8192), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 9 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 27, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 30}

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]


Solution : [7, 28, 27] has cost 17.


Before backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 27]

After backtrack at level 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 10 among pending : [5, 38, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]


New level: 11
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]


Solution : [7, 28, 38] has cost 28.


Before backtrack at level 11
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]

After backtrack at level 11
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 2097152), (31, -1), (32, 4096), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28]


Solution : [7, 28] has cost 10.


Decide in level 11 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 5]


New level: 12
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 30, 32]
 solution : [7, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 12 among pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 28, 5, 11]


New level: 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 28, 5, 11]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 28, 5, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 12, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 28, 5, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 28, 5, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 28, 5, 11]


Solution : [7, 28, 5, 11] has cost 23.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [7, 28, 5, 11]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 28, 5, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 28, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 28, 5, 20]


New level: 14
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 28, 5, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {21, 22, 15}

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 28, 5, 20]


Before reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 28, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 28, 5, 20]


Solution : [7, 28, 5, 20] has cost 21.


Before backtrack at level 14
 pending : [23, 40, 2, 13, 12]
 solution : [7, 28, 5, 20]

After backtrack at level 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 28, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 28, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 14 among pending : [23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 28, 5, 12]


New level: 15
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 28, 5, 12]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 28, 5, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 28, 5, 12]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 28, 5, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 28, 5, 12]


Solution : [7, 28, 5, 12] has cost 23.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [7, 28, 5, 12]

After backtrack at level 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 28, 5, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 28, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 28, 5]


Solution : [7, 28, 5] has cost 14.


Decide in level 15 among pending : [23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 28, 5, 21]


New level: 16
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 28, 5, 21]


Before reduction : 
 pending  : [23, 40, 22, 2, 13, 15]
 solution : [7, 28, 5, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {22, 15}

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 28, 5, 21]


Before reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 28, 5, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 28, 5, 21]


Solution : [7, 28, 5, 21] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 2, 13]
 solution : [7, 28, 5, 21]

After backtrack at level 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 28, 5, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 28, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 15]
 solution : [7, 28, 5]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 28, 5, 22]


Before reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 28, 5, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 28, 5, 22]


Solution : [7, 28, 5, 22] has cost 21.


Before backtrack at level 16
 pending : [23, 40, 2, 13, 15]
 solution : [7, 28, 5, 22]

After backtrack at level 16
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 28, 5]


Before backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 28, 5]

After backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 28, 5]


Before backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 28, 5]

After backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 28, 5]


Before backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 28, 5]

After backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 28, 5]


Before backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 28, 5]

After backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 11]
 solution : [7, 28, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 11]
 solution : [7, 28]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 26, 30, 32, 11]
 solution : [7, 28]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 26]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 26]


Solution : [7, 28, 26] has cost 17.


Before backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 28, 26]

After backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 28]


Before backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32]
 solution : [7, 28]

After backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 28]


Before backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5]
 solution : [7, 28]

After backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38]
 solution : [7, 28]


Before backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38]
 solution : [7, 28]

After backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27]
 solution : [7, 28]


Before backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27]
 solution : [7, 28]

After backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39]
 solution : [7, 28]


Before backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39]
 solution : [7, 28]

After backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19]
 solution : [7, 28]


Before backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19]
 solution : [7, 28]

After backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34]
 solution : [7, 28]


Before backtrack at level 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34]
 solution : [7, 28]

After backtrack at level 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34, 18]
 solution : [7, 28]


Invert decision for 28 at level 4


New level: 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34, 18]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34, 18]
 solution : [7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34, 18]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 5 among pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 34, 18]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 34 with phase True at level 5

After decision at level 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]


New level: 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 30, 32, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, 2147483648), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : {32, 30}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]


Solution : [7, 34] has cost 19.


Before backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18]
 solution : [7, 34]

After backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18, 30, 32]
 solution : [7, 34]


Invert decision for 34 at level 5


New level: 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18, 30, 32]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18, 30, 32]
 solution : [7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 32768), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 268435456), (39, 32768), (40, 4194304), (41, 33554432), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 4194304), (49, 16777216), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18, 30, 32]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 6 among pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 18, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 18 with phase True at level 6

After decision at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 30, 32]
 solution : [7, 18]


New level: 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 30, 32]
 solution : [7, 18]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 19, 30, 32]
 solution : [7, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, 2147483648), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : {2, 40, 11, 12, 13, 15, 19, 20, 21, 22, 23}

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 30, 32]
 solution : [7, 18]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 30, 32]
 solution : [7, 18]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, 0), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 30, 32]
 solution : [7, 18]


Solution : [7, 18] has cost 13.


Decide in level 7 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 27, 39, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 7

After decision at level 7
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 27]


New level: 8
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : {32, 30, 39}

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38]
 solution : [7, 18, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38]
 solution : [7, 18, 27]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, 0), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38]
 solution : [7, 18, 27]


Solution : [7, 18, 27] has cost 20.


Before backtrack at level 8
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38]
 solution : [7, 18, 27]

After backtrack at level 8
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 27]


Invert decision for 27 at level 7


New level: 8
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18]


Solution : [7, 18] has cost 13.


Decide in level 8 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 26]


New level: 9
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 26]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, 4096), (40, -1), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 5, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 18, 26]


Before reduction : 
 pending  : []
 solution : [7, 18, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 18, 26]


Solution : [7, 18, 26] has cost 20.


Before backtrack at level 9
 pending : []
 solution : [7, 18, 26]

After backtrack at level 9
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 38, 39, 30, 32]
 solution : [7, 18]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {32, 33, 36, 38, 39, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 18, 5]


Before reduction : 
 pending  : []
 solution : [7, 18, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, 0), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [7, 18, 5]


Solution : [7, 18, 5] has cost 17.


Before backtrack at level 9
 pending : []
 solution : [7, 18, 5]

After backtrack at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32]
 solution : [7, 18]


Before backtrack at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32]
 solution : [7, 18]

After backtrack at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26]
 solution : [7, 18]


Before backtrack at level 7
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26]
 solution : [7, 18]

After backtrack at level 7
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 18]


Invert decision for 18 at level 6


New level: 7
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 7 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 39, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 39 with phase True at level 7

After decision at level 7
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]


New level: 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, 1073741824), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]


Solution : [7, 39] has cost 20.


Before backtrack at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]

After backtrack at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7, 39]


Invert decision for 39 at level 7


New level: 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 536870912), (28, -1), (29, 1048576), (30, 2097152), (31, -1), (32, 16384), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 8 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 19, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 19]


New level: 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 19]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, 1073741824), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : {2, 40, 11, 12, 13, 15, 20, 21, 22, 23}

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 27]
 solution : [7, 19]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 27]
 solution : [7, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 0), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, 0), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 27]
 solution : [7, 19]


Solution : [7, 19] has cost 13.


Decide in level 9 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26]
 solution : [7, 19, 27]


New level: 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26]
 solution : [7, 19, 27]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 26]
 solution : [7, 19, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 30}

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26]
 solution : [7, 19, 27]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26]
 solution : [7, 19, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, 0), (31, -1), (32, 0), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26]
 solution : [7, 19, 27]


Solution : [7, 19, 27] has cost 20.


Before backtrack at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26]
 solution : [7, 19, 27]

After backtrack at level 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19]


Before reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, 512), (39, -1), (40, -1), (41, 33554432), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19]


Solution : [7, 19] has cost 13.


Decide in level 10 among pending : [5, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19, 5]


New level: 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19, 5]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 524288), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 2048), (37, -1), (38, 2048), (39, -1), (40, -1), (41, 67108864), (42, 262144), (43, 262144), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 19, 5]


Before reduction : 
 pending  : []
 solution : [7, 19, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 19, 5]


Solution : [7, 19, 5] has cost 17.


Before backtrack at level 11
 pending : []
 solution : [7, 19, 5]

After backtrack at level 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19]


Before reduction : 
 pending  : [9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 26, 30, 32]
 solution : [7, 19]

Essensial at level 11 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : {32, 33, 36, 38, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : []
 solution : [7, 19, 26]


Before reduction : 
 pending  : []
 solution : [7, 19, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, 0), (39, -1), (40, -1), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [7, 19, 26]


Solution : [7, 19, 26] has cost 20.


Before backtrack at level 11
 pending : []
 solution : [7, 19, 26]

After backtrack at level 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32]
 solution : [7, 19]


Before backtrack at level 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32]
 solution : [7, 19]

After backtrack at level 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5]
 solution : [7, 19]


Before backtrack at level 9
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5]
 solution : [7, 19]

After backtrack at level 9
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, -1), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 9 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 27]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 27 with phase True at level 9

After decision at level 9
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


New level: 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 30, 32, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, 1073741824), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : {32, 30}

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 0), (31, -1), (32, 0), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 10 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 38, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]


New level: 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, 134217728), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 8388608), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]


Solution : [7, 27, 38] has cost 31.


Before backtrack at level 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]

After backtrack at level 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 8388608), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 8388608), (27, -1), (28, -1), (29, 65536), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 1024), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 67108864), (42, 32768), (43, 32768), (44, -1), (45, -1), (46, -1), (47, 16777216), (48, 1048576), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 11 among pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 41, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 41 with phase True at level 11

After decision at level 11
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]


New level: 12
 pending : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]


Before reduction : 
 pending  : [26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 67108864), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 4096), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 67108864), (12, 33554432), (13, 540672), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {33, 36, 9, 42, 43, 47, 48, 49, 29}

After reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]


Before reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 4096), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 67108864), (12, 33554432), (13, 540672), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 4096), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 67108864), (12, 33554432), (13, 540672), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]


Solution : [7, 27, 41] has cost 31.


Before backtrack at level 12
 pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 27, 41]

After backtrack at level 12
 pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 41]


Invert decision for 41 at level 11


New level: 12
 pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 4096), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 67108864), (12, 33554432), (13, 540672), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 4096), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 12 among pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 11, 9, 29, 33, 47, 36, 42, 43, 48, 49]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]


New level: 13
 pending : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]


Before reduction : 
 pending  : [26, 5, 23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 12, 13, 15}

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]


Before reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]


Solution : [7, 27, 11] has cost 22.


Before backtrack at level 13
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49]
 solution : [7, 27, 11]

After backtrack at level 13
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 2, 13, 15, 12]
 solution : [7, 27, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 2, 13, 15, 12]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 2, 13, 15, 12]
 solution : [7, 27]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 65536), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 4096), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 131072), (30, -1), (31, -1), (32, -1), (33, 1024), (34, -1), (35, -1), (36, 512), (37, -1), (38, -1), (39, -1), (40, 4096), (41, -1), (42, 65536), (43, 65536), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 2, 13, 15, 12]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 13 among pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 49, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 49 with phase True at level 13

After decision at level 13
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 27, 49]


New level: 14
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 27, 49]


Before reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 36, 42, 43, 48, 2, 13, 15, 12]
 solution : [7, 27, 49]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 4096), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {48, 42, 43, 36}

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12]
 solution : [7, 27, 49]


Before reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12]
 solution : [7, 27, 49]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 4096), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 4096), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12]
 solution : [7, 27, 49]


Solution : [7, 27, 49] has cost 44.


Before backtrack at level 14
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12]
 solution : [7, 27, 49]

After backtrack at level 14
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27, 49]


Invert decision for 49 at level 13


New level: 14
 pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27]


Before reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 4096), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, 4096), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27]


Solution : [7, 27] has cost 13.


Decide in level 14 among pending : [26, 5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 26 with phase True at level 14

After decision at level 14
 pending : [5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27, 26]


New level: 15
 pending : [5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27, 26]


Before reduction : 
 pending  : [5, 23, 40, 22, 21, 20, 9, 29, 33, 47, 2, 13, 15, 12, 36, 42, 43, 48]
 solution : [7, 27, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, -1), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, -1), (31, -1), (32, -1), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, -1), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 5, 9, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 26]


Solution : [7, 27, 26] has cost 20.


Before backtrack at level 15
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 26]

After backtrack at level 15
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 27, 26]


Invert decision for 26 at level 14


New level: 15
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 27]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 27]

Essensial at level 15 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {33, 36, 9, 42, 43, 47, 48, 29}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 5]


Solution : [7, 27, 5] has cost 17.


Before backtrack at level 15
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 27, 5]

After backtrack at level 15
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 27]


Before backtrack at level 14
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48]
 solution : [7, 27]

After backtrack at level 14
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26]
 solution : [7, 27]


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26]
 solution : [7, 27]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49]
 solution : [7, 27]


Before backtrack at level 12
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49]
 solution : [7, 27]

After backtrack at level 12
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11]
 solution : [7, 27]


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11]
 solution : [7, 27]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41]
 solution : [7, 27]


Before backtrack at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41]
 solution : [7, 27]

After backtrack at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32, 38]
 solution : [7, 27]


Invert decision for 27 at level 9


New level: 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32, 38]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32, 38]
 solution : [7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32, 38]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 10 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32, 38]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 38 with phase True at level 10

After decision at level 10
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]


New level: 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, 268435456), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]


Solution : [7, 38] has cost 24.


Before backtrack at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]

After backtrack at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 38]


Invert decision for 38 at level 10


New level: 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, 33554432), (6, -1), (7, -1), (8, -1), (9, 262144), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 1048576), (24, -1), (25, -1), (26, 33554432), (27, -1), (28, -1), (29, 262144), (30, 4194304), (31, -1), (32, 8192), (33, 4096), (34, -1), (35, -1), (36, 4096), (37, -1), (38, -1), (39, -1), (40, 1048576), (41, 134217728), (42, 131072), (43, 131072), (44, -1), (45, -1), (46, -1), (47, 33554432), (48, 4194304), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7]


Solution : [7] has cost 6.


Decide in level 11 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 5, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]

Coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 5]


New level: 12
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 11, 41, 30, 32]
 solution : [7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1048576), (3, -1), (4, -1), (5, 134217728), (6, -1), (7, -1), (8, -1), (9, 1048576), (10, -1), (11, 67108864), (12, 33554432), (13, 1114112), (14, -1), (15, 524288), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 4194304), (24, -1), (25, -1), (26, 134217728), (27, -1), (28, -1), (29, 1048576), (30, 4194304), (31, -1), (32, 32768), (33, 16384), (34, -1), (35, -1), (36, 16384), (37, -1), (38, -1), (39, -1), (40, 4194304), (41, 134217728), (42, 524288), (43, 524288), (44, -1), (45, -1), (46, -1), (47, 67108864), (48, 16777216), (49, 67108864), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 26, 29, 30}

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11]
 solution : [7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 12 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5, 11]


New level: 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 12, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 5, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 5, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 5, 11]


Solution : [7, 5, 11] has cost 19.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [7, 5, 11]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 5, 20]


New level: 14
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 5, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {21, 22, 15}

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 5, 20]


Before reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 5, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 5, 20]


Solution : [7, 5, 20] has cost 17.


Before backtrack at level 14
 pending : [23, 40, 2, 13, 12]
 solution : [7, 5, 20]

After backtrack at level 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 5, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 14 among pending : [23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 5, 12]


New level: 15
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 5, 12]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 5, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 5, 12]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 5, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 5, 12]


Solution : [7, 5, 12] has cost 19.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [7, 5, 12]

After backtrack at level 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 5, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 5]


Solution : [7, 5] has cost 10.


Decide in level 15 among pending : [23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 5, 21]


New level: 16
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 5, 21]


Before reduction : 
 pending  : [23, 40, 22, 2, 13, 15]
 solution : [7, 5, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {22, 15}

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 5, 21]


Before reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 5, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 5, 21]


Solution : [7, 5, 21] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 2, 13]
 solution : [7, 5, 21]

After backtrack at level 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 5, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 5]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 15]
 solution : [7, 5]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 5, 22]


Before reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 5, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 5, 22]


Solution : [7, 5, 22] has cost 17.


Before backtrack at level 16
 pending : [23, 40, 2, 13, 15]
 solution : [7, 5, 22]

After backtrack at level 16
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 5]


Before backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 5]

After backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 5]


Before backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 5]

After backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 5]


Before backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 5]

After backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 5]


Before backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 5]

After backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 41, 30, 32, 11]
 solution : [7, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 41, 30, 32, 11]
 solution : [7]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 9, 29, 33, 47, 36, 42, 43, 48, 26, 49, 41, 30, 32, 11]
 solution : [7]

Essensial at level 12 : {26}

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : {32, 33, 36, 9, 42, 43, 41, 47, 48, 49, 29, 30}

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 26]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0), (34, -1), (35, -1), (36, 0), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, 0), (42, 0), (43, 0), (44, -1), (45, -1), (46, -1), (47, 0), (48, 0), (49, 0), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]
 solution : [7, 26]


Solution : [7, 26] has cost 13.


Decide in level 12 among pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 11]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 26, 11]


New level: 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 26, 11]


Before reduction : 
 pending  : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 26, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 33554432), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : {2, 12, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 26, 11]


Before reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 26, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20]
 solution : [7, 26, 11]


Solution : [7, 26, 11] has cost 22.


Before backtrack at level 13
 pending : [23, 40, 22, 21, 20]
 solution : [7, 26, 11]

After backtrack at level 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 26, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 26]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 262144), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 20, 2, 13, 15, 12]
 solution : [7, 26]


Solution : [7, 26] has cost 13.


Decide in level 13 among pending : [23, 40, 22, 21, 20, 2, 13, 15, 12]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 20 with phase True at level 13

After decision at level 13
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 26, 20]


New level: 14
 pending : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 26, 20]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15, 12]
 solution : [7, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, 16777216), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : {21, 22, 15}

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 26, 20]


Before reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 26, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12]
 solution : [7, 26, 20]


Solution : [7, 26, 20] has cost 20.


Before backtrack at level 14
 pending : [23, 40, 2, 13, 12]
 solution : [7, 26, 20]

After backtrack at level 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 26, 20]


Invert decision for 20 at level 13


New level: 14
 pending : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 26]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 4194304), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 12, 22, 21, 15]
 solution : [7, 26]


Solution : [7, 26] has cost 13.


Decide in level 14 among pending : [23, 40, 2, 13, 12, 22, 21, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 26, 12]


New level: 15
 pending : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 26, 12]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 21, 15]
 solution : [7, 26, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 16777216), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : {2, 13, 15}

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 26, 12]


Before reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 26, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21]
 solution : [7, 26, 12]


Solution : [7, 26, 12] has cost 22.


Before backtrack at level 15
 pending : [23, 40, 22, 21]
 solution : [7, 26, 12]

After backtrack at level 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 26, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 65536), (22, 65536), (23, 2048), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2048), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [23, 40, 22, 21, 2, 13, 15]
 solution : [7, 26]


Solution : [7, 26] has cost 13.


Decide in level 15 among pending : [23, 40, 22, 21, 2, 13, 15]

Coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 26, 21]


New level: 16
 pending : [23, 40, 22, 2, 13, 15]
 solution : [7, 26, 21]


Before reduction : 
 pending  : [23, 40, 22, 2, 13, 15]
 solution : [7, 26, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 262144), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 8388608), (22, 262144), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : {22, 15}

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 26, 21]


Before reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 26, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, 0), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 0), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13]
 solution : [7, 26, 21]


Solution : [7, 26, 21] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 2, 13]
 solution : [7, 26, 21]

After backtrack at level 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 26, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [23, 40, 2, 13, 22, 15]
 solution : [7, 26]


Before reduction : 
 pending  : [23, 40, 2, 13, 22, 15]
 solution : [7, 26]

Essensial at level 16 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, 262144), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 264192), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 524288), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 524288), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 26, 22]


Before reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 26, 22]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 524288), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 540672), (14, -1), (15, 131072), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 2097152), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1), (34, -1), (35, -1), (36, -1), (37, -1), (38, -1), (39, -1), (40, 2097152), (41, -1), (42, -1), (43, -1), (44, -1), (45, -1), (46, -1), (47, -1), (48, -1), (49, -1), (50, -1), (51, -1), (52, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [23, 40, 2, 13, 15]
 solution : [7, 26, 22]


Solution : [7, 26, 22] has cost 20.


Before backtrack at level 16
 pending : [23, 40, 2, 13, 15]
 solution : [7, 26, 22]

After backtrack at level 16
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 26]


Before backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22]
 solution : [7, 26]

After backtrack at level 15
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 26]


Before backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21]
 solution : [7, 26]

After backtrack at level 14
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 26]


Before backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12]
 solution : [7, 26]

After backtrack at level 13
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 26]


Before backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20]
 solution : [7, 26]

After backtrack at level 12
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11]
 solution : [7]


Before backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11]
 solution : [7]

After backtrack at level 11
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5]
 solution : [7]


Before backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5]
 solution : [7]

After backtrack at level 10
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38]
 solution : [7]


Before backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38]
 solution : [7]

After backtrack at level 9
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27]
 solution : [7]


Before backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27]
 solution : [7]

After backtrack at level 8
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19]
 solution : [7]


Before backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19]
 solution : [7]

After backtrack at level 7
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39]
 solution : [7]


Before backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39]
 solution : [7]

After backtrack at level 6
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18]
 solution : [7]


Before backtrack at level 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18]
 solution : [7]

After backtrack at level 5
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34]
 solution : [7]


Before backtrack at level 4
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34]
 solution : [7]

After backtrack at level 4
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28]
 solution : [7]


Before backtrack at level 3
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28]
 solution : [7]

After backtrack at level 3
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28, 24]
 solution : [7]


Before backtrack at level 2
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28, 24]
 solution : [7]

After backtrack at level 2
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28, 24, 4]
 solution : [7]


Before backtrack at level 1
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28, 24, 4]
 solution : [7]

After backtrack at level 1
 pending : [23, 40, 2, 13, 15, 22, 21, 12, 20, 26, 9, 29, 33, 47, 36, 42, 43, 48, 49, 41, 30, 32, 11, 5, 38, 27, 19, 39, 18, 34, 28, 24, 4, 3]
 solution : [7]


=========================================================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym_quorum/ivy/simple-election.ivy: acceptor=3,proposer=3]

=========================================================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 14

[MIN NOTE]: maximum branch and bound depth: 16

[MIN NOTE]: number of definitions: 2

invariant [def_didNotPromise] forall A. didNotPromise(A) = (forall P. ~promise(A,P)) # definition, qcost: 4

invariant [def_chosenAt] forall P,Q. chosenAt(Q,P) = (forall A. member(A,Q) -> promise(A,P)) # definition, qcost: 6

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [7, 24, 5]

[MIN NOTE]: solution length: 3

invariant [invar_7] forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_24] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4

invariant [invar_5] forall PROPOSER0,ACCEPTOR0. start(PROPOSER0) | ~promise(ACCEPTOR0,PROPOSER0) # qcost: 4

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 24




[QRM NOTE]: Time elapsed since start: 12.625 seconds

[QRM NOTE]: Time elapsed since last: 1.505 seconds

[QRM NOTE]: Peak memory: 3249157 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


==============================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

==============================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 63: def_didNotPromise ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 64: def_chosenAt ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 65: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 66: invar_24 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 67: invar_5 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS


===============================================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.ivy]

===============================================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {0, 1}

invariant [invar_7] forall PROPOSER0,PROPOSER1,ACCEPTOR0. ~promise(ACCEPTOR0,PROPOSER1) | ~promise(ACCEPTOR0,PROPOSER0) | PROPOSER0 = PROPOSER1 # qcost: 6

invariant [invar_24] forall PROPOSER0. (exists QUORUM0. ~leader(PROPOSER0) | chosenAt(QUORUM0,PROPOSER0)) # qcost: 4


=====================================================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy]

=====================================================================================================================

ivy_check complete=fo ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy


Isolate this:

    The following properties are assumed as axioms:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 17: axiom1

    The following definitions are used:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 29: def2
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 30: def3

    The inductive invariant consists of the following conjectures:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_7
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_24

    The following action implementations are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 48: implementation of decide
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 39: implementation of send_1a
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 42: implementation of send_1b

    The following initializers are present:
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 32: init[after4]

    Initialization must establish the invariant
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_7 ... PASS
        ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_24 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:decide
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_24 ... PASS
        (internal) ext:send_1a
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_24 ... PASS
        (internal) ext:send_1b
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 58: invar8 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 63: invar_7 ... PASS
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 64: invar_24 ... PASS

    The following program assertions are treated as assumptions:
        in action send_1b when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 43: assumption
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 44: assumption
        in action decide when called from the environment:
            ivybench/sym_quorum/ivy/simple-election.acceptor_3_proposer_3.0.assert.ivy: line 49: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 16.673 seconds

[QRM NOTE]: Time elapsed since last: 4.047 seconds

[QRM NOTE]: Peak memory: 3288938 bytes


**********************************************************************

	[QRM]: ivybench/sym_quorum/ivy/simple-election.ivy

**********************************************************************

[QRM RESULT]: PASS

