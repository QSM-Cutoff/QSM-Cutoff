
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 8.454 seconds

[QRM NOTE]: Time elapsed since last: 8.454 seconds

[QRM NOTE]: Peak memory: 1177568 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: internal('node',)
predicate: allowed_in('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000110000000000
lex min decimal: 1536
states:
000110000000000
000101000000000
000011000000000




=== State Orbit 3 =====================
size : 3
repr state: 000100000000000
lex min decimal: 512
states:
000010000000000
000100000000000
000001000000000




=== State Orbit 4 =====================
size : 6
repr state: 001110001000000
lex min decimal: 7176
states:
001110000001000
001110001000000
010101000000010
100011000100000
010101010000000
100011000000100




=== State Orbit 5 =====================
size : 3
repr state: 001110001001000
lex min decimal: 7240
states:
001110001001000
100011000100100
010101010000010




=== State Orbit 6 =====================
size : 6
repr state: 001110001001100
lex min decimal: 7242
states:
100011010100100
010101010001010
010101010100010
001110001001100
100011001100100
001110001001010




=== State Orbit 7 =====================
size : 3
repr state: 001110001001110
lex min decimal: 7246
states:
001110001001110
100011011100100
010101010101010




=== State Orbit 8 =====================
size : 6
repr state: 001110001000100
lex min decimal: 7178
states:
010101010100000
100011010100000
100011001000100
001110000001010
001110001000100
010101000001010




=== State Orbit 9 =====================
size : 6
repr state: 001110001000110
lex min decimal: 7182
states:
001110001000110
100011011100000
010101000101010
001110000001110
100011011000100
010101010101000




=== State Orbit 10 =====================
size : 6
repr state: 001110001000010
lex min decimal: 7180
states:
100011001100000
010101010001000
001110001000010
010101000100010
001110000001100
100011010000100




=== State Orbit 11 =====================
size : 6
repr state: 010100010000000
lex min decimal: 5128
states:
001100001000000
010100010000000
100001000000100
001010000001000
100010000100000
010001000000010




=== State Orbit 12 =====================
size : 3
repr state: 011100011000000
lex min decimal: 14528
states:
011100011000000
101010000101000
110001000000110




=== State Orbit 13 =====================
size : 6
repr state: 011100011100000
lex min decimal: 14532
states:
011100011100000
011100011000100
110001001000110
110001000001110
101010000101010
101010010101000




=== State Orbit 14 =====================
size : 3
repr state: 011100011100100
lex min decimal: 14564
states:
110001001001110
011100011100100
101010010101010




=== State Orbit 15 =====================
size : 6
repr state: 010100010100000
lex min decimal: 5130
states:
001100001000100
100010010100000
010100010100000
001010000001010
010001000001010
100001001000100



[QRM NOTE]: Time elapsed since start: 8.575 seconds

[QRM NOTE]: Time elapsed since last: 0.121 seconds

[QRM NOTE]: Peak memory: 1227713 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 8.578 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 190793 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0--0--1-------
6     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
7     : --0--0--1------
7     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
8     : 0--0-----1-----
8     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
9     : --0--0-----1---
9     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
10     : 0--0--------1--
10     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
11     : -0--0--------1-
11     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
24 (*) : -0--0------1---
24     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
25     : --0--0-------1-
25     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
26     : 0--0----1------
26     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
27     : --0--0------1--
27     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0---1-------
28     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
29     : -0--0----1-----
29     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 1---0--1-------
12     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
13     : 1----0--1------
13     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
14     : -1-0-----1-----
14     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
15     : -1---0-----1---
15     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
16     : --10--------1--
16     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
17     : --1-0--------1-
17     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
30 (*) : --1-0------1---
30     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
31     : -1---0-------1-
31     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
32     : --10----1------
32     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
33     : 1----0------1--
33     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
34     : -1-0---1-------
34     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
35     : 1---0----1-----
35     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ---00--1-------
18     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
19     : ---0-0--1------
19     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
20     : ---00----1-----
20     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
21     : ----00-----1---
21     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
22     : ---0-0------1--
22     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
23     : ----00-------1-
23     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0-------0--
39     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
40     : 1----0---0-----
40     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
41     : -1-0---------0-
41     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
42     : -1---0-0-------
42     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
43     : --10-------0---
43     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
44     : --1-0---0------
44     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
45 (*) : 1-1-0----------
45     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
46     : 11---0---------
46     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
47     : -110-----------
47     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 8
num_suborbits: 2
48 (*) : -------11----1-
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
49     : -------11--1---
49     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
50     : ---------1-11--
50     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
51     : --------11-1---
51     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
52     : ---------1--11-
52     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
53     : -------1----11-
53     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
66 (*) : --------11---1-
66     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
67     : -------1---11--
67     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -00----------1-
54     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
55     : -00--------1---
55     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
56     : 0-0---------1--
56     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
57     : 0-0-----1------
57     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-------1-----
58     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : 00-----1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
60 (*) : -0---1-------1-
60     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
61     : --0-1------1---
61     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
62     : 0----1------1--
62     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
63     : --01----1------
63     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
64     : 0---1----1-----
64     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
65     : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
68 (*) : --0-1--------1-
68     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
69     : -0---1-----1---
69     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
70     : --01--------1--
70     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
71     : 0----1--1------
71     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
72     : -0-1-----1-----
72     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
73     : 0---1--1-------
73     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
74 (*) : -11----------1-
74     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
75     : -11--------1---
75     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
76     : 1-1---------1--
76     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
77     : 1-1-----1------
77     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
78     : 11-------1-----
78     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
79     : 11-----1-------
79     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : ----11-------1-
80     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
81     : ----11-----1---
81     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
82     : ---1-1------1--
82     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
83     : ---1-1--1------
83     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
84     : ---11----1-----
84     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
85     : ---11--1-------
85     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : --1-----0--0---
86     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
87     : -1-----0-----0-
87     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
88     : 1--------0--0--
88     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 1-1--------0---
89     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
90     : 11-----------0-
90     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
91     : -11-----0------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
92     : 11----------0--
92     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
93     : -11----0-------
93     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
94     : 1-1------0-----
94     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 01------1--1---
96     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 0-1----1-----1-
97     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : 10------1--1---
98     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
99     : -01------1--1--
99     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : 1-0----1-----1-
100     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
101     : -10------1--1--
101     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
120 (*) : 01------1----1-
120     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
121     : 0-1----1---1---
121     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
122     : 10---------11--
122     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
123     : -01-----11-----
123     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
124     : 1-0------1---1-
124     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
125     : -10----1----1--
125     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
156 (*) : -10----11------
156     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
157     : -01----11------
157     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
158     : 1-0------1-1---
158     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
159     : 0-1------1-1---
159     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
160     : 10----------11-
160     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
161     : 01----------11-
161     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
330 (*) : 10------1----1-
330     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
331     : 1-0----1---1---
331     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
332     : 01---------11--
332     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
333     : -10-----11-----
333     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
334     : 0-1------1---1-
334     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
335     : -01----1----1--
335     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : -1-1----1--1---
102     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
103     : --11---1-----1-
103     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
104     : 1---1---1--1---
104     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
105     : --1-1----1--1--
105     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
106     : 1----1-1-----1-
106     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
107     : -1---1---1--1--
107     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
114 (*) : -1-1----1----1-
114     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
115     : --11---1---1---
115     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
116     : 1---1------11--
116     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
117     : --1-1---11-----
117     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
118     : 1----1---1---1-
118     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
119     : -1---1-1----1--
119     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
162 (*) : -1---1-11------
162     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
163     : --1-1--11------
163     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
164     : 1----1---1-1---
164     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
165     : --11-----1-1---
165     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
166     : 1---1-------11-
166     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
167     : -1-1--------11-
167     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
342 (*) : 1---1---1----1-
342     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
343     : 1----1-1---1---
343     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
344     : -1-1-------11--
344     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
345     : -1---1--11-----
345     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
346     : --11-----1---1-
346     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
347     : --1-1--1----1--
347     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -1-1---01------
108     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
109     : --11---10------
109     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
110     : 1---1----0-1---
110     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
111     : --1-1----1-0---
111     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
112     : 1----1------01-
112     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
113     : -1---1------10-
113     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
138 (*) : -1---1--1----0-
138     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
139     : --1-1--1---0---
139     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
140     : 1----1-----10--
140     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
141     : --11----01-----
141     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
142     : 1---1----0---1-
142     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
143     : -1-1---0----1--
143     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
174 (*) : -1---1--1---0--
174     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
175     : --1-1--1-0-----
175     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
176     : 1----1-----1-0-
176     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
177     : --11---0-1-----
177     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
178     : 1---1------0-1-
178     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
179     : -1-1----0---1--
179     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
126 (*) : -1------1---01-
126     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
127     : --1----1-0-1---
127     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
128     : 1----------110-
128     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
129     : --1----011-----
129     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
130     : 1--------1-0-1-
130     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
131     : -1-----10---1--
131     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
180 (*) : -1------1--10--
180     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
181     : --1----1-0---1-
181     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
182     : 1-------1--1-0-
182     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
183     : --1----0-1--1--
183     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
184     : 1------1---0-1-
184     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
185     : -1------01--1--
185     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
186 (*) : -1------1--1-0-
186     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
187     : --1----1---0-1-
187     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
188     : 1-------1--10--
188     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
189     : --1-----01--1--
189     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
190     : 1------1-0---1-
190     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
191     : -1-----0-1--1--
191     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
318 (*) : 1-------1---01-
318     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
319     : 1------1-0-1---
319     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
320     : -1---------110-
320     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
321     : -1-----011-----
321     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
322     : --1------1-0-1-
322     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
323     : --1----10---1--
323     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 3
132 (*) : -10-----1----0-
132     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
133     : -01----1---0---
133     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
134     : 1-0--------10--
134     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
135     : 0-1-----01-----
135     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
136     : 10-------0---1-
136     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
137     : 01-----0----1--
137     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
144 (*) : 01-----01------
144     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0-1----10------
145     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : 10-------0-1---
146     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -01------1-0---
147     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : 1-0---------01-
148     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : -10---------10-
149     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
168 (*) : -10-----1---0--
168     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
169     : -01----1-0-----
169     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
170     : 1-0--------1-0-
170     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
171     : 0-1----0-1-----
171     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
172     : 10---------0-1-
172     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
173     : 01------0---1--
173     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
150 (*) : -1-----01---0--
150     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
151     : --1----100-----
151     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
152     : 1--------0-1-0-
152     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
153     : --1----0-1-0---
153     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
154     : 1----------001-
154     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
155     : -1------0---10-
155     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
192 (*) : 0---0---1--1---
192     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
193     : 0----0-1-----1-
193     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
194     : -0-0----1--1---
194     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
195     : -0---0---1--1--
195     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
196     : --00---1-----1-
196     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
197     : --0-0----1--1--
197     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
228 (*) : --0-0--11------
228     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
229     : -0---0-11------
229     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
230     : --00-----1-1---
230     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
231     : 0----0---1-1---
231     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
232     : -0-0--------11-
232     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
233     : 0---0-------11-
233     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : 0---0---1----1-
270     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
271     : 0----0-1---1---
271     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
272     : -0-0-------11--
272     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
273     : -0---0--11-----
273     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
274     : --00-----1---1-
274     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
275     : --0-0--1----1--
275     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
324 (*) : -0-0----1----1-
324     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
325     : --00---1---1---
325     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
326     : 0---0------11--
326     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
327     : --0-0---11-----
327     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
328     : 0----0---1---1-
328     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
329     : -0---0-1----1--
329     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
198 (*) : ----0---1--10--
198     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
199     : -----0-1-0---1-
199     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
200     : ---0----1--1-0-
200     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
201     : -----0-0-1--1--
201     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
202     : ---0---1---0-1-
202     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
203     : ----0---01--1--
203     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
222 (*) : ----0---1--1-0-
222     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
223     : -----0-1---0-1-
223     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
224     : ---0----1--10--
224     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
225     : -----0--01--1--
225     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
226     : ---0---1-0---1-
226     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
227     : ----0--0-1--1--
227     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
264 (*) : ----0---1---01-
264     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
265     : -----0-1-0-1---
265     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
266     : ---0-------110-
266     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
267     : -----0-011-----
267     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
268     : ---0-----1-0-1-
268     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
269     : ----0--10---1--
269     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
312 (*) : ---0----1---01-
312     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
313     : ---0---1-0-1---
313     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
314     : ----0------110-
314     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
315     : ----0--011-----
315     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
316     : -----0---1-0-1-
316     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
317     : -----0-10---1--
317     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
204 (*) : --0-----1--10--
204     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
205     : -0-----1-0---1-
205     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
206     : --0-----1--1-0-
206     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
207     : 0------0-1--1--
207     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
208     : -0-----1---0-1-
208     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
209     : 0-------01--1--
209     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
252 (*) : --0-----1---01-
252     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
253     : -0-----1-0-1---
253     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
254     : --0--------110-
254     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
255     : 0------011-----
255     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
256     : -0-------1-0-1-
256     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
257     : 0------10---1--
257     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
210 (*) : -----1--1--10--
210     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : ----1--1-0---1-
211     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -----1--1--1-0-
212     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : ---1---0-1--1--
213     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : ----1--1---0-1-
214     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : ---1----01--1--
215     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
258 (*) : -----1--1---01-
258     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
259     : ----1--1-0-1---
259     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
260     : -----1-----110-
260     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
261     : ---1---011-----
261     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
262     : ----1----1-0-1-
262     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
263     : ---1---10---1--
263     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
216 (*) : ---10---1--1---
216     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
217     : ---1-0-1-----1-
217     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
218     : ---01---1--1---
218     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
219     : ----10---1--1--
219     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
220     : ---0-1-1-----1-
220     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
221     : ----01---1--1--
221     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
234 (*) : ----01-11------
234     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
235     : ----10-11------
235     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
236     : ---0-1---1-1---
236     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
237     : ---1-0---1-1---
237     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
238     : ---01-------11-
238     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
239     : ---10-------11-
239     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
276 (*) : ---10---1----1-
276     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
277     : ---1-0-1---1---
277     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
278     : ---01------11--
278     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
279     : ----10--11-----
279     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
280     : ---0-1---1---1-
280     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
281     : ----01-1----1--
281     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
336 (*) : ---01---1----1-
336     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
337     : ---0-1-1---1---
337     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
338     : ---10------11--
338     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
339     : ----01--11-----
339     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
340     : ---1-0---1---1-
340     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
341     : ----10-1----1--
341     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
240 (*) : --0-----10--0--
240     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
241     : -0-----1-0--0--
241     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
242     : --0----0---1-0-
242     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
243     : 0------0-1---0-
243     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
244     : -0------0--0-1-
244     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
245     : 0-------0--01--
245     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
246 (*) : -----1--10--0--
246     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : ----1--1-0--0--
247     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : -----1-0---1-0-
248     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : ---1---0-1---0-
249     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : ----1---0--0-1-
250     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : ---1----0--01--
251     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ----01--1---0--
282     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
283     : ----10-1-0-----
283     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
284     : ---0-1-----1-0-
284     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
285     : ---1-0-0-1-----
285     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
286     : ---01------0-1-
286     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
287     : ---10---0---1--
287     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --0-0---1---0--
288     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
289     : -0---0-1-0-----
289     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
290     : --00-------1-0-
290     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
291     : 0----0-0-1-----
291     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
292     : -0-0-------0-1-
292     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
293     : 0---0---0---1--
293     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
294 (*) : ---00---1---0--
294     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
295     : ---0-0-1-0-----
295     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
296     : ---00------1-0-
296     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
297     : ----00-0-1-----
297     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
298     : ---0-0-----0-1-
298     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
299     : ----00--0---1--
299     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
300 (*) : ---0----10--0--
300     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
301     : ---0---1-0--0--
301     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
302     : ----0--0---1-0-
302     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
303     : ----0--0-1---0-
303     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
304     : -----0--0--0-1-
304     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
305     : -----0--0--01--
305     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
306 (*) : -1-0----1---0--
306     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
307     : --10---1-0-----
307     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
308     : 1---0------1-0-
308     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
309     : --1-0--0-1-----
309     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
310     : 1----0-----0-1-
310     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
311     : -1---0--0---1--
311     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 8.653 seconds

[QRM NOTE]: Time elapsed since last: 0.075 seconds

[QRM NOTE]: Peak memory: 1556773 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 512), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 640), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 512), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 640), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 608), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]

[QRM NOTE]: Time elapsed since start: 8.669 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 496208 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : --1-----0--0---
86     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
87     : -1-----0-----0-
87     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
88     : 1--------0--0--
88     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0--0--1-------
6     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
7     : --0--0--1------
7     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
8     : 0--0-----1-----
8     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
9     : --0--0-----1---
9     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
10     : 0--0--------1--
10     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
11     : -0--0--------1-
11     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
24 (*) : -0--0------1---
24     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
25     : --0--0-------1-
25     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
26     : 0--0----1------
26     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
27     : --0--0------1--
27     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0---1-------
28     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
29     : -0--0----1-----
29     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE0,NODE1)', '~internal(NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE0,NODE1) | internal(NODE2) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 1---0--1-------
12     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
13     : 1----0--1------
13     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
14     : -1-0-----1-----
14     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
15     : -1---0-----1---
15     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
16     : --10--------1--
16     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
17     : --1-0--------1-
17     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
30 (*) : --1-0------1---
30     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
31     : -1---0-------1-
31     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
32     : --10----1------
32     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
33     : 1----0------1--
33     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
34     : -1-0---1-------
34     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
35     : 1---0----1-----
35     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'allowed_in(NODE0)', '~internal(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | internal(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ---00--1-------
18     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
19     : ---0-0--1------
19     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
20     : ---00----1-----
20     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
21     : ----00-----1---
21     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
22     : ---0-0------1--
22     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
23     : ----00-------1-
23     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0-------0--
39     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
40     : 1----0---0-----
40     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
41     : -1-0---------0-
41     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
42     : -1---0-0-------
42     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
43     : --10-------0---
43     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
44     : --1-0---0------
44     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
45 (*) : 1-1-0----------
45     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
46     : 11---0---------
46     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
47     : -110-----------
47     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 8 =====================
size : 8
num_suborbits: 2
48 (*) : -------11----1-
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
49     : -------11--1---
49     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
50     : ---------1-11--
50     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
51     : --------11-1---
51     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
52     : ---------1--11-
52     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
53     : -------1----11-
53     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
66 (*) : --------11---1-
66     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
67     : -------1---11--
67     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$0$2; node$0$sent$1$1, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2, node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2 | node$0$sent$1$0 | node$0$sent$1$1 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE5)', 'sent(NODE0,NODE3)', 'sent(NODE1,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ~sent(NODE1,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -00----------1-
54     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
55     : -00--------1---
55     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
56     : 0-0---------1--
56     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
57     : 0-0-----1------
57     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-------1-----
58     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : 00-----1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~allowed_in(node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~allowed_in(node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', 'sent(NODE0,NODE1)', '~allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
60 (*) : -0---1-------1-
60     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
61     : --0-1------1---
61     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
62     : 0----1------1--
62     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
63     : --01----1------
63     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
64     : 0---1----1-----
64     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
65     : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
68 (*) : --0-1--------1-
68     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
69     : -0---1-----1---
69     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
70     : --01--------1--
70     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
71     : 0----1--1------
71     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
72     : -0-1-----1-----
72     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
73     : 0---1--1-------
73     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE1,NODE2)', '~allowed_in(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE1,NODE2) | allowed_in(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
74 (*) : -11----------1-
74     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
75     : -11--------1---
75     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
76     : 1-1---------1--
76     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
77     : 1-1-----1------
77     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
78     : 11-------1-----
78     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
79     : 11-----1-------
79     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'allowed_in(NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : ----11-------1-
80     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
81     : ----11-----1---
81     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
82     : ---1-1------1--
82     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
83     : ---1-1--1------
83     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
84     : ---11----1-----
84     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
85     : ---11--1-------
85     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'internal(NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 1-1--------0---
89     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
90     : 11-----------0-
90     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
91     : -11-----0------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
92     : 11----------0--
92     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
93     : -11----0-------
93     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
94     : 1-1------0-----
94     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'allowed_in(NODE0)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE2,NODE1) | ~allowed_in(NODE0) | ~allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 01------1--1---
96     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 0-1----1-----1-
97     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : 10------1--1---
98     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
99     : -01------1--1--
99     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : 1-0----1-----1-
100     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
101     : -10------1--1--
101     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
120 (*) : 01------1----1-
120     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
121     : 0-1----1---1---
121     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
122     : 10---------11--
122     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
123     : -01-----11-----
123     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
124     : 1-0------1---1-
124     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
125     : -10----1----1--
125     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
156 (*) : -10----11------
156     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
157     : -01----11------
157     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
158     : 1-0------1-1---
158     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
159     : 0-1------1-1---
159     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
160     : 10----------11-
160     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
161     : 01----------11-
161     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
330 (*) : 10------1----1-
330     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
331     : 1-0----1---1---
331     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
332     : 01---------11--
332     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
333     : -10-----11-----
333     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
334     : 0-1------1---1-
334     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
335     : -01----1----1--
335     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)', '~allowed_in(NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | allowed_in(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4))


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : -1-1----1--1---
102     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
103     : --11---1-----1-
103     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
104     : 1---1---1--1---
104     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
105     : --1-1----1--1--
105     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
106     : 1----1-1-----1-
106     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
107     : -1---1---1--1--
107     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
114 (*) : -1-1----1----1-
114     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
115     : --11---1---1---
115     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
116     : 1---1------11--
116     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
117     : --1-1---11-----
117     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
118     : 1----1---1---1-
118     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
119     : -1---1-1----1--
119     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
162 (*) : -1---1-11------
162     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
163     : --1-1--11------
163     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
164     : 1----1---1-1---
164     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
165     : --11-----1-1---
165     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
166     : 1---1-------11-
166     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
167     : -1-1--------11-
167     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
342 (*) : 1---1---1----1-
342     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
343     : 1----1-1---1---
343     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
344     : -1-1-------11--
344     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
345     : -1---1--11-----
345     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
346     : --11-----1---1-
346     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
347     : --1-1--1----1--
347     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'allowed_in(NODE0)', 'sent(NODE3,NODE5)', 'sent(NODE2,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -1-1---01------
108     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
109     : --11---10------
109     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
110     : 1---1----0-1---
110     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
111     : --1-1----1-0---
111     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
112     : 1----1------01-
112     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
113     : -1---1------10-
113     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
138 (*) : -1---1--1----0-
138     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
139     : --1-1--1---0---
139     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
140     : 1----1-----10--
140     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
141     : --11----01-----
141     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
142     : 1---1----0---1-
142     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
143     : -1-1---0----1--
143     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
174 (*) : -1---1--1---0--
174     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
175     : --1-1--1-0-----
175     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
176     : 1----1-----1-0-
176     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
177     : --11---0-1-----
177     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
178     : 1---1------0-1-
178     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
179     : -1-1----0---1--
179     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE3)', 'internal(NODE1)', 'allowed_in(NODE0)', '~sent(NODE1,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE4,NODE1. ~sent(NODE2,NODE3) | ~internal(NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
126 (*) : -1------1---01-
126     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
127     : --1----1-0-1---
127     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
128     : 1----------110-
128     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
129     : --1----011-----
129     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
130     : 1--------1-0-1-
130     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
131     : -1-----10---1--
131     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
180 (*) : -1------1--10--
180     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
181     : --1----1-0---1-
181     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
182     : 1-------1--1-0-
182     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
183     : --1----0-1--1--
183     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
184     : 1------1---0-1-
184     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
185     : -1------01--1--
185     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
186 (*) : -1------1--1-0-
186     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
187     : --1----1---0-1-
187     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
188     : 1-------1--10--
188     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
189     : --1-----01--1--
189     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
190     : 1------1-0---1-
190     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
191     : -1-----0-1--1--
191     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
318 (*) : 1-------1---01-
318     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
319     : 1------1-0-1---
319     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
320     : -1---------110-
320     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
321     : -1-----011-----
321     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
322     : --1------1-0-1-
322     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
323     : --1----10---1--
323     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', '~sent(NODE3,NODE5)', 'allowed_in(NODE0)', 'sent(NODE2,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE3) | sent(NODE3,NODE5) | ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE0 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4))


=== Prime Orbit 20 =====================
size : 18
num_suborbits: 3
132 (*) : -10-----1----0-
132     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
133     : -01----1---0---
133     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
134     : 1-0--------10--
134     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
135     : 0-1-----01-----
135     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
136     : 10-------0---1-
136     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
137     : 01-----0----1--
137     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
144 (*) : 01-----01------
144     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0-1----10------
145     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : 10-------0-1---
146     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -01------1-0---
147     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : 1-0---------01-
148     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : -10---------10-
149     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
168 (*) : -10-----1---0--
168     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
169     : -01----1-0-----
169     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
170     : 1-0--------1-0-
170     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
171     : 0-1----0-1-----
171     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
172     : 10---------0-1-
172     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
173     : 01------0---1--
173     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'allowed_in(NODE0)', '~allowed_in(NODE3)', '~sent(NODE3,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | allowed_in(NODE3) | sent(NODE3,NODE4) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
150 (*) : -1-----01---0--
150     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
151     : --1----100-----
151     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
152     : 1--------0-1-0-
152     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
153     : --1----0-1-0---
153     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
154     : 1----------001-
154     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
155     : -1------0---10-
155     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$1$sent$1$1, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE2)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
192 (*) : 0---0---1--1---
192     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
193     : 0----0-1-----1-
193     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
194     : -0-0----1--1---
194     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
195     : -0---0---1--1--
195     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
196     : --00---1-----1-
196     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
197     : --0-0----1--1--
197     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
228 (*) : --0-0--11------
228     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
229     : -0---0-11------
229     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
230     : --00-----1-1---
230     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
231     : 0----0---1-1---
231     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
232     : -0-0--------11-
232     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
233     : 0---0-------11-
233     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : 0---0---1----1-
270     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
271     : 0----0-1---1---
271     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
272     : -0-0-------11--
272     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
273     : -0---0--11-----
273     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
274     : --00-----1---1-
274     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
275     : --0-0--1----1--
275     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
324 (*) : -0-0----1----1-
324     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
325     : --00---1---1---
325     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
326     : 0---0------11--
326     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
327     : --0-0---11-----
327     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
328     : 0----0---1---1-
328     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
329     : -0---0-1----1--
329     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE5)', 'sent(NODE0,NODE2)', '~allowed_in(NODE4)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. internal(NODE5) | ~sent(NODE0,NODE2) | allowed_in(NODE4) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
198 (*) : ----0---1--10--
198     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
199     : -----0-1-0---1-
199     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
200     : ---0----1--1-0-
200     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
201     : -----0-0-1--1--
201     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
202     : ---0---1---0-1-
202     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
203     : ----0---01--1--
203     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
222 (*) : ----0---1--1-0-
222     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
223     : -----0-1---0-1-
223     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
224     : ---0----1--10--
224     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
225     : -----0--01--1--
225     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
226     : ---0---1-0---1-
226     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
227     : ----0--0-1--1--
227     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
264 (*) : ----0---1---01-
264     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
265     : -----0-1-0-1---
265     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
266     : ---0-------110-
266     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
267     : -----0-011-----
267     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
268     : ---0-----1-0-1-
268     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
269     : ----0--10---1--
269     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
312 (*) : ---0----1---01-
312     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
313     : ---0---1-0-1---
313     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
314     : ----0------110-
314     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
315     : ----0--011-----
315     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
316     : -----0---1-0-1-
316     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
317     : -----0-10---1--
317     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1, node$1$internal$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1 | node$1$internal$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE3)', '~internal(NODE4)', '~sent(NODE2,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | internal(NODE4) | sent(NODE2,NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
204 (*) : --0-----1--10--
204     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
205     : -0-----1-0---1-
205     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
206     : --0-----1--1-0-
206     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
207     : 0------0-1--1--
207     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
208     : -0-----1---0-1-
208     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
209     : 0-------01--1--
209     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
252 (*) : --0-----1---01-
252     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
253     : -0-----1-0-1---
253     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
254     : --0--------110-
254     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
255     : 0------011-----
255     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
256     : -0-------1-0-1-
256     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
257     : 0------10---1--
257     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', '~allowed_in(NODE2)', 'sent(NODE1,NODE3)', '~sent(NODE2,NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE0,NODE2) | allowed_in(NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | ((NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
210 (*) : -----1--1--10--
210     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : ----1--1-0---1-
211     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -----1--1--1-0-
212     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : ---1---0-1--1--
213     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : ----1--1---0-1-
214     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : ---1----01--1--
215     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
258 (*) : -----1--1---01-
258     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
259     : ----1--1-0-1---
259     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
260     : -----1-----110-
260     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
261     : ---1---011-----
261     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
262     : ----1----1-0-1-
262     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
263     : ---1---10---1--
263     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE3)', 'internal(NODE0)', '~sent(NODE0,NODE1)', 'sent(NODE1,NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE2,NODE3) | ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | ((NODE0 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))


=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
216 (*) : ---10---1--1---
216     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
217     : ---1-0-1-----1-
217     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
218     : ---01---1--1---
218     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
219     : ----10---1--1--
219     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
220     : ---0-1-1-----1-
220     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
221     : ----01---1--1--
221     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
234 (*) : ----01-11------
234     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
235     : ----10-11------
235     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
236     : ---0-1---1-1---
236     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
237     : ---1-0---1-1---
237     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
238     : ---01-------11-
238     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
239     : ---10-------11-
239     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
276 (*) : ---10---1----1-
276     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
277     : ---1-0-1---1---
277     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
278     : ---01------11--
278     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
279     : ----10--11-----
279     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
280     : ---0-1---1---1-
280     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
281     : ----01-1----1--
281     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
336 (*) : ---01---1----1-
336     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
337     : ---0-1-1---1---
337     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
338     : ---10------11--
338     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
339     : ----01--11-----
339     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
340     : ---1-0---1---1-
340     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
341     : ----10-1----1--
341     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE5)', 'internal(NODE0)', 'sent(NODE1,NODE3)', 'sent(NODE2,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. internal(NODE5) | ~internal(NODE0) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
240 (*) : --0-----10--0--
240     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
241     : -0-----1-0--0--
241     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
242     : --0----0---1-0-
242     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
243     : 0------0-1---0-
243     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
244     : -0------0--0-1-
244     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
245     : 0-------0--01--
245     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~allowed_in(NODE1)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | allowed_in(NODE1) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
246 (*) : -----1--10--0--
246     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : ----1--1-0--0--
247     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : -----1-0---1-0-
248     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : ---1---0-1---0-
249     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : ----1---0--0-1-
250     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : ---1----0--01--
251     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$1, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~sent(NODE0,NODE1)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ----01--1---0--
282     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
283     : ----10-1-0-----
283     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
284     : ---0-1-----1-0-
284     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
285     : ---1-0-0-1-----
285     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
286     : ---01------0-1-
286     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
287     : ---10---0---1--
287     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~sent(NODE0,NODE1)', 'sent(NODE1,NODE0)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --0-0---1---0--
288     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
289     : -0---0-1-0-----
289     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
290     : --00-------1-0-
290     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
291     : 0----0-0-1-----
291     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
292     : -0-0-------0-1-
292     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
293     : 0---0---0---1--
293     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
294 (*) : ---00---1---0--
294     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
295     : ---0-0-1-0-----
295     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
296     : ---00------1-0-
296     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
297     : ----00-0-1-----
297     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
298     : ---0-0-----0-1-
298     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
299     : ----00--0---1--
299     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
300 (*) : ---0----10--0--
300     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
301     : ---0---1-0--0--
301     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
302     : ----0--0---1-0-
302     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
303     : ----0--0-1---0-
303     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
304     : -----0--0--0-1-
304     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
305     : -----0--0--01--
305     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
306 (*) : -1-0----1---0--
306     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
307     : --10---1-0-----
307     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
308     : 1---0------1-0-
308     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
309     : --1-0--0-1-----
309     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
310     : 1----0-----0-1-
310     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
311     : -1---0--0---1--
311     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
86 (*) : --1-----0--0---
86     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
87     : -1-----0-----0-
87     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
88     : 1--------0--0--
88     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 12
num_suborbits: 2
6 (*) : -0--0--1-------
6     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
7     : --0--0--1------
7     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
8     : 0--0-----1-----
8     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
9     : --0--0-----1---
9     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
10     : 0--0--------1--
10     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
11     : -0--0--------1-
11     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
24 (*) : -0--0------1---
24     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
25     : --0--0-------1-
25     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
26     : 0--0----1------
26     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
27     : --0--0------1--
27     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
28     : 0--0---1-------
28     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
29     : -0--0----1-----
29     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. allowed_in(NODE2) | ~sent(NODE0,NODE1) | internal(NODE2) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 1---0--1-------
12     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
13     : 1----0--1------
13     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
14     : -1-0-----1-----
14     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
15     : -1---0-----1---
15     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
16     : --10--------1--
16     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
17     : --1-0--------1-
17     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
30 (*) : --1-0------1---
30     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
31     : -1---0-------1-
31     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
32     : --10----1------
32     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
33     : 1----0------1--
33     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
34     : -1-0---1-------
34     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
35     : 1---0----1-----
35     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | internal(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : ---00--1-------
18     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
19     : ---0-0--1------
19     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
20     : ---00----1-----
20     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
21     : ----00-----1---
21     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
22     : ---0-0------1--
22     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
23     : ----00-------1-
23     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 5 =====================
size : 3
num_suborbits: 1
36 (*) : 1---00---------
36     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
37     : -1-0-0---------
37     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
38     : --100----------
38     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
39 (*) : 1---0-------0--
39     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
40     : 1----0---0-----
40     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
41     : -1-0---------0-
41     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
42     : -1---0-0-------
42     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
43     : --10-------0---
43     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
44     : --1-0---0------
44     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 9




=== Prime Orbit 7 =====================
size : 3
num_suborbits: 1
45 (*) : 1-1-0----------
45     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
46     : 11---0---------
46     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
47     : -110-----------
47     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 8 =====================
size : 8
num_suborbits: 2
48 (*) : -------11----1-
48     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
49     : -------11--1---
49     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
50     : ---------1-11--
50     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
51     : --------11-1---
51     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
52     : ---------1--11-
52     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
53     : -------1----11-
53     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
66 (*) : --------11---1-
66     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
67     : -------1---11--
67     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 15
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ~sent(NODE1,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))
qcost : 21




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : -00----------1-
54     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
55     : -00--------1---
55     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
56     : 0-0---------1--
56     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
57     : 0-0-----1------
57     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
58     : 00-------1-----
58     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
59     : 00-----1-------
59     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
60 (*) : -0---1-------1-
60     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
61     : --0-1------1---
61     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
62     : 0----1------1--
62     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
63     : --01----1------
63     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
64     : 0---1----1-----
64     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
65     : -0-1---1-------
65     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
68 (*) : --0-1--------1-
68     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
69     : -0---1-----1---
69     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
70     : --01--------1--
70     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
71     : 0----1--1------
71     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
72     : -0-1-----1-----
72     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
73     : 0---1--1-------
73     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE0,NODE1,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE1,NODE2) | allowed_in(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
74 (*) : -11----------1-
74     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
75     : -11--------1---
75     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
76     : 1-1---------1--
76     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
77     : 1-1-----1------
77     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
78     : 11-------1-----
78     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
79     : 11-----1-------
79     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
80 (*) : ----11-------1-
80     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
81     : ----11-----1---
81     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
82     : ---1-1------1--
82     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
83     : ---1-1--1------
83     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
84     : ---11----1-----
84     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
85     : ---11--1-------
85     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 14 =====================
size : 6
num_suborbits: 1
89 (*) : 1-1--------0---
89     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
90     : 11-----------0-
90     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
91     : -11-----0------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
92     : 11----------0--
92     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
93     : -11----0-------
93     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
94     : 1-1------0-----
94     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE1,NODE2. sent(NODE2,NODE1) | ~allowed_in(NODE0) | ~allowed_in(NODE1) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 9




=== Prime Orbit 15 =====================
size : 1
num_suborbits: 1
95 (*) : 111------------
95     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 01------1--1---
96     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 0-1----1-----1-
97     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : 10------1--1---
98     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
99     : -01------1--1--
99     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : 1-0----1-----1-
100     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
101     : -10------1--1--
101     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
120 (*) : 01------1----1-
120     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
121     : 0-1----1---1---
121     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
122     : 10---------11--
122     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
123     : -01-----11-----
123     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
124     : 1-0------1---1-
124     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
125     : -10----1----1--
125     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
156 (*) : -10----11------
156     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
157     : -01----11------
157     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
158     : 1-0------1-1---
158     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
159     : 0-1------1-1---
159     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
160     : 10----------11-
160     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
161     : 01----------11-
161     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
330 (*) : 10------1----1-
330     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
331     : 1-0----1---1---
331     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
332     : 01---------11--
332     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
333     : -10-----11-----
333     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
334     : 0-1------1---1-
334     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
335     : -01----1----1--
335     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | allowed_in(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4))
qcost : 34




=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : -1-1----1--1---
102     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
103     : --11---1-----1-
103     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
104     : 1---1---1--1---
104     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
105     : --1-1----1--1--
105     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
106     : 1----1-1-----1-
106     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
107     : -1---1---1--1--
107     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
114 (*) : -1-1----1----1-
114     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
115     : --11---1---1---
115     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
116     : 1---1------11--
116     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
117     : --1-1---11-----
117     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
118     : 1----1---1---1-
118     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
119     : -1---1-1----1--
119     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
162 (*) : -1---1-11------
162     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
163     : --1-1--11------
163     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
164     : 1----1---1-1---
164     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
165     : --11-----1-1---
165     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
166     : 1---1-------11-
166     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
167     : -1-1--------11-
167     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
342 (*) : 1---1---1----1-
342     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
343     : 1----1-1---1---
343     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
344     : -1-1-------11--
344     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
345     : -1---1--11-----
345     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
346     : --11-----1---1-
346     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
347     : --1-1--1----1--
347     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 18 =====================
size : 18
num_suborbits: 3
108 (*) : -1-1---01------
108     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
109     : --11---10------
109     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
110     : 1---1----0-1---
110     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
111     : --1-1----1-0---
111     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
112     : 1----1------01-
112     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
113     : -1---1------10-
113     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
138 (*) : -1---1--1----0-
138     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
139     : --1-1--1---0---
139     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
140     : 1----1-----10--
140     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
141     : --11----01-----
141     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
142     : 1---1----0---1-
142     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
143     : -1-1---0----1--
143     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
174 (*) : -1---1--1---0--
174     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
175     : --1-1--1-0-----
175     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
176     : 1----1-----1-0-
176     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
177     : --11---0-1-----
177     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
178     : 1---1------0-1-
178     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
179     : -1-1----0---1--
179     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE3,NODE0,NODE2,NODE4,NODE1. ~sent(NODE2,NODE3) | ~internal(NODE1) | ~allowed_in(NODE0) | sent(NODE1,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))
qcost : 24




=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
126 (*) : -1------1---01-
126     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
127     : --1----1-0-1---
127     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
128     : 1----------110-
128     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
129     : --1----011-----
129     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
130     : 1--------1-0-1-
130     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
131     : -1-----10---1--
131     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
180 (*) : -1------1--10--
180     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
181     : --1----1-0---1-
181     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
182     : 1-------1--1-0-
182     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
183     : --1----0-1--1--
183     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
184     : 1------1---0-1-
184     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
185     : -1------01--1--
185     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
186 (*) : -1------1--1-0-
186     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
187     : --1----1---0-1-
187     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
188     : 1-------1--10--
188     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
189     : --1-----01--1--
189     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
190     : 1------1-0---1-
190     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
191     : -1-----0-1--1--
191     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
318 (*) : 1-------1---01-
318     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
319     : 1------1-0-1---
319     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
320     : -1---------110-
320     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
321     : -1-----011-----
321     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
322     : --1------1-0-1-
322     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
323     : --1----10---1--
323     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE3) | sent(NODE3,NODE5) | ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE0 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4))
qcost : 34




=== Prime Orbit 20 =====================
size : 18
num_suborbits: 3
132 (*) : -10-----1----0-
132     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
133     : -01----1---0---
133     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
134     : 1-0--------10--
134     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
135     : 0-1-----01-----
135     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
136     : 10-------0---1-
136     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
137     : 01-----0----1--
137     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
144 (*) : 01-----01------
144     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
145     : 0-1----10------
145     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
146     : 10-------0-1---
146     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
147     : -01------1-0---
147     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
148     : 1-0---------01-
148     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
149     : -10---------10-
149     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
168 (*) : -10-----1---0--
168     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
169     : -01----1-0-----
169     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
170     : 1-0--------1-0-
170     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
171     : 0-1----0-1-----
171     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
172     : 10---------0-1-
172     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
173     : 01------0---1--
173     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE3,NODE0,NODE2,NODE4,NODE1. ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | allowed_in(NODE3) | sent(NODE3,NODE4) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))
qcost : 24




=== Prime Orbit 21 =====================
size : 6
num_suborbits: 1
150 (*) : -1-----01---0--
150     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
151     : --1----100-----
151     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
152     : 1--------0-1-0-
152     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
153     : --1----0-1-0---
153     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
154     : 1----------001-
154     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
155     : -1------0---10-
155     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE1) | ~sent(NODE1,NODE2) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
192 (*) : 0---0---1--1---
192     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
193     : 0----0-1-----1-
193     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
194     : -0-0----1--1---
194     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
195     : -0---0---1--1--
195     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
196     : --00---1-----1-
196     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
197     : --0-0----1--1--
197     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
228 (*) : --0-0--11------
228     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
229     : -0---0-11------
229     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
230     : --00-----1-1---
230     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
231     : 0----0---1-1---
231     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
232     : -0-0--------11-
232     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
233     : 0---0-------11-
233     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : 0---0---1----1-
270     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
271     : 0----0-1---1---
271     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
272     : -0-0-------11--
272     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
273     : -0---0--11-----
273     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
274     : --00-----1---1-
274     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
275     : --0-0--1----1--
275     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
324 (*) : -0-0----1----1-
324     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
325     : --00---1---1---
325     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
326     : 0---0------11--
326     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
327     : --0-0---11-----
327     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
328     : 0----0---1---1-
328     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
329     : -0---0-1----1--
329     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. internal(NODE5) | ~sent(NODE0,NODE2) | allowed_in(NODE4) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
198 (*) : ----0---1--10--
198     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
199     : -----0-1-0---1-
199     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
200     : ---0----1--1-0-
200     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
201     : -----0-0-1--1--
201     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
202     : ---0---1---0-1-
202     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
203     : ----0---01--1--
203     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
222 (*) : ----0---1--1-0-
222     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
223     : -----0-1---0-1-
223     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
224     : ---0----1--10--
224     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
225     : -----0--01--1--
225     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
226     : ---0---1-0---1-
226     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
227     : ----0--0-1--1--
227     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
264 (*) : ----0---1---01-
264     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
265     : -----0-1-0-1---
265     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
266     : ---0-------110-
266     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
267     : -----0-011-----
267     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
268     : ---0-----1-0-1-
268     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
269     : ----0--10---1--
269     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
312 (*) : ---0----1---01-
312     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
313     : ---0---1-0-1---
313     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
314     : ----0------110-
314     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
315     : ----0--011-----
315     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
316     : -----0---1-0-1-
316     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
317     : -----0-10---1--
317     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | internal(NODE4) | sent(NODE2,NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 24 =====================
size : 12
num_suborbits: 2
204 (*) : --0-----1--10--
204     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
205     : -0-----1-0---1-
205     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
206     : --0-----1--1-0-
206     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
207     : 0------0-1--1--
207     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
208     : -0-----1---0-1-
208     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
209     : 0-------01--1--
209     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
252 (*) : --0-----1---01-
252     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
253     : -0-----1-0-1---
253     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
254     : --0--------110-
254     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
255     : 0------011-----
255     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
256     : -0-------1-0-1-
256     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
257     : 0------10---1--
257     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE0,NODE2) | allowed_in(NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | ((NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 16




=== Prime Orbit 25 =====================
size : 12
num_suborbits: 2
210 (*) : -----1--1--10--
210     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
211     : ----1--1-0---1-
211     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
212     : -----1--1--1-0-
212     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
213     : ---1---0-1--1--
213     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
214     : ----1--1---0-1-
214     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
215     : ---1----01--1--
215     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
258 (*) : -----1--1---01-
258     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
259     : ----1--1-0-1---
259     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
260     : -----1-----110-
260     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
261     : ---1---011-----
261     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
262     : ----1----1-0-1-
262     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
263     : ---1---10---1--
263     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE0,NODE1,NODE2,NODE3. ~sent(NODE2,NODE3) | ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | ((NODE0 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3))
qcost : 16




=== Prime Orbit 26 =====================
size : 24
num_suborbits: 4
216 (*) : ---10---1--1---
216     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
217     : ---1-0-1-----1-
217     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
218     : ---01---1--1---
218     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
219     : ----10---1--1--
219     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
220     : ---0-1-1-----1-
220     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
221     : ----01---1--1--
221     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
234 (*) : ----01-11------
234     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
235     : ----10-11------
235     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
236     : ---0-1---1-1---
236     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
237     : ---1-0---1-1---
237     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
238     : ---01-------11-
238     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
239     : ---10-------11-
239     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
276 (*) : ---10---1----1-
276     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
277     : ---1-0-1---1---
277     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
278     : ---01------11--
278     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
279     : ----10--11-----
279     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
280     : ---0-1---1---1-
280     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
281     : ----01-1----1--
281     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
336 (*) : ---01---1----1-
336     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
337     : ---0-1-1---1---
337     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
338     : ---10------11--
338     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
339     : ----01--11-----
339     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
340     : ---1-0---1---1-
340     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
341     : ----10-1----1--
341     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE3,NODE5,NODE0,NODE2,NODE4,NODE1. internal(NODE5) | ~internal(NODE0) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE1 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1))
qcost : 34




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
240 (*) : --0-----10--0--
240     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
241     : -0-----1-0--0--
241     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
242     : --0----0---1-0-
242     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
243     : 0------0-1---0-
243     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
244     : -0------0--0-1-
244     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
245     : 0-------0--01--
245     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | allowed_in(NODE1) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
246 (*) : -----1--10--0--
246     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
247     : ----1--1-0--0--
247     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
248     : -----1-0---1-0-
248     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
249     : ---1---0-1---0-
249     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
250     : ----1---0--0-1-
250     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
251     : ---1----0--01--
251     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
282 (*) : ----01--1---0--
282     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
283     : ----10-1-0-----
283     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
284     : ---0-1-----1-0-
284     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
285     : ---1-0-0-1-----
285     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
286     : ---01------0-1-
286     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
287     : ---10---0---1--
287     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
288 (*) : --0-0---1---0--
288     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
289     : -0---0-1-0-----
289     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
290     : --00-------1-0-
290     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
291     : 0----0-0-1-----
291     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
292     : -0-0-------0-1-
292     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
293     : 0---0---0---1--
293     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
294 (*) : ---00---1---0--
294     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
295     : ---0-0-1-0-----
295     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
296     : ---00------1-0-
296     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
297     : ----00-0-1-----
297     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
298     : ---0-0-----0-1-
298     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
299     : ----00--0---1--
299     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
300 (*) : ---0----10--0--
300     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
301     : ---0---1-0--0--
301     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
302     : ----0--0---1-0-
302     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
303     : ----0--0-1---0-
303     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
304     : -----0--0--0-1-
304     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
305     : -----0--0--01--
305     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
306 (*) : -1-0----1---0--
306     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
307     : --10---1-0-----
307     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
308     : 1---0------1-0-
308     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
309     : --1-0--0-1-----
309     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
310     : 1----0-----0-1-
310     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
311     : -1---0--0---1--
311     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE1,NODE2. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE2 | NODE0 = NODE1)
qcost : 10



[QRM NOTE]: Time elapsed since start: 10.454 seconds

[QRM NOTE]: Time elapsed since last: 1.785 seconds

[QRM NOTE]: Peak memory: 2419194 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 608), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 608), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13]


Solution : [0, 13] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 608), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1]


New level: 2
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 608), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 608), (23, 420), (24, 384), (25, 192), (26, 304), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1]


Solution : [0, 13, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 640), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 608), (23, 420), (24, 384), (25, 192), (26, 304), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1, 2]


New level: 3
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 13, 1, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 608), (23, 420), (24, 384), (25, 192), (26, 304), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, 576), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, 0), (33, 32)]

Covered at level 3 : {32}

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, 576), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, 0), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, 576), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 3 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, 576), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8]


New level: 4
 pending : [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, 576), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 4 among pending : [3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Decide 5 with phase True at level 4

After decision at level 4
 pending : [3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]


New level: 5
 pending : [3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]


Before reduction : 
 pending  : [3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, 0), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 5 : {15, 7}

After reduction : 
 pending  : [3, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]


Before reduction : 
 pending  : [3, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, 0), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5]


Solution : [0, 13, 1, 2, 8, 5] has cost 46.


Decide in level 5 among pending : [3, 4, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [3, 4, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


New level: 6
 pending : [3, 4, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [3, 4, 6, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {10, 12, 24, 25, 27, 28}

After reduction : 
 pending  : [3, 4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [3, 4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Solution : [0, 13, 1, 2, 8, 5, 9] has cost 52.


Decide in level 6 among pending : [3, 4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 3]


New level: 7
 pending : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 3]


Before reduction : 
 pending  : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 3]


Solution : [0, 13, 1, 2, 8, 5, 9, 3] has cost 65.


Before backtrack at level 7
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 9, 3]

After backtrack at level 7
 pending : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Solution : [0, 13, 1, 2, 8, 5, 9] has cost 52.


Decide in level 7 among pending : [4, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 4]


New level: 8
 pending : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 4]


Before reduction : 
 pending  : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 8 : {33, 6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 4]


Solution : [0, 13, 1, 2, 8, 5, 9, 4] has cost 58.


Before backtrack at level 8
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 9, 4]

After backtrack at level 8
 pending : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Solution : [0, 13, 1, 2, 8, 5, 9] has cost 52.


Decide in level 8 among pending : [6, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 11]


New level: 9
 pending : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 11]


Before reduction : 
 pending  : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 11]


Solution : [0, 13, 1, 2, 8, 5, 9, 11] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 9, 11]

After backtrack at level 9
 pending : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Solution : [0, 13, 1, 2, 8, 5, 9] has cost 52.


Decide in level 9 among pending : [6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 6]


New level: 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 6]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 6]


Solution : [0, 13, 1, 2, 8, 5, 9, 6] has cost 61.


Before backtrack at level 10
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 9, 6]

After backtrack at level 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

Essensial at level 10 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 9, 14]


Solution : [0, 13, 1, 2, 8, 5, 9, 14] has cost 61.


Before backtrack at level 10
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 9, 14]

After backtrack at level 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before backtrack at level 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 9]

After backtrack at level 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6]
 solution : [0, 13, 1, 2, 8, 5, 9]

After backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before backtrack at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11]
 solution : [0, 13, 1, 2, 8, 5, 9]

After backtrack at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4]
 solution : [0, 13, 1, 2, 8, 5, 9]


Before backtrack at level 6
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4]
 solution : [0, 13, 1, 2, 8, 5, 9]

After backtrack at level 6
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5]


Solution : [0, 13, 1, 2, 8, 5] has cost 46.


Decide in level 6 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Decide 29 with phase True at level 6

After decision at level 6
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]


New level: 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 30, 31}

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29]


Solution : [0, 13, 1, 2, 8, 5, 29] has cost 56.


Decide in level 7 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 10, 12, 24, 25, 27, 28, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]


New level: 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 12, 24, 25, 27, 28, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 0), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {12, 24, 25, 27, 28}

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 0), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]


Solution : [0, 13, 1, 2, 8, 5, 29, 10] has cost 69.


Before backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]

After backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5, 29, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5, 29]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5, 29]

Essensial at level 8 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {24, 25, 27, 28}

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 12]


Solution : [0, 13, 1, 2, 8, 5, 29, 12] has cost 62.


Before backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3]
 solution : [0, 13, 1, 2, 8, 5, 29, 12]

After backtrack at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5, 29]


Before backtrack at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5, 29]

After backtrack at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5, 29]


Invert decision for 29 at level 6


New level: 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5]


Solution : [0, 13, 1, 2, 8, 5] has cost 46.


Decide in level 7 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 12, 24, 25, 27, 28, 30, 31, 33, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, 128), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5, 12]


New level: 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 24, 25, 27, 28, 30, 31, 33, 10]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {10, 24, 25, 27, 28}

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Solution : [0, 13, 1, 2, 8, 5, 12] has cost 52.


Decide in level 8 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 11, 4, 3, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 11]


New level: 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 11]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 3, 4, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 11]


Solution : [0, 13, 1, 2, 8, 5, 12, 11] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 12, 11]

After backtrack at level 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Solution : [0, 13, 1, 2, 8, 5, 12] has cost 52.


Decide in level 9 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 4, 3, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 4]


New level: 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 4]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 3, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 4]


Solution : [0, 13, 1, 2, 8, 5, 12, 4] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 12, 4]

After backtrack at level 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Solution : [0, 13, 1, 2, 8, 5, 12] has cost 52.


Decide in level 10 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 3, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 3]


New level: 11
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 3]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 3]


Solution : [0, 13, 1, 2, 8, 5, 12, 3] has cost 65.


Before backtrack at level 11
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 12, 3]

After backtrack at level 11
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Solution : [0, 13, 1, 2, 8, 5, 12] has cost 52.


Decide in level 11 among pending : [14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 14 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 14]


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 14]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 14]


Solution : [0, 13, 1, 2, 8, 5, 12, 14] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 12, 14]

After backtrack at level 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12, 14]


Invert decision for 14 at level 11


New level: 12
 pending : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 20, 21, 22, 23, 26, 6, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

Essensial at level 12 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 5, 12, 6]


Solution : [0, 13, 1, 2, 8, 5, 12, 6] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 8, 5, 12, 6]

After backtrack at level 12
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before backtrack at level 11
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33]
 solution : [0, 13, 1, 2, 8, 5, 12]

After backtrack at level 11
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before backtrack at level 10
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 5, 12]

After backtrack at level 10
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before backtrack at level 9
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3]
 solution : [0, 13, 1, 2, 8, 5, 12]

After backtrack at level 9
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4]
 solution : [0, 13, 1, 2, 8, 5, 12]


Before backtrack at level 8
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4]
 solution : [0, 13, 1, 2, 8, 5, 12]

After backtrack at level 8
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 24, 25, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 8, 5, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 24, 25, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 8, 5]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 24, 25, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 8, 5]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {24, 25, 27, 28}

After reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11]
 solution : [0, 13, 1, 2, 8, 5, 10]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11]
 solution : [0, 13, 1, 2, 8, 5, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11]
 solution : [0, 13, 1, 2, 8, 5, 10]


Solution : [0, 13, 1, 2, 8, 5, 10] has cost 59.


Before backtrack at level 8
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11]
 solution : [0, 13, 1, 2, 8, 5, 10]

After backtrack at level 8
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5]


Before backtrack at level 7
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 5]

After backtrack at level 7
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12]
 solution : [0, 13, 1, 2, 8, 5]


Before backtrack at level 6
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12]
 solution : [0, 13, 1, 2, 8, 5]

After backtrack at level 6
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29]
 solution : [0, 13, 1, 2, 8, 5]


Before backtrack at level 5
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29]
 solution : [0, 13, 1, 2, 8, 5]

After backtrack at level 5
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 5]


Invert decision for 5 at level 4


New level: 5
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 5 among pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 30, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Decide 30 with phase True at level 5

After decision at level 5
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]


New level: 6
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 29, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, 0), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {29}

After reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, 0), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30]


Solution : [0, 13, 1, 2, 8, 30] has cost 51.


Decide in level 6 among pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 3, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 6

After decision at level 6
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]


New level: 7
 pending : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]


Before reduction : 
 pending  : [6, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 33, 14, 4, 11, 10, 24, 25, 27, 28, 12, 7, 15, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 4, 6, 7, 11, 14, 15, 19, 21, 23, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]


Solution : [0, 13, 1, 2, 8, 30, 3] has cost 64.


Before backtrack at level 7
 pending : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 3]

After backtrack at level 7
 pending : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 3]


Invert decision for 3 at level 6


New level: 7
 pending : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30]


Solution : [0, 13, 1, 2, 8, 30] has cost 51.


Decide in level 7 among pending : [16, 17, 18, 20, 22, 26, 10, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {9, 12, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]


Solution : [0, 13, 1, 2, 8, 30, 10] has cost 64.


Before backtrack at level 8
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 10]

After backtrack at level 8
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30]


Solution : [0, 13, 1, 2, 8, 30] has cost 51.


Decide in level 8 among pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 4, 11, 7, 15, 24, 25, 27, 28, 12, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]


New level: 9
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 6, 7, 11, 14, 15, 19, 21, 23, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]


Solution : [0, 13, 1, 2, 8, 30, 4] has cost 57.


Decide in level 9 among pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4, 12]


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {9, 16, 17, 18, 20, 22, 24, 25, 26, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 12]


Solution : [0, 13, 1, 2, 8, 30, 4, 12] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 4, 12]

After backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 30, 4]

Essensial at level 10 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {16, 17, 18, 20, 22, 24, 25, 26, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 4, 9]


Solution : [0, 13, 1, 2, 8, 30, 4, 9] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 4, 9]

After backtrack at level 10
 pending : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 30, 4]


Before backtrack at level 9
 pending : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 30, 4]

After backtrack at level 9
 pending : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30]


Solution : [0, 13, 1, 2, 8, 30] has cost 51.


Decide in level 9 among pending : [9, 16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30, 9]


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15, 12]
 solution : [0, 13, 1, 2, 8, 30, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : {12, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Solution : [0, 13, 1, 2, 8, 30, 9] has cost 57.


Decide in level 10 among pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 11, 7, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 11]


New level: 11
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 11]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 11]


Solution : [0, 13, 1, 2, 8, 30, 9, 11] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 9, 11]

After backtrack at level 11
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Solution : [0, 13, 1, 2, 8, 30, 9] has cost 57.


Decide in level 11 among pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 7, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 31, 33, 14, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, 0), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 15, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, 0), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]


Solution : [0, 13, 1, 2, 8, 30, 9, 7] has cost 62.


Before backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]

After backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Solution : [0, 13, 1, 2, 8, 30, 9] has cost 57.


Decide in level 12 among pending : [16, 17, 18, 20, 22, 26, 6, 19, 21, 23, 14, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 6]


New level: 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 6]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 6]


Solution : [0, 13, 1, 2, 8, 30, 9, 6] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 9, 6]

After backtrack at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]

Essensial at level 13 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 9, 14]


Solution : [0, 13, 1, 2, 8, 30, 9, 14] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 9, 14]

After backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before backtrack at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 9]

After backtrack at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before backtrack at level 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 30, 9]

After backtrack at level 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7]
 solution : [0, 13, 1, 2, 8, 30, 9]


Before backtrack at level 10
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7]
 solution : [0, 13, 1, 2, 8, 30, 9]

After backtrack at level 10
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 24, 25, 27, 28, 12, 11]
 solution : [0, 13, 1, 2, 8, 30, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 24, 25, 27, 28, 12, 11]
 solution : [0, 13, 1, 2, 8, 30]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 24, 25, 27, 28, 12, 11]
 solution : [0, 13, 1, 2, 8, 30]

Essensial at level 10 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : {24, 25, 27, 28}

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 11]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 11]
 solution : [0, 13, 1, 2, 8, 30, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 11]
 solution : [0, 13, 1, 2, 8, 30, 12]


Solution : [0, 13, 1, 2, 8, 30, 12] has cost 57.


Decide in level 10 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 7, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]


New level: 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, 0), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 15, 31}

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, 0), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]


Solution : [0, 13, 1, 2, 8, 30, 12, 7] has cost 62.


Before backtrack at level 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]

After backtrack at level 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Solution : [0, 13, 1, 2, 8, 30, 12] has cost 57.


Decide in level 11 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 11, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 11]


New level: 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 11]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 11]


Solution : [0, 13, 1, 2, 8, 30, 12, 11] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 12, 11]

After backtrack at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Solution : [0, 13, 1, 2, 8, 30, 12] has cost 57.


Decide in level 12 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 14 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 14]


New level: 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 14]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 14]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 14]


Solution : [0, 13, 1, 2, 8, 30, 12, 14] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 12, 14]

After backtrack at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12, 14]


Invert decision for 14 at level 12


New level: 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]

Essensial at level 13 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 30, 12, 6]


Solution : [0, 13, 1, 2, 8, 30, 12, 6] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 30, 12, 6]

After backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 30, 12]

After backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 30, 12]

After backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11]
 solution : [0, 13, 1, 2, 8, 30, 12]


Before backtrack at level 10
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11]
 solution : [0, 13, 1, 2, 8, 30, 12]

After backtrack at level 10
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7]
 solution : [0, 13, 1, 2, 8, 30]


Before backtrack at level 9
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7]
 solution : [0, 13, 1, 2, 8, 30]

After backtrack at level 9
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9]
 solution : [0, 13, 1, 2, 8, 30]


Before backtrack at level 8
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9]
 solution : [0, 13, 1, 2, 8, 30]

After backtrack at level 8
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4]
 solution : [0, 13, 1, 2, 8, 30]


Before backtrack at level 7
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4]
 solution : [0, 13, 1, 2, 8, 30]

After backtrack at level 7
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10]
 solution : [0, 13, 1, 2, 8, 30]


Before backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10]
 solution : [0, 13, 1, 2, 8, 30]

After backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8, 30]


Invert decision for 30 at level 5


New level: 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 6 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 11, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8, 11]


New level: 7
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8, 11]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 12, 24, 25, 27, 28, 7, 9, 4, 10, 29, 3]
 solution : [0, 13, 1, 2, 8, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 3, 4, 6, 7, 14, 15, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]


Solution : [0, 13, 1, 2, 8, 11] has cost 47.


Decide in level 7 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 10, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 12]


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {9, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 12]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 12]


Solution : [0, 13, 1, 2, 8, 11, 12] has cost 53.


Before backtrack at level 8
 pending : []
 solution : [0, 13, 1, 2, 8, 11, 12]

After backtrack at level 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]


Solution : [0, 13, 1, 2, 8, 11] has cost 47.


Decide in level 8 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 10, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 9]


New level: 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 9]


Solution : [0, 13, 1, 2, 8, 11, 9] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 2, 8, 11, 9]

After backtrack at level 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 10, 29]
 solution : [0, 13, 1, 2, 8, 11]

Essensial at level 9 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 10]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 11, 10]


Solution : [0, 13, 1, 2, 8, 11, 10] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 2, 8, 11, 10]

After backtrack at level 9
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29]
 solution : [0, 13, 1, 2, 8, 11]


Before backtrack at level 8
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29]
 solution : [0, 13, 1, 2, 8, 11]

After backtrack at level 8
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9]
 solution : [0, 13, 1, 2, 8, 11]


Before backtrack at level 7
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9]
 solution : [0, 13, 1, 2, 8, 11]

After backtrack at level 7
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 7 among pending : [10, 16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8, 10]


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 29, 9, 6, 31, 33, 15, 14, 7, 4, 3, 12]
 solution : [0, 13, 1, 2, 8, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, 1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : {9, 12, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3]
 solution : [0, 13, 1, 2, 8, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3]
 solution : [0, 13, 1, 2, 8, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, 1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3]
 solution : [0, 13, 1, 2, 8, 10]


Solution : [0, 13, 1, 2, 8, 10] has cost 54.


Before backtrack at level 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3]
 solution : [0, 13, 1, 2, 8, 10]

After backtrack at level 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, 1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 8 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 29, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 29 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29]


New level: 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, 128), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29]


Solution : [0, 13, 1, 2, 8, 29] has cost 51.


Decide in level 9 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 7, 4, 3, 24, 25, 27, 28, 9, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 31, 33, 15, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 8), (15, 0), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 15, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 8), (15, 0), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]


Solution : [0, 13, 1, 2, 8, 29, 7] has cost 56.


Before backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 7]

After backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 8), (15, -1), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]


Solution : [0, 13, 1, 2, 8, 29] has cost 51.


Decide in level 10 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 4, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 4]


New level: 11
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 24, 25, 27, 28, 9, 12, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 3, 6, 14, 15, 19, 21, 23, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 2), (17, 2), (18, 2), (19, 0), (20, 2), (21, 0), (22, 2), (23, 0), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 4]


Solution : [0, 13, 1, 2, 8, 29, 4] has cost 57.


Before backtrack at level 11
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 8, 29, 4]

After backtrack at level 11
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, -1), (20, 2), (21, -1), (22, 2), (23, -1), (24, 3), (25, 3), (26, 2), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29]


Solution : [0, 13, 1, 2, 8, 29] has cost 51.


Decide in level 11 among pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 9, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 24, 25, 27, 28, 12, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 16), (17, 16), (18, 16), (19, 2), (20, 10), (21, 2), (22, 13), (23, 2), (24, 3), (25, 3), (26, 13), (27, 8), (28, 8), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {12, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]


Solution : [0, 13, 1, 2, 8, 29, 9] has cost 57.


Before backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 9]

After backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 24, 25, 27, 28, 12]
 solution : [0, 13, 1, 2, 8, 29, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 24, 25, 27, 28, 12]
 solution : [0, 13, 1, 2, 8, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 24, 25, 27, 28, 12]
 solution : [0, 13, 1, 2, 8, 29]

Essensial at level 12 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, 0), (25, 0), (26, 4), (27, 0), (28, 0), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 12]


Solution : [0, 13, 1, 2, 8, 29, 12] has cost 57.


Before backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 29, 12]

After backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 29]


Before backtrack at level 11
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28]
 solution : [0, 13, 1, 2, 8, 29]

After backtrack at level 11
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 29]


Before backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 29]

After backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 8, 29]


Before backtrack at level 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 8, 29]

After backtrack at level 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8, 29]


Invert decision for 29 at level 8


New level: 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 4), (17, 4), (18, 4), (19, 2), (20, 4), (21, 2), (22, 4), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 9 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 3, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8, 3]


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8, 3]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 12, 24, 25, 27, 28, 9, 4, 7]
 solution : [0, 13, 1, 2, 8, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 4, 6, 7, 14, 15, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 3]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 3]


Solution : [0, 13, 1, 2, 8, 3] has cost 54.


Before backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9]
 solution : [0, 13, 1, 2, 8, 3]

After backtrack at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 12), (25, 12), (26, 7), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8]


Solution : [0, 13, 1, 2, 8] has cost 41.


Decide in level 10 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 12, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]


New level: 11
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 24, 25, 27, 28, 9, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 24), (17, 24), (18, 24), (19, 8), (20, 24), (21, 8), (22, 28), (23, 8), (24, 12), (25, 12), (26, 28), (27, 32), (28, 32), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : {9, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 4, 7]
 solution : [0, 13, 1, 2, 8, 12]


Solution : [0, 13, 1, 2, 8, 12] has cost 47.


Decide in level 11 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12, 4]


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 6, 7, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 4]


Solution : [0, 13, 1, 2, 8, 12, 4] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 8, 12, 4]

After backtrack at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]
 solution : [0, 13, 1, 2, 8, 12]


Solution : [0, 13, 1, 2, 8, 12] has cost 47.


Decide in level 12 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 12, 7]


New level: 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 12, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 12, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 0), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 0), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]


Solution : [0, 13, 1, 2, 8, 12, 7] has cost 52.


Decide in level 13 among pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 6, 14, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7, 6]


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7, 6]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 6]


Solution : [0, 13, 1, 2, 8, 12, 7, 6] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 12, 7, 6]

After backtrack at level 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 14, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 7, 14]


Solution : [0, 13, 1, 2, 8, 12, 7, 14] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 12, 7, 14]

After backtrack at level 14
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]


Before backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33]
 solution : [0, 13, 1, 2, 8, 12, 7]

After backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12]


Solution : [0, 13, 1, 2, 8, 12] has cost 47.


Decide in level 13 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12, 14]


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12, 14]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 14]


Solution : [0, 13, 1, 2, 8, 12, 14] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 12, 14]

After backtrack at level 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 6]
 solution : [0, 13, 1, 2, 8, 12]

Essensial at level 14 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 12, 6]


Solution : [0, 13, 1, 2, 8, 12, 6] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 12, 6]

After backtrack at level 14
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 12]


Before backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 12]

After backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 12]


Before backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 12]

After backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7]
 solution : [0, 13, 1, 2, 8, 12]


Before backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7]
 solution : [0, 13, 1, 2, 8, 12]

After backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 24, 25, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 8, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 24, 25, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 8]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 24, 25, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 8]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : {24, 25, 27, 28}

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 4]
 solution : [0, 13, 1, 2, 8, 9]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 4]
 solution : [0, 13, 1, 2, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, 0), (25, 0), (26, 7), (27, 0), (28, 0), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 4]
 solution : [0, 13, 1, 2, 8, 9]


Solution : [0, 13, 1, 2, 8, 9] has cost 47.


Decide in level 11 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 7, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]


New level: 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 0), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {15}

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, 0), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]


Solution : [0, 13, 1, 2, 8, 9, 7] has cost 52.


Decide in level 12 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 4]


New level: 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 4]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 4]


Solution : [0, 13, 1, 2, 8, 9, 7, 4] has cost 58.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 7, 4]

After backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7]


Solution : [0, 13, 1, 2, 8, 9, 7] has cost 52.


Decide in level 13 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 6]


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 6]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 14, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 6]


Solution : [0, 13, 1, 2, 8, 9, 7, 6] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 7, 6]

After backtrack at level 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14]
 solution : [0, 13, 1, 2, 8, 9, 7]

Essensial at level 14 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 7, 14]


Solution : [0, 13, 1, 2, 8, 9, 7, 14] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 7, 14]

After backtrack at level 14
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33]
 solution : [0, 13, 1, 2, 8, 9, 7]

After backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6]
 solution : [0, 13, 1, 2, 8, 9, 7]


Before backtrack at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6]
 solution : [0, 13, 1, 2, 8, 9, 7]

After backtrack at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 8, 9, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 8, 9]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 8, 9]


Solution : [0, 13, 1, 2, 8, 9] has cost 47.


Decide in level 12 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 4]


New level: 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 4]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 6, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 4]


Solution : [0, 13, 1, 2, 8, 9, 4] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 4]

After backtrack at level 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9]


Before reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9]


Solution : [0, 13, 1, 2, 8, 9] has cost 47.


Decide in level 13 among pending : [14, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 14 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 14]


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 14]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 5), (17, 5), (18, 5), (19, 2), (20, 6), (21, 2), (22, 7), (23, 2), (24, -1), (25, -1), (26, 7), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 14]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 14]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 14]


Solution : [0, 13, 1, 2, 8, 9, 14] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 14]

After backtrack at level 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9, 14]


Invert decision for 14 at level 13


New level: 14
 pending : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 8, 9]

Essensial at level 14 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 8, 9, 6]


Solution : [0, 13, 1, 2, 8, 9, 6] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 8, 9, 6]

After backtrack at level 14
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 9]


Before backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15]
 solution : [0, 13, 1, 2, 8, 9]

After backtrack at level 13
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 9]


Before backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14]
 solution : [0, 13, 1, 2, 8, 9]

After backtrack at level 12
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4]
 solution : [0, 13, 1, 2, 8, 9]


Before backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4]
 solution : [0, 13, 1, 2, 8, 9]

After backtrack at level 11
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 10
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 10
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 9
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 9
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 8
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 8
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 7
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 7
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 5
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 5
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 8]


Before backtrack at level 4
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 8]

After backtrack at level 4
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30, 5]
 solution : [0, 13, 1, 2, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30, 5]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30, 5]
 solution : [0, 13, 1, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 4 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30, 5]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 4 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 5 with phase True at level 4

After decision at level 4
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]


New level: 5
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 15, 14, 4, 9, 24, 25, 27, 28, 7, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 256), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, 0), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 5 : {7, 15}

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, 0), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 5 among pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 23, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 23 with phase True at level 5

After decision at level 5
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]


New level: 6
 pending : [6, 16, 17, 18, 20, 22, 26, 19, 21, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 19, 21, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 40), (17, 40), (18, 16), (19, 0), (20, 16), (21, 0), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {19, 21}

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 40), (17, 40), (18, 16), (19, 0), (20, 16), (21, 0), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 40), (17, 40), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]


Solution : [0, 13, 1, 2, 5, 23] has cost 59.


Before backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 23]

After backtrack at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 23]


Invert decision for 23 at level 5


New level: 6
 pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 40), (17, 40), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 6 among pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 24, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


New level: 7
 pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 25, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, 0), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : {25}

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, 0), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Solution : [0, 13, 1, 2, 5, 24] has cost 41.


Decide in level 7 among pending : [6, 16, 17, 18, 20, 22, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 7

After decision at level 7
 pending : [6, 16, 17, 18, 20, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 22]


New level: 8
 pending : [6, 16, 17, 18, 20, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 22]


Before reduction : 
 pending  : [6, 16, 17, 18, 20, 26, 31, 33, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 8 : {33, 16, 17, 18, 19, 20, 21, 26, 31}

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 22]


Before reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 22]


Solution : [0, 13, 1, 2, 5, 24, 22] has cost 75.


Before backtrack at level 8
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 22]

After backtrack at level 8
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 26, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 22]


Invert decision for 22 at level 7


New level: 8
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 26, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 26, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 26, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Solution : [0, 13, 1, 2, 5, 24] has cost 41.


Decide in level 8 among pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 26, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 26]


New level: 9
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 26]


Before reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 16, 17, 18, 19, 20, 21, 31}

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 26]


Before reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 26]


Solution : [0, 13, 1, 2, 5, 24, 26] has cost 75.


Before backtrack at level 9
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30]
 solution : [0, 13, 1, 2, 5, 24, 26]

After backtrack at level 9
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24]


Solution : [0, 13, 1, 2, 5, 24] has cost 41.


Decide in level 9 among pending : [6, 14, 4, 9, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [6, 14, 4, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


New level: 10
 pending : [6, 14, 4, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 4, 27, 28, 12, 3, 29, 10, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : {10, 27, 28, 12}

After reduction : 
 pending  : [6, 14, 4, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 4, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 4, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Solution : [0, 13, 1, 2, 5, 24, 9] has cost 47.


Decide in level 10 among pending : [6, 14, 4, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 4]


New level: 11
 pending : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 4]


Before reduction : 
 pending  : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 3, 6, 11, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 4]


Solution : [0, 13, 1, 2, 5, 24, 9, 4] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 9, 4]

After backtrack at level 11
 pending : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Solution : [0, 13, 1, 2, 5, 24, 9] has cost 47.


Decide in level 11 among pending : [6, 14, 3, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 3]


New level: 12
 pending : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 3]


Before reduction : 
 pending  : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 6, 11, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 3]


Solution : [0, 13, 1, 2, 5, 24, 9, 3] has cost 60.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 9, 3]

After backtrack at level 12
 pending : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Solution : [0, 13, 1, 2, 5, 24, 9] has cost 47.


Decide in level 12 among pending : [6, 14, 29, 11, 30, 16, 17, 18, 20, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 11]


New level: 13
 pending : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 11]


Before reduction : 
 pending  : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 9, 11]


Solution : [0, 13, 1, 2, 5, 24, 9, 11] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 9, 11]

After backtrack at level 13
 pending : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Solution : [0, 13, 1, 2, 5, 24, 9] has cost 47.


Decide in level 13 among pending : [6, 14, 29, 30, 16, 17, 18, 20, 31, 33, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]


New level: 14
 pending : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]


Before reduction : 
 pending  : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]


Solution : [0, 13, 1, 2, 5, 24, 9, 16] has cost 81.


Before backtrack at level 14
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]

After backtrack at level 14
 pending : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before reduction : 
 pending  : [6, 14, 29, 30, 17, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

Essensial at level 14 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 17]


Solution : [0, 13, 1, 2, 5, 24, 9, 17] has cost 81.


Before backtrack at level 14
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 9, 17]

After backtrack at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 9]

After backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before backtrack at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 9]

After backtrack at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before backtrack at level 11
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 24, 9]

After backtrack at level 11
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 24, 9]


Before backtrack at level 10
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 24, 9]

After backtrack at level 10
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 24, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 24]


Solution : [0, 13, 1, 2, 5, 24] has cost 41.


Decide in level 10 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 12, 10, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


New level: 11
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : {10, 27, 28}

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Solution : [0, 13, 1, 2, 5, 24, 12] has cost 47.


Decide in level 11 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 11

After decision at level 11
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 11]


New level: 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 11]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 3, 4, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 11]


Solution : [0, 13, 1, 2, 5, 24, 12, 11] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 12, 11]

After backtrack at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 11]


Invert decision for 11 at level 11


New level: 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Solution : [0, 13, 1, 2, 5, 24, 12] has cost 47.


Decide in level 12 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 12

After decision at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 3]


New level: 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 3]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 4, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 3]


Solution : [0, 13, 1, 2, 5, 24, 12, 3] has cost 60.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 12, 3]

After backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12, 3]


Invert decision for 3 at level 12


New level: 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Solution : [0, 13, 1, 2, 5, 24, 12] has cost 47.


Decide in level 13 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 13

After decision at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 4]


New level: 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 4]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 24, 12, 4]


Solution : [0, 13, 1, 2, 5, 24, 12, 4] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 5, 24, 12, 4]

After backtrack at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 4]


Invert decision for 4 at level 13


New level: 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12]


Solution : [0, 13, 1, 2, 5, 24, 12] has cost 47.


Decide in level 14 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]


New level: 15
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 16, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]


Solution : [0, 13, 1, 2, 5, 24, 12, 17] has cost 81.


Before backtrack at level 15
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]

After backtrack at level 15
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 24, 12]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 16]


Solution : [0, 13, 1, 2, 5, 24, 12, 16] has cost 81.


Before backtrack at level 15
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 24, 12, 16]

After backtrack at level 15
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before backtrack at level 14
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 24, 12]

After backtrack at level 14
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before backtrack at level 13
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 24, 12]

After backtrack at level 13
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before backtrack at level 12
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 24, 12]

After backtrack at level 12
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 24, 12]


Before backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 24, 12]

After backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 24, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 24]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 24]

Essensial at level 11 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : {27, 28}

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 24, 10]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 24, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 24, 10]


Solution : [0, 13, 1, 2, 5, 24, 10] has cost 54.


Before backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 24, 10]

After backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28]
 solution : [0, 13, 1, 2, 5, 24]


Before backtrack at level 10
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28]
 solution : [0, 13, 1, 2, 5, 24]

After backtrack at level 10
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12]
 solution : [0, 13, 1, 2, 5, 24]


Before backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12]
 solution : [0, 13, 1, 2, 5, 24]

After backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 24]


Before backtrack at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 24]

After backtrack at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26]
 solution : [0, 13, 1, 2, 5, 24]


Before backtrack at level 7
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26]
 solution : [0, 13, 1, 2, 5, 24]

After backtrack at level 7
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 25, 22]
 solution : [0, 13, 1, 2, 5, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 25, 22]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 25, 22]
 solution : [0, 13, 1, 2, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 25, 22]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 7 among pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 25, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 25 with phase True at level 7

After decision at level 7
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 22]
 solution : [0, 13, 1, 2, 5, 25]


New level: 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 22]
 solution : [0, 13, 1, 2, 5, 25]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 22]
 solution : [0, 13, 1, 2, 5, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 22]
 solution : [0, 13, 1, 2, 5, 25]


Solution : [0, 13, 1, 2, 5, 25] has cost 41.


Decide in level 8 among pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 26, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 26 with phase True at level 8

After decision at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 22]
 solution : [0, 13, 1, 2, 5, 25, 26]


New level: 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 22]
 solution : [0, 13, 1, 2, 5, 25, 26]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 11, 10, 27, 28, 12, 9, 22]
 solution : [0, 13, 1, 2, 5, 25, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 16, 17, 18, 19, 20, 21, 22, 31}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 26]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 26]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 26]


Solution : [0, 13, 1, 2, 5, 25, 26] has cost 75.


Before backtrack at level 9
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 26]

After backtrack at level 9
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17, 22]
 solution : [0, 13, 1, 2, 5, 25, 26]


Invert decision for 26 at level 8


New level: 9
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17, 22]
 solution : [0, 13, 1, 2, 5, 25]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17, 22]
 solution : [0, 13, 1, 2, 5, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17, 22]
 solution : [0, 13, 1, 2, 5, 25]


Solution : [0, 13, 1, 2, 5, 25] has cost 41.


Decide in level 9 among pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 22]


New level: 10
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 22]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 19, 20, 21, 31}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 22]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 22]


Solution : [0, 13, 1, 2, 5, 25, 22] has cost 75.


Before backtrack at level 10
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 22]

After backtrack at level 10
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25]


Solution : [0, 13, 1, 2, 5, 25] has cost 41.


Decide in level 10 among pending : [6, 14, 29, 30, 4, 3, 11, 10, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [6, 14, 29, 30, 4, 3, 11, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]


New level: 11
 pending : [6, 14, 29, 30, 4, 3, 11, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 27, 28, 12, 9, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : {9, 27, 28, 12}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]


Solution : [0, 13, 1, 2, 5, 25, 10] has cost 54.


Before backtrack at level 11
 pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 10]

After backtrack at level 11
 pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 12, 9]
 solution : [0, 13, 1, 2, 5, 25]


Solution : [0, 13, 1, 2, 5, 25] has cost 41.


Decide in level 11 among pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 12, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 9]
 solution : [0, 13, 1, 2, 5, 25, 12]


New level: 12
 pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 9]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17, 27, 28, 9]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 88), (17, 104), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {9, 27, 28}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Solution : [0, 13, 1, 2, 5, 25, 12] has cost 47.


Decide in level 12 among pending : [6, 14, 29, 30, 4, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 4]


New level: 13
 pending : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 4]


Before reduction : 
 pending  : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 3, 6, 11, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 4]


Solution : [0, 13, 1, 2, 5, 25, 12, 4] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 12, 4]

After backtrack at level 13
 pending : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Solution : [0, 13, 1, 2, 5, 25, 12] has cost 47.


Decide in level 13 among pending : [6, 14, 29, 30, 3, 11, 16, 18, 20, 31, 33, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 3]


New level: 14
 pending : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 3]


Before reduction : 
 pending  : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 6, 11, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 3]


Solution : [0, 13, 1, 2, 5, 25, 12, 3] has cost 60.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 12, 3]

After backtrack at level 14
 pending : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Solution : [0, 13, 1, 2, 5, 25, 12] has cost 47.


Decide in level 14 among pending : [6, 14, 29, 30, 11, 16, 18, 20, 31, 33, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 11]


New level: 15
 pending : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 11]


Before reduction : 
 pending  : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 12, 11]


Solution : [0, 13, 1, 2, 5, 25, 12, 11] has cost 53.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 12, 11]

After backtrack at level 15
 pending : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Solution : [0, 13, 1, 2, 5, 25, 12] has cost 47.


Decide in level 15 among pending : [6, 14, 29, 30, 16, 18, 20, 31, 33, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 16 with phase True at level 15

After decision at level 15
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]


New level: 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]


Solution : [0, 13, 1, 2, 5, 25, 12, 16] has cost 81.


Before backtrack at level 16
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]

After backtrack at level 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12, 16]


Invert decision for 16 at level 15


New level: 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 12]

Essensial at level 16 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 17]


Solution : [0, 13, 1, 2, 5, 25, 12, 17] has cost 81.


Before backtrack at level 16
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 12, 17]

After backtrack at level 16
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before backtrack at level 15
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 25, 12]

After backtrack at level 15
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before backtrack at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 12]

After backtrack at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 25, 12]

After backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 25, 12]


Before backtrack at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 25, 12]

After backtrack at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 5, 25, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 5, 25]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 27, 28, 9, 4]
 solution : [0, 13, 1, 2, 5, 25]

Essensial at level 12 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {27, 28}

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Solution : [0, 13, 1, 2, 5, 25, 9] has cost 47.


Decide in level 12 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 11, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 12

After decision at level 12
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 11]


New level: 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 11]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 3, 4, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 11]


Solution : [0, 13, 1, 2, 5, 25, 9, 11] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 9, 11]

After backtrack at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 11]


Invert decision for 11 at level 12


New level: 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Solution : [0, 13, 1, 2, 5, 25, 9] has cost 47.


Decide in level 13 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 3]


New level: 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 3]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 4, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 3]


Solution : [0, 13, 1, 2, 5, 25, 9, 3] has cost 60.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 9, 3]

After backtrack at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Solution : [0, 13, 1, 2, 5, 25, 9] has cost 47.


Decide in level 14 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 4]


New level: 15
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 4]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 6, 14, 16, 17, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 25, 9, 4]


Solution : [0, 13, 1, 2, 5, 25, 9, 4] has cost 53.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 5, 25, 9, 4]

After backtrack at level 15
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9]


Solution : [0, 13, 1, 2, 5, 25, 9] has cost 47.


Decide in level 15 among pending : [6, 14, 17, 29, 30, 18, 20, 31, 33, 19, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]


New level: 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 5), (19, 10), (20, 6), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 16, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]


Solution : [0, 13, 1, 2, 5, 25, 9, 17] has cost 81.


Before backtrack at level 16
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]

After backtrack at level 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before reduction : 
 pending  : [6, 14, 29, 30, 18, 20, 31, 33, 19, 21, 16]
 solution : [0, 13, 1, 2, 5, 25, 9]

Essensial at level 16 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 18, 19, 20, 21, 29, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 16]


Solution : [0, 13, 1, 2, 5, 25, 9, 16] has cost 81.


Before backtrack at level 16
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 25, 9, 16]

After backtrack at level 16
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before backtrack at level 15
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21]
 solution : [0, 13, 1, 2, 5, 25, 9]

After backtrack at level 15
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before backtrack at level 14
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17]
 solution : [0, 13, 1, 2, 5, 25, 9]

After backtrack at level 14
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before backtrack at level 13
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 25, 9]

After backtrack at level 13
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 25, 9]


Before backtrack at level 12
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 25, 9]

After backtrack at level 12
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11]
 solution : [0, 13, 1, 2, 5, 25]


Before backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11]
 solution : [0, 13, 1, 2, 5, 25]

After backtrack at level 11
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12]
 solution : [0, 13, 1, 2, 5, 25]


Before backtrack at level 10
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12]
 solution : [0, 13, 1, 2, 5, 25]

After backtrack at level 10
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 25]


Before backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 25]

After backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22]
 solution : [0, 13, 1, 2, 5, 25]


Before backtrack at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22]
 solution : [0, 13, 1, 2, 5, 25]

After backtrack at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 25]


Invert decision for 25 at level 7


New level: 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 8 among pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 19, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]


New level: 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 21, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, 0), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : {21}

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, 0), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]


Solution : [0, 13, 1, 2, 5, 19] has cost 59.


Before backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26]
 solution : [0, 13, 1, 2, 5, 19]

After backtrack at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26, 21]
 solution : [0, 13, 1, 2, 5, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26, 21]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 9 among pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 22, 26, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 26, 21]
 solution : [0, 13, 1, 2, 5, 22]


New level: 10
 pending : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 26, 21]
 solution : [0, 13, 1, 2, 5, 22]


Before reduction : 
 pending  : [6, 14, 16, 29, 30, 18, 20, 31, 33, 17, 4, 3, 9, 27, 28, 11, 12, 10, 26, 21]
 solution : [0, 13, 1, 2, 5, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 32), (28, 32), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 16, 17, 18, 20, 21, 26, 31}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 22]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 32), (28, 32), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 22]


Solution : [0, 13, 1, 2, 5, 22] has cost 59.


Before backtrack at level 10
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 22]

After backtrack at level 10
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 26, 21]
 solution : [0, 13, 1, 2, 5, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 26, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 26, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 26, 21]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 10 among pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 26, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 10

After decision at level 10
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 26]


New level: 11
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 26]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 16, 17, 18, 20, 21, 31}

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 26]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 26]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 26]


Solution : [0, 13, 1, 2, 5, 26] has cost 59.


Before backtrack at level 11
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10]
 solution : [0, 13, 1, 2, 5, 26]

After backtrack at level 11
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 26]


Invert decision for 26 at level 10


New level: 11
 pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 1), (4, 1), (5, -1), (6, 1), (7, -1), (8, -1), (9, 64), (10, 64), (11, 1), (12, 64), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 11 among pending : [6, 14, 29, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 29 with phase True at level 11

After decision at level 11
 pending : [6, 14, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]


New level: 12
 pending : [6, 14, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]


Before reduction : 
 pending  : [6, 14, 30, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 31, 33, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 30, 31}

After reduction : 
 pending  : [6, 14, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]


Before reduction : 
 pending  : [6, 14, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29]


Solution : [0, 13, 1, 2, 5, 29] has cost 35.


Decide in level 12 among pending : [6, 14, 4, 3, 9, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [6, 14, 4, 3, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


New level: 13
 pending : [6, 14, 4, 3, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 4, 3, 27, 28, 11, 12, 10, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {10, 27, 28, 12}

After reduction : 
 pending  : [6, 14, 4, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 4, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, 0), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 4, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Solution : [0, 13, 1, 2, 5, 29, 9] has cost 41.


Decide in level 13 among pending : [6, 14, 4, 3, 11, 16, 18, 20, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 13

After decision at level 13
 pending : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 4]


New level: 14
 pending : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 4]


Before reduction : 
 pending  : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {3, 6, 11, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 4]


Solution : [0, 13, 1, 2, 5, 29, 9, 4] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 9, 4]

After backtrack at level 14
 pending : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 4]


Invert decision for 4 at level 13


New level: 14
 pending : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 3, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Solution : [0, 13, 1, 2, 5, 29, 9] has cost 41.


Decide in level 14 among pending : [6, 14, 3, 11, 16, 18, 20, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 14

After decision at level 14
 pending : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 3]


New level: 15
 pending : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 3]


Before reduction : 
 pending  : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {6, 11, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 3]


Solution : [0, 13, 1, 2, 5, 29, 9, 3] has cost 54.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 9, 3]

After backtrack at level 15
 pending : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 3]


Invert decision for 3 at level 14


New level: 15
 pending : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 11, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Solution : [0, 13, 1, 2, 5, 29, 9] has cost 41.


Decide in level 15 among pending : [6, 14, 11, 16, 18, 20, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 15

After decision at level 15
 pending : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 11]


New level: 16
 pending : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 11]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 9, 11]


Solution : [0, 13, 1, 2, 5, 29, 9, 11] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 9, 11]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 11]


Invert decision for 11 at level 15


New level: 16
 pending : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Solution : [0, 13, 1, 2, 5, 29, 9] has cost 41.


Decide in level 16 among pending : [6, 14, 16, 18, 20, 17, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 16

After decision at level 16
 pending : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]


New level: 17
 pending : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]


Before reduction : 
 pending  : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]


Solution : [0, 13, 1, 2, 5, 29, 9, 16] has cost 75.


Before backtrack at level 17
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]

After backtrack at level 17
 pending : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9, 16]


Invert decision for 16 at level 16


New level: 17
 pending : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before reduction : 
 pending  : [6, 14, 18, 20, 17, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

Essensial at level 17 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 17]


Solution : [0, 13, 1, 2, 5, 29, 9, 17] has cost 75.


Before backtrack at level 17
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 9, 17]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 29, 9]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 9]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before backtrack at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 29, 9]

After backtrack at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 29, 9]


Before backtrack at level 13
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 29, 9]

After backtrack at level 13
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 29, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 29]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 12, 10, 4]
 solution : [0, 13, 1, 2, 5, 29]


Solution : [0, 13, 1, 2, 5, 29] has cost 35.


Decide in level 13 among pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 12, 10, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


New level: 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 128), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {10, 27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Solution : [0, 13, 1, 2, 5, 29, 12] has cost 41.


Decide in level 14 among pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 11]


New level: 15
 pending : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 11]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {3, 4, 6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 11]


Solution : [0, 13, 1, 2, 5, 29, 12, 11] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 12, 11]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Solution : [0, 13, 1, 2, 5, 29, 12] has cost 41.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 21, 16, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 3]


New level: 16
 pending : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 3]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {4, 6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 3]


Solution : [0, 13, 1, 2, 5, 29, 12, 3] has cost 54.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 12, 3]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Solution : [0, 13, 1, 2, 5, 29, 12] has cost 41.


Decide in level 16 among pending : [6, 14, 17, 18, 20, 21, 16, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 4]


New level: 17
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 4]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 29, 12, 4]


Solution : [0, 13, 1, 2, 5, 29, 12, 4] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 29, 12, 4]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12]


Solution : [0, 13, 1, 2, 5, 29, 12] has cost 41.


Decide in level 17 among pending : [6, 14, 17, 18, 20, 21, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 17

After decision at level 17
 pending : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]


New level: 18
 pending : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]


Before reduction : 
 pending  : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {16, 18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]


Solution : [0, 13, 1, 2, 5, 29, 12, 17] has cost 75.


Before backtrack at level 18
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]

After backtrack at level 18
 pending : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12, 17]


Invert decision for 17 at level 17


New level: 18
 pending : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before reduction : 
 pending  : [6, 14, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 29, 12]

Essensial at level 18 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 16]


Solution : [0, 13, 1, 2, 5, 29, 12, 16] has cost 75.


Before backtrack at level 18
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 29, 12, 16]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before backtrack at level 17
 pending : [6, 14, 16, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 29, 12]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before backtrack at level 16
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 29, 12]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before backtrack at level 15
 pending : [6, 14, 16, 18, 20, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 29, 12]

After backtrack at level 15
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 29, 12]


Before backtrack at level 14
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 29, 12]

After backtrack at level 14
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 29, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 29]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 10, 11]
 solution : [0, 13, 1, 2, 5, 29]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {27, 28}

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 29, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 29, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 29, 10]


Solution : [0, 13, 1, 2, 5, 29, 10] has cost 48.


Before backtrack at level 14
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 29, 10]

After backtrack at level 14
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28]
 solution : [0, 13, 1, 2, 5, 29]


Before backtrack at level 13
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28]
 solution : [0, 13, 1, 2, 5, 29]

After backtrack at level 13
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12]
 solution : [0, 13, 1, 2, 5, 29]


Before backtrack at level 12
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12]
 solution : [0, 13, 1, 2, 5, 29]

After backtrack at level 12
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5, 29]


Invert decision for 29 at level 11


New level: 12
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 12 among pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 10, 27, 28, 12, 30, 31, 33, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5, 10]


New level: 13
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 27, 28, 12, 30, 31, 33, 9]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : {9, 27, 28, 12}

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Solution : [0, 13, 1, 2, 5, 10] has cost 38.


Decide in level 13 among pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]


New level: 14
 pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 4), (32, -1), (33, 4)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]


Solution : [0, 13, 1, 2, 5, 10, 21] has cost 48.


Before backtrack at level 14
 pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]

After backtrack at level 14
 pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 4), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Solution : [0, 13, 1, 2, 5, 10] has cost 38.


Decide in level 14 among pending : [6, 14, 16, 18, 20, 17, 4, 3, 11, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 4]


New level: 15
 pending : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 4]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 3, 6, 11, 14, 16, 17, 18, 20, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 4]


Solution : [0, 13, 1, 2, 5, 10, 4] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 5, 10, 4]

After backtrack at level 15
 pending : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Solution : [0, 13, 1, 2, 5, 10] has cost 38.


Decide in level 15 among pending : [6, 14, 16, 18, 20, 17, 3, 11, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 3]


New level: 16
 pending : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 3]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 6, 11, 14, 16, 17, 18, 20, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 3]


Solution : [0, 13, 1, 2, 5, 10, 3] has cost 51.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 5, 10, 3]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Solution : [0, 13, 1, 2, 5, 10] has cost 38.


Decide in level 16 among pending : [6, 14, 16, 18, 20, 17, 11, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 11]


New level: 17
 pending : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 11]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 6, 14, 16, 17, 18, 20, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 10, 11]


Solution : [0, 13, 1, 2, 5, 10, 11] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 10, 11]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Solution : [0, 13, 1, 2, 5, 10] has cost 38.


Decide in level 17 among pending : [6, 14, 16, 18, 20, 17, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 16]


New level: 18
 pending : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 16]


Before reduction : 
 pending  : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 17, 18, 20, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 16]


Solution : [0, 13, 1, 2, 5, 10, 16] has cost 72.


Before backtrack at level 18
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 16]

After backtrack at level 18
 pending : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before reduction : 
 pending  : [6, 14, 18, 20, 17, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

Essensial at level 18 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 18, 20, 30, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 17]


Solution : [0, 13, 1, 2, 5, 10, 17] has cost 72.


Before backtrack at level 18
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 10, 17]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]


Before backtrack at level 17
 pending : [6, 14, 17, 18, 20, 30, 31, 33]
 solution : [0, 13, 1, 2, 5, 10]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 10]


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 10]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11]
 solution : [0, 13, 1, 2, 5, 10]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11]
 solution : [0, 13, 1, 2, 5, 10]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 10]


Before backtrack at level 14
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 10]

After backtrack at level 14
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 10]


Before backtrack at level 13
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 10]

After backtrack at level 13
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 13 among pending : [6, 14, 17, 18, 20, 30, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

Decide 30 with phase True at level 13

After decision at level 13
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]


New level: 14
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, 128), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 31}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 12, 9, 21]
 solution : [0, 13, 1, 2, 5, 30]


Solution : [0, 13, 1, 2, 5, 30] has cost 35.


Decide in level 14 among pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 12, 9, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 9, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


New level: 15
 pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 9, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 27, 28, 9, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {9, 27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Solution : [0, 13, 1, 2, 5, 30, 12] has cost 41.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 11]


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 11]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {3, 4, 6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 11]


Solution : [0, 13, 1, 2, 5, 30, 12, 11] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 12, 11]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 11]


Invert decision for 11 at level 15


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Solution : [0, 13, 1, 2, 5, 30, 12] has cost 41.


Decide in level 16 among pending : [6, 14, 17, 18, 20, 16, 3, 4, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 3]


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 3]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {4, 6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 3]


Solution : [0, 13, 1, 2, 5, 30, 12, 3] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 12, 3]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Solution : [0, 13, 1, 2, 5, 30, 12] has cost 41.


Decide in level 17 among pending : [6, 14, 17, 18, 20, 16, 4, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 17

After decision at level 17
 pending : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 4]


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 4]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 12, 4]


Solution : [0, 13, 1, 2, 5, 30, 12, 4] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 12, 4]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 4]


Invert decision for 4 at level 17


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Solution : [0, 13, 1, 2, 5, 30, 12] has cost 41.


Decide in level 18 among pending : [6, 14, 17, 18, 20, 16, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]


New level: 19
 pending : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {16, 18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]


Solution : [0, 13, 1, 2, 5, 30, 12, 17] has cost 75.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]

After backtrack at level 19
 pending : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

Essensial at level 19 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 16]


Solution : [0, 13, 1, 2, 5, 30, 12, 16] has cost 75.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 12, 16]

After backtrack at level 19
 pending : [6, 14, 16, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before backtrack at level 18
 pending : [6, 14, 16, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 30, 12]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before backtrack at level 17
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 12]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before backtrack at level 16
 pending : [6, 14, 16, 18, 20, 21, 17, 4]
 solution : [0, 13, 1, 2, 5, 30, 12]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 30, 12]


Before backtrack at level 15
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 30, 12]

After backtrack at level 15
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 9, 11]
 solution : [0, 13, 1, 2, 5, 30, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 9, 11]
 solution : [0, 13, 1, 2, 5, 30]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 27, 28, 9, 11]
 solution : [0, 13, 1, 2, 5, 30]

Essensial at level 15 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {27, 28}

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Solution : [0, 13, 1, 2, 5, 30, 9] has cost 41.


Decide in level 15 among pending : [6, 14, 16, 18, 20, 21, 17, 4, 3, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 15

After decision at level 15
 pending : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 4]


New level: 16
 pending : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 4]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {3, 6, 11, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 4]


Solution : [0, 13, 1, 2, 5, 30, 9, 4] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 9, 4]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 4]


Invert decision for 4 at level 15


New level: 16
 pending : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Solution : [0, 13, 1, 2, 5, 30, 9] has cost 41.


Decide in level 16 among pending : [6, 14, 16, 18, 20, 21, 17, 3, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 3]


New level: 17
 pending : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 3]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {6, 11, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 3]


Solution : [0, 13, 1, 2, 5, 30, 9, 3] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 9, 3]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Solution : [0, 13, 1, 2, 5, 30, 9] has cost 41.


Decide in level 17 among pending : [6, 14, 16, 18, 20, 21, 17, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 17

After decision at level 17
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 11]


New level: 18
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 11]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {6, 14, 16, 17, 18, 20, 21}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 30, 9, 11]


Solution : [0, 13, 1, 2, 5, 30, 9, 11] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 5, 30, 9, 11]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 11]


Invert decision for 11 at level 17


New level: 18
 pending : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9]


Solution : [0, 13, 1, 2, 5, 30, 9] has cost 41.


Decide in level 18 among pending : [6, 14, 16, 18, 20, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 18

After decision at level 18
 pending : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]


New level: 19
 pending : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]


Before reduction : 
 pending  : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {17, 18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]


Solution : [0, 13, 1, 2, 5, 30, 9, 16] has cost 75.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]

After backtrack at level 19
 pending : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9, 16]


Invert decision for 16 at level 18


New level: 19
 pending : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before reduction : 
 pending  : [6, 14, 18, 20, 21, 17]
 solution : [0, 13, 1, 2, 5, 30, 9]

Essensial at level 19 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {18, 20, 21}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 17]


Solution : [0, 13, 1, 2, 5, 30, 9, 17] has cost 75.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 30, 9, 17]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before backtrack at level 18
 pending : [6, 14, 17, 18, 20, 21]
 solution : [0, 13, 1, 2, 5, 30, 9]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before backtrack at level 17
 pending : [6, 14, 17, 18, 20, 21, 16]
 solution : [0, 13, 1, 2, 5, 30, 9]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 21, 16, 11]
 solution : [0, 13, 1, 2, 5, 30, 9]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 30, 9]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 30, 9]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4]
 solution : [0, 13, 1, 2, 5, 30]


Before backtrack at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4]
 solution : [0, 13, 1, 2, 5, 30]

After backtrack at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5, 30]


Invert decision for 30 at level 13


New level: 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5]


Solution : [0, 13, 1, 2, 5] has cost 25.


Decide in level 14 among pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 9, 27, 28, 4, 31, 33, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5, 9]


New level: 15
 pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 27, 28, 4, 31, 33, 12]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : {27, 28, 12}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 0), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9]


Solution : [0, 13, 1, 2, 5, 9] has cost 31.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 21, 16, 11, 3, 4, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Solution : [0, 13, 1, 2, 5, 9, 21] has cost 41.


Decide in level 16 among pending : [6, 14, 17, 18, 20, 16, 11, 3, 4, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 11]


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 11]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 3, 4, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 11]


Solution : [0, 13, 1, 2, 5, 9, 21, 11] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 21, 11]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Solution : [0, 13, 1, 2, 5, 9, 21] has cost 41.


Decide in level 17 among pending : [6, 14, 17, 18, 20, 16, 3, 4, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 3]


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 3]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 4, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 3]


Solution : [0, 13, 1, 2, 5, 9, 21, 3] has cost 54.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 21, 3]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Solution : [0, 13, 1, 2, 5, 9, 21] has cost 41.


Decide in level 18 among pending : [6, 14, 17, 18, 20, 16, 4, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 4 with phase True at level 18

After decision at level 18
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 4]


New level: 19
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 4]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 21, 4]


Solution : [0, 13, 1, 2, 5, 9, 21, 4] has cost 47.


Before backtrack at level 19
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 21, 4]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 4]


Invert decision for 4 at level 18


New level: 19
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Solution : [0, 13, 1, 2, 5, 9, 21] has cost 41.


Decide in level 19 among pending : [6, 14, 17, 18, 20, 16, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]


New level: 20
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]


Solution : [0, 13, 1, 2, 5, 9, 21, 17] has cost 75.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]

After backtrack at level 20
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

Essensial at level 20 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 16]


Solution : [0, 13, 1, 2, 5, 9, 21, 16] has cost 75.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 21, 16]

After backtrack at level 20
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 9, 21]

After backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 21]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4]
 solution : [0, 13, 1, 2, 5, 9, 21]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 9, 21]


Before backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 9, 21]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 9, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]


Solution : [0, 13, 1, 2, 5, 9] has cost 31.


Decide in level 16 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9, 4]


New level: 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9, 4]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 3, 6, 11, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 4]


Solution : [0, 13, 1, 2, 5, 9, 4] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 4]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]
 solution : [0, 13, 1, 2, 5, 9]


Solution : [0, 13, 1, 2, 5, 9] has cost 31.


Decide in level 17 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9, 3]


New level: 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9, 3]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 6, 11, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 3]


Solution : [0, 13, 1, 2, 5, 9, 3] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 3]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 5, 9]


Solution : [0, 13, 1, 2, 5, 9] has cost 31.


Decide in level 18 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 18

After decision at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 11]


New level: 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 11]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 9, 11]


Solution : [0, 13, 1, 2, 5, 9, 11] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 13, 1, 2, 5, 9, 11]

After backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 11]


Invert decision for 11 at level 18


New level: 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9]


Solution : [0, 13, 1, 2, 5, 9] has cost 31.


Decide in level 19 among pending : [6, 14, 16, 18, 20, 31, 33, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 16 with phase True at level 19

After decision at level 19
 pending : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 16]


New level: 20
 pending : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 16]


Before reduction : 
 pending  : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 17, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 16]


Solution : [0, 13, 1, 2, 5, 9, 16] has cost 65.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 16]

After backtrack at level 20
 pending : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9, 16]


Invert decision for 16 at level 19


New level: 20
 pending : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9]


Before reduction : 
 pending  : [6, 14, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 9]

Essensial at level 20 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 17]


Solution : [0, 13, 1, 2, 5, 9, 17] has cost 65.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 9, 17]

After backtrack at level 20
 pending : [6, 14, 17, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 9]


Before backtrack at level 19
 pending : [6, 14, 17, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 9]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 9]


Before backtrack at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 9]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11]
 solution : [0, 13, 1, 2, 5, 9]


Before backtrack at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11]
 solution : [0, 13, 1, 2, 5, 9]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 9]


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3]
 solution : [0, 13, 1, 2, 5, 9]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 9]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 9]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 21]
 solution : [0, 13, 1, 2, 5, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 21]
 solution : [0, 13, 1, 2, 5]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 27, 28, 12, 21]
 solution : [0, 13, 1, 2, 5]

Essensial at level 15 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : {27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 21]
 solution : [0, 13, 1, 2, 5, 12]


Solution : [0, 13, 1, 2, 5, 12] has cost 31.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]


New level: 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]


Solution : [0, 13, 1, 2, 5, 12, 21] has cost 41.


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 21]


Invert decision for 21 at level 15


New level: 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]


Solution : [0, 13, 1, 2, 5, 12] has cost 31.


Decide in level 16 among pending : [6, 14, 17, 18, 20, 31, 33, 16, 11, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 11]


New level: 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 11]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 3, 4, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 11]


Solution : [0, 13, 1, 2, 5, 12, 11] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 5, 12, 11]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]
 solution : [0, 13, 1, 2, 5, 12]


Solution : [0, 13, 1, 2, 5, 12] has cost 31.


Decide in level 17 among pending : [6, 14, 17, 18, 20, 31, 33, 16, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 17

After decision at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12, 3]


New level: 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12, 3]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 4, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 3]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 3]


Solution : [0, 13, 1, 2, 5, 12, 3] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 5, 12, 3]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12, 3]


Invert decision for 3 at level 17


New level: 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 4]
 solution : [0, 13, 1, 2, 5, 12]


Solution : [0, 13, 1, 2, 5, 12] has cost 31.


Decide in level 18 among pending : [6, 14, 17, 18, 20, 31, 33, 16, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 18

After decision at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 4]


New level: 19
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 4]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 5, 12, 4]


Solution : [0, 13, 1, 2, 5, 12, 4] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 13, 1, 2, 5, 12, 4]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 4]


Invert decision for 4 at level 18


New level: 19
 pending : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12]


Solution : [0, 13, 1, 2, 5, 12] has cost 31.


Decide in level 19 among pending : [6, 14, 17, 18, 20, 31, 33, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 17]


New level: 20
 pending : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 17]


Before reduction : 
 pending  : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 16, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 17]


Solution : [0, 13, 1, 2, 5, 12, 17] has cost 65.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 17]

After backtrack at level 20
 pending : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12]


Before reduction : 
 pending  : [6, 14, 18, 20, 31, 33, 16]
 solution : [0, 13, 1, 2, 5, 12]

Essensial at level 20 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 16]


Solution : [0, 13, 1, 2, 5, 12, 16] has cost 65.


Before backtrack at level 20
 pending : [6, 14]
 solution : [0, 13, 1, 2, 5, 12, 16]

After backtrack at level 20
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 12]


Before backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 5, 12]

After backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 12]


Before backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 5, 12]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4]
 solution : [0, 13, 1, 2, 5, 12]


Before backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4]
 solution : [0, 13, 1, 2, 5, 12]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 12]


Before backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3]
 solution : [0, 13, 1, 2, 5, 12]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 12]


Before backtrack at level 15
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11]
 solution : [0, 13, 1, 2, 5, 12]

After backtrack at level 15
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 14
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 14
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 12
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 12
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 11
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 11
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 10
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 10
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 9
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 9
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 8
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 8
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 7
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 7
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24]
 solution : [0, 13, 1, 2, 5]


Before backtrack at level 5
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24]
 solution : [0, 13, 1, 2, 5]

After backtrack at level 5
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7, 23]
 solution : [0, 13, 1, 2, 5]


Invert decision for 5 at level 4


New level: 5
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7, 23]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7, 23]
 solution : [0, 13, 1, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7, 23]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 5 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7, 23]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 23 with phase True at level 5

After decision at level 5
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]


New level: 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 21, 9, 30, 10, 29, 26, 22, 19, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, 200), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 40), (17, 40), (18, 16), (19, 0), (20, 16), (21, 0), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 6 : {19, 21}

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 40), (17, 40), (18, 16), (19, 0), (20, 16), (21, 0), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 40), (17, 40), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]


Solution : [0, 13, 1, 2, 23] has cost 54.


Before backtrack at level 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7]
 solution : [0, 13, 1, 2, 23]

After backtrack at level 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 23]


Invert decision for 23 at level 5


New level: 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 40), (17, 40), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, 10), (25, 10), (26, 80), (27, 32), (28, 32), (29, 32), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 6 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 25, 24, 15, 7, 21, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 25 with phase True at level 6

After decision at level 6
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


New level: 7
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 24, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, 192), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, 0), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 7 : {24}

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, 0), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 7 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 26, 22, 15, 7, 21, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 26 with phase True at level 7

After decision at level 7
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]


New level: 8
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 22, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 8 : {16, 17, 18, 20, 22}

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]


Solution : [0, 13, 1, 2, 25, 26] has cost 70.


Before backtrack at level 8
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 26]

After backtrack at level 8
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2, 25, 26]


Invert decision for 26 at level 7


New level: 8
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2, 25]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 8 among pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 22]


New level: 9
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 22]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : {16, 17, 18, 20}

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 22]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 22]


Solution : [0, 13, 1, 2, 25, 22] has cost 70.


Before backtrack at level 9
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 22]

After backtrack at level 9
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 9 among pending : [6, 14, 31, 33, 4, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [6, 14, 31, 33, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]


New level: 10
 pending : [6, 14, 31, 33, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]


Before reduction : 
 pending  : [6, 14, 31, 33, 3, 11, 12, 27, 28, 9, 30, 10, 29, 15, 7, 21, 19, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 3, 6, 7, 11, 14, 15, 19, 21, 31}

After reduction : 
 pending  : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]


Before reduction : 
 pending  : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]


Solution : [0, 13, 1, 2, 25, 4] has cost 42.


Before backtrack at level 10
 pending : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 25, 4]

After backtrack at level 10
 pending : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 10 among pending : [12, 27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]


New level: 11
 pending : [27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]


Before reduction : 
 pending  : [27, 28, 9, 30, 10, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, 0), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : {9, 10, 27, 28}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, 0), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]


Solution : [0, 13, 1, 2, 25, 12] has cost 42.


Before backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 12]

After backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 11 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 3, 11, 15, 7, 21, 19, 27, 28, 9, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]


New level: 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 6, 7, 11, 14, 15, 19, 21, 31}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]


Solution : [0, 13, 1, 2, 25, 3] has cost 49.


Before backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10]
 solution : [0, 13, 1, 2, 25, 3]

After backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25]


Solution : [0, 13, 1, 2, 25] has cost 36.


Decide in level 12 among pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]


New level: 13
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 10, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 88), (17, 104), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : {10, 27, 28}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]


Solution : [0, 13, 1, 2, 25, 9] has cost 42.


Before backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 9]

After backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 10]
 solution : [0, 13, 1, 2, 25, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 10]
 solution : [0, 13, 1, 2, 25]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 27, 28, 10]
 solution : [0, 13, 1, 2, 25]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : {27, 28}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 10]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 10]


Solution : [0, 13, 1, 2, 25, 10] has cost 49.


Before backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19]
 solution : [0, 13, 1, 2, 25, 10]

After backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 10
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 10
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22]
 solution : [0, 13, 1, 2, 25]


Before backtrack at level 7
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22]
 solution : [0, 13, 1, 2, 25]

After backtrack at level 7
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 24, 26]
 solution : [0, 13, 1, 2, 25]


Invert decision for 25 at level 6


New level: 7
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 24, 26]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 24, 26]
 solution : [0, 13, 1, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 24, 26]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 7 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 24, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 24 with phase True at level 7

After decision at level 7
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 26]
 solution : [0, 13, 1, 2, 24]


New level: 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 26]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 26]
 solution : [0, 13, 1, 2, 24]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, 192), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 26]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 8 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 22, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 22 with phase True at level 8

After decision at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 26]
 solution : [0, 13, 1, 2, 24, 22]


New level: 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 26]
 solution : [0, 13, 1, 2, 24, 22]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 26]
 solution : [0, 13, 1, 2, 24, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, 129), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : {16, 17, 18, 20, 26}

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 22]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 22]


Solution : [0, 13, 1, 2, 24, 22] has cost 70.


Before backtrack at level 9
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 22]

After backtrack at level 9
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17, 26]
 solution : [0, 13, 1, 2, 24, 22]


Invert decision for 22 at level 8


New level: 9
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17, 26]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17, 26]
 solution : [0, 13, 1, 2, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17, 26]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 9 among pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 26]


New level: 10
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 26]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, 129), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : {16, 17, 18, 20}

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 26]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 26]


Solution : [0, 13, 1, 2, 24, 26] has cost 70.


Before backtrack at level 10
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4]
 solution : [0, 13, 1, 2, 24, 26]

After backtrack at level 10
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 10 among pending : [30, 29, 6, 14, 31, 33, 11, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [30, 29, 6, 14, 31, 33, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]


New level: 11
 pending : [30, 29, 6, 14, 31, 33, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 15, 7, 21, 19, 10, 27, 28, 9, 3, 12, 4, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 3, 4, 6, 7, 14, 15, 19, 21, 31}

After reduction : 
 pending  : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]


Before reduction : 
 pending  : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]


Solution : [0, 13, 1, 2, 24, 11] has cost 42.


Before backtrack at level 11
 pending : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 24, 11]

After backtrack at level 11
 pending : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 11 among pending : [30, 29, 10, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [30, 29, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]


New level: 12
 pending : [30, 29, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]


Before reduction : 
 pending  : [30, 29, 27, 28, 9, 12, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : {9, 27, 28, 12}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]


Solution : [0, 13, 1, 2, 24, 10] has cost 49.


Before backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4]
 solution : [0, 13, 1, 2, 24, 10]

After backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 12 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 21, 19, 3, 4, 27, 28, 9, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]


New level: 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 15, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 16), (15, 0), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : {15}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 16), (15, 0), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]


Solution : [0, 13, 1, 2, 24, 7] has cost 41.


Before backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 7]

After backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 16), (15, -1), (16, 104), (17, 88), (18, 24), (19, 10), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 13 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 3, 4, 27, 28, 9, 12, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24, 3]


New level: 14
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24, 3]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 27, 28, 9, 12, 15]
 solution : [0, 13, 1, 2, 24, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 4, 6, 14, 15, 19, 21, 31}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 3]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 8), (17, 8), (18, 4), (19, 0), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 3]


Solution : [0, 13, 1, 2, 24, 3] has cost 49.


Before backtrack at level 14
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 24, 3]

After backtrack at level 14
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 8), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24]


Solution : [0, 13, 1, 2, 24] has cost 36.


Decide in level 14 among pending : [30, 29, 16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 21, 19, 4, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]


New level: 15
 pending : [30, 29, 16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 104), (17, 88), (18, 24), (19, 37), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 32), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : {27, 28, 12}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]


Solution : [0, 13, 1, 2, 24, 9] has cost 42.


Before backtrack at level 15
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 9]

After backtrack at level 15
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 27, 28, 12]
 solution : [0, 13, 1, 2, 24, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 27, 28, 12]
 solution : [0, 13, 1, 2, 24]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 27, 28, 12]
 solution : [0, 13, 1, 2, 24]

Essensial at level 15 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : {27, 28}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 12]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 12]


Solution : [0, 13, 1, 2, 24, 12] has cost 42.


Before backtrack at level 15
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15]
 solution : [0, 13, 1, 2, 24, 12]

After backtrack at level 15
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 14
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 14
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 13
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 12
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 11
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 10
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 10
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26]
 solution : [0, 13, 1, 2, 24]


Before backtrack at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26]
 solution : [0, 13, 1, 2, 24]

After backtrack at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 24]


Invert decision for 24 at level 7


New level: 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 19), (17, 19), (18, 5), (19, 37), (20, 6), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 1), (30, 1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 8 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 19, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]


New level: 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 21, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, 168), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, 0), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Covered at level 9 : {21}

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, 0), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]


Solution : [0, 13, 1, 2, 19] has cost 54.


Before backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22]
 solution : [0, 13, 1, 2, 19]

After backtrack at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22, 21]
 solution : [0, 13, 1, 2, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22, 21]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22, 21]
 solution : [0, 13, 1, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 32), (17, 32), (18, 16), (19, -1), (20, 16), (21, -1), (22, 80), (23, -1), (24, -1), (25, -1), (26, 80), (27, 32), (28, 32), (29, 128), (30, 128), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22, 21]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 9 among pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 26, 22, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 26 with phase True at level 9

After decision at level 9
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 22, 21]
 solution : [0, 13, 1, 2, 26]


New level: 10
 pending : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 22, 21]
 solution : [0, 13, 1, 2, 26]


Before reduction : 
 pending  : [30, 29, 16, 18, 20, 17, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 22, 21]
 solution : [0, 13, 1, 2, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, 136), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 2), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : {16, 17, 18, 20, 22}

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 26]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 26]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 2), (22, 0), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 26]


Solution : [0, 13, 1, 2, 26] has cost 54.


Before backtrack at level 10
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 26]

After backtrack at level 10
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2, 26]


Invert decision for 26 at level 9


New level: 10
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17, 22]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 10 among pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 22 with phase True at level 10

After decision at level 10
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 22]


New level: 11
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 22]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, 136), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : {16, 17, 18, 20}

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 22]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 22]


Solution : [0, 13, 1, 2, 22] has cost 54.


Before backtrack at level 11
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21]
 solution : [0, 13, 1, 2, 22]

After backtrack at level 11
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 22]


Invert decision for 22 at level 10


New level: 11
 pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 64), (10, 64), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 1), (30, 1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 11 among pending : [30, 29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

Decide 30 with phase True at level 11

After decision at level 11
 pending : [29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]


New level: 12
 pending : [29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [29, 6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, 128), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 0), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : {29}

After reduction : 
 pending  : [6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, 0), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30]


Solution : [0, 13, 1, 2, 30] has cost 30.


Decide in level 12 among pending : [6, 14, 31, 33, 4, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [6, 14, 31, 33, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


New level: 13
 pending : [6, 14, 31, 33, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Before reduction : 
 pending  : [6, 14, 31, 33, 15, 12, 27, 28, 9, 3, 7, 10, 11, 21, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 3, 6, 7, 11, 14, 15, 21, 31}

After reduction : 
 pending  : [12, 27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Before reduction : 
 pending  : [12, 27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, 128), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Solution : [0, 13, 1, 2, 30, 4] has cost 36.


Decide in level 13 among pending : [12, 27, 28, 9, 10, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 12]


New level: 14
 pending : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 12]


Before reduction : 
 pending  : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {9, 10, 16, 17, 18, 20, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 12]


Solution : [0, 13, 1, 2, 30, 4, 12] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 13, 1, 2, 30, 4, 12]

After backtrack at level 14
 pending : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Before reduction : 
 pending  : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [27, 28, 9, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Solution : [0, 13, 1, 2, 30, 4] has cost 36.


Decide in level 14 among pending : [27, 28, 9, 10, 16, 18, 20, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 9]


New level: 15
 pending : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 9]


Before reduction : 
 pending  : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 16, 17, 18, 20, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 9]


Solution : [0, 13, 1, 2, 30, 4, 9] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 30, 4, 9]

After backtrack at level 15
 pending : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Before reduction : 
 pending  : [27, 28, 10, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]

Essensial at level 15 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {16, 17, 18, 20, 27, 28}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 4, 10]


Solution : [0, 13, 1, 2, 30, 4, 10] has cost 49.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 30, 4, 10]

After backtrack at level 15
 pending : [10, 27, 28, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]


Before backtrack at level 14
 pending : [10, 27, 28, 16, 18, 20, 17]
 solution : [0, 13, 1, 2, 30, 4]

After backtrack at level 14
 pending : [10, 27, 28, 16, 18, 20, 17, 9]
 solution : [0, 13, 1, 2, 30, 4]


Before backtrack at level 13
 pending : [10, 27, 28, 16, 18, 20, 17, 9]
 solution : [0, 13, 1, 2, 30, 4]

After backtrack at level 13
 pending : [10, 27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [10, 27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [10, 27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30]


Solution : [0, 13, 1, 2, 30] has cost 30.


Decide in level 13 among pending : [10, 27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30, 10]


New level: 14
 pending : [27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30, 10]


Before reduction : 
 pending  : [27, 28, 16, 18, 20, 17, 9, 6, 14, 31, 33, 15, 3, 7, 11, 21, 12]
 solution : [0, 13, 1, 2, 30, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : {9, 27, 28, 12}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 10]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 0), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 10]


Solution : [0, 13, 1, 2, 30, 10] has cost 43.


Before backtrack at level 14
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 10]

After backtrack at level 14
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30]


Solution : [0, 13, 1, 2, 30] has cost 30.


Decide in level 14 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 3, 7, 11, 21, 27, 28, 9, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 14

After decision at level 14
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]


New level: 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 6, 7, 11, 14, 15, 21, 31}

After reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]


Solution : [0, 13, 1, 2, 30, 3] has cost 43.


Before backtrack at level 15
 pending : [16, 18, 20, 17, 27, 28, 9, 12]
 solution : [0, 13, 1, 2, 30, 3]

After backtrack at level 15
 pending : [16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 3]


Invert decision for 3 at level 14


New level: 15
 pending : [16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30]


Solution : [0, 13, 1, 2, 30] has cost 30.


Decide in level 15 among pending : [16, 18, 20, 17, 27, 28, 9, 12, 6, 14, 31, 33, 15, 7, 11, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]


New level: 16
 pending : [16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 12, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {27, 28, 12}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21]
 solution : [0, 13, 1, 2, 30, 9]


Solution : [0, 13, 1, 2, 30, 9] has cost 36.


Decide in level 16 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 7, 11, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 15, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 15, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, 0), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 15, 31}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, 0), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]


Solution : [0, 13, 1, 2, 30, 9, 7] has cost 41.


Before backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 11, 21]
 solution : [0, 13, 1, 2, 30, 9, 7]

After backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 11, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 11, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 11, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 11, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9]


Solution : [0, 13, 1, 2, 30, 9] has cost 36.


Decide in level 17 among pending : [16, 18, 20, 17, 6, 14, 11, 21, 31, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 17

After decision at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9, 11]


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 6, 14, 15, 16, 17, 18, 20, 21, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 9, 11]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 9, 11]


Solution : [0, 13, 1, 2, 30, 9, 11] has cost 42.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 30, 9, 11]

After backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9, 11]


Invert decision for 11 at level 17


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 15]
 solution : [0, 13, 1, 2, 30, 9]

Essensial at level 18 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 31}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 9, 15]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 9, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 9, 15]


Solution : [0, 13, 1, 2, 30, 9, 15] has cost 38.


Before backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 9, 15]

After backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 9]


Before backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 9]

After backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11]
 solution : [0, 13, 1, 2, 30, 9]


Before backtrack at level 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11]
 solution : [0, 13, 1, 2, 30, 9]

After backtrack at level 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 27, 28, 12, 7]
 solution : [0, 13, 1, 2, 30, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 27, 28, 12, 7]
 solution : [0, 13, 1, 2, 30]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 27, 28, 12, 7]
 solution : [0, 13, 1, 2, 30]

Essensial at level 16 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {27, 28}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 7]
 solution : [0, 13, 1, 2, 30, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 7]
 solution : [0, 13, 1, 2, 30, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 7]
 solution : [0, 13, 1, 2, 30, 12]


Solution : [0, 13, 1, 2, 30, 12] has cost 36.


Decide in level 16 among pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 11, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12, 11]


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 6, 7, 14, 15, 16, 17, 18, 20, 21, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 12, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 30, 12, 11]


Solution : [0, 13, 1, 2, 30, 12, 11] has cost 42.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 30, 12, 11]

After backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12]


Solution : [0, 13, 1, 2, 30, 12] has cost 36.


Decide in level 17 among pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12, 7]


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, 0), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 31, 15}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, 0), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 7]


Solution : [0, 13, 1, 2, 30, 12, 7] has cost 41.


Before backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 7]

After backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12]

Essensial at level 18 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 31}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 15]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 15]


Solution : [0, 13, 1, 2, 30, 12, 15] has cost 38.


Before backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21]
 solution : [0, 13, 1, 2, 30, 12, 15]

After backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12]


Before backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33]
 solution : [0, 13, 1, 2, 30, 12]

After backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12]


Before backtrack at level 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7]
 solution : [0, 13, 1, 2, 30, 12]

After backtrack at level 16
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11]
 solution : [0, 13, 1, 2, 30]


Before backtrack at level 15
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11]
 solution : [0, 13, 1, 2, 30]

After backtrack at level 15
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9]
 solution : [0, 13, 1, 2, 30]


Before backtrack at level 14
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9]
 solution : [0, 13, 1, 2, 30]

After backtrack at level 14
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3]
 solution : [0, 13, 1, 2, 30]


Before backtrack at level 13
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3]
 solution : [0, 13, 1, 2, 30]

After backtrack at level 13
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10]
 solution : [0, 13, 1, 2, 30]


Before backtrack at level 12
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10]
 solution : [0, 13, 1, 2, 30]

After backtrack at level 12
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 30]


Invert decision for 30 at level 11


New level: 12
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 12 among pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 7, 12, 27, 28, 11, 9, 3, 10, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]


New level: 13
 pending : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 15, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : {15}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, 0), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7]


Solution : [0, 13, 1, 2, 7] has cost 25.


Decide in level 13 among pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 12, 27, 28, 11, 9, 3, 10, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


New level: 14
 pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 27, 28, 11, 9, 3, 10, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, 128), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : {9, 10, 27, 28}

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, 0), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 21, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Solution : [0, 13, 1, 2, 7, 12] has cost 31.


Decide in level 14 among pending : [16, 18, 20, 17, 6, 14, 21, 31, 33, 11, 3, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]


New level: 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]


Solution : [0, 13, 1, 2, 7, 12, 21] has cost 41.


Before backtrack at level 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]

After backtrack at level 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Solution : [0, 13, 1, 2, 7, 12] has cost 31.


Decide in level 15 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 11, 3, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 15

After decision at level 15
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 11]


New level: 16
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 3, 4, 6, 14, 16, 17, 18, 20, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 11]


Solution : [0, 13, 1, 2, 7, 12, 11] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 7, 12, 11]

After backtrack at level 16
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 11]


Invert decision for 11 at level 15


New level: 16
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Solution : [0, 13, 1, 2, 7, 12] has cost 31.


Decide in level 16 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 3, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 3]


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 3]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 4, 6, 14, 16, 17, 18, 20, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 3]


Solution : [0, 13, 1, 2, 7, 12, 3] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 7, 12, 3]

After backtrack at level 17
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]
 solution : [0, 13, 1, 2, 7, 12]


Solution : [0, 13, 1, 2, 7, 12] has cost 31.


Decide in level 17 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 17

After decision at level 17
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 4]


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 4]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 6, 14, 16, 17, 18, 20, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 12, 4]


Solution : [0, 13, 1, 2, 7, 12, 4] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 7, 12, 4]

After backtrack at level 18
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 4]


Invert decision for 4 at level 17


New level: 18
 pending : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]


Solution : [0, 13, 1, 2, 7, 12] has cost 31.


Decide in level 18 among pending : [16, 18, 20, 17, 6, 14, 31, 33, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 16 with phase True at level 18

After decision at level 18
 pending : [18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 16]


New level: 19
 pending : [18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 16]


Before reduction : 
 pending  : [18, 20, 17, 6, 14, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 17, 18, 20, 29, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 16]


Solution : [0, 13, 1, 2, 7, 12, 16] has cost 65.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 16]

After backtrack at level 19
 pending : [6, 14, 18, 20, 17, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12, 16]


Invert decision for 16 at level 18


New level: 19
 pending : [6, 14, 18, 20, 17, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]


Before reduction : 
 pending  : [6, 14, 18, 20, 17, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]

Essensial at level 19 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 18, 20, 29, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 17]


Solution : [0, 13, 1, 2, 7, 12, 17] has cost 65.


Before backtrack at level 19
 pending : [6, 14]
 solution : [0, 13, 1, 2, 7, 12, 17]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]


Before backtrack at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 29]
 solution : [0, 13, 1, 2, 7, 12]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16]
 solution : [0, 13, 1, 2, 7, 12]


Before backtrack at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16]
 solution : [0, 13, 1, 2, 7, 12]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4]
 solution : [0, 13, 1, 2, 7, 12]


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4]
 solution : [0, 13, 1, 2, 7, 12]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3]
 solution : [0, 13, 1, 2, 7, 12]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3]
 solution : [0, 13, 1, 2, 7, 12]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11]
 solution : [0, 13, 1, 2, 7, 12]


Before backtrack at level 14
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11]
 solution : [0, 13, 1, 2, 7, 12]

After backtrack at level 14
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7]


Solution : [0, 13, 1, 2, 7] has cost 25.


Decide in level 14 among pending : [6, 14, 17, 18, 20, 31, 33, 29, 16, 4, 3, 11, 27, 28, 9, 10, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 29 with phase True at level 14

After decision at level 14
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]


New level: 15
 pending : [6, 14, 17, 18, 20, 31, 33, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 31, 33, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 31}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 9, 10, 21]
 solution : [0, 13, 1, 2, 7, 29]


Solution : [0, 13, 1, 2, 7, 29] has cost 35.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 9, 10, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 10, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 10, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 27, 28, 10, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {10, 27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, 0), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]


Solution : [0, 13, 1, 2, 7, 29, 9] has cost 41.


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 9]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 10]
 solution : [0, 13, 1, 2, 7, 29, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 10]
 solution : [0, 13, 1, 2, 7, 29]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 10]
 solution : [0, 13, 1, 2, 7, 29]

Essensial at level 16 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 10]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 10]


Solution : [0, 13, 1, 2, 7, 29, 10] has cost 48.


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21]
 solution : [0, 13, 1, 2, 7, 29, 10]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28]
 solution : [0, 13, 1, 2, 7, 29]


Before backtrack at level 15
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28]
 solution : [0, 13, 1, 2, 7, 29]

After backtrack at level 15
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7, 29]


Invert decision for 29 at level 14


New level: 15
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 8), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 8), (15, -1), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 2), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7]


Solution : [0, 13, 1, 2, 7] has cost 25.


Decide in level 15 among pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 10, 27, 28, 31, 33, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 15

After decision at level 15
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7, 10]


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7, 10]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 27, 28, 31, 33, 9]
 solution : [0, 13, 1, 2, 7, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 128), (10, 128), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {9, 27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 10]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, 0), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 10]


Solution : [0, 13, 1, 2, 7, 10] has cost 38.


Before backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 10]

After backtrack at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33, 27, 28, 9]
 solution : [0, 13, 1, 2, 7, 10]


Invert decision for 10 at level 15


New level: 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33, 27, 28, 9]
 solution : [0, 13, 1, 2, 7]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33, 27, 28, 9]
 solution : [0, 13, 1, 2, 7]

Essensial at level 16 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {27, 28}

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Solution : [0, 13, 1, 2, 7, 9] has cost 31.


Decide in level 16 among pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 21, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 16

After decision at level 16
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]


Solution : [0, 13, 1, 2, 7, 9, 21] has cost 41.


Before backtrack at level 17
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]

After backtrack at level 17
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 21]


Invert decision for 21 at level 16


New level: 17
 pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Solution : [0, 13, 1, 2, 7, 9] has cost 31.


Decide in level 17 among pending : [6, 14, 17, 18, 20, 16, 4, 3, 11, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 17

After decision at level 17
 pending : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 4]


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 4]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, 32), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 3, 6, 11, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 4]


Solution : [0, 13, 1, 2, 7, 9, 4] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 13, 1, 2, 7, 9, 4]

After backtrack at level 18
 pending : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 4]


Invert decision for 4 at level 17


New level: 18
 pending : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Solution : [0, 13, 1, 2, 7, 9] has cost 31.


Decide in level 18 among pending : [6, 14, 17, 18, 20, 16, 3, 11, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 3 with phase True at level 18

After decision at level 18
 pending : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 3]


New level: 19
 pending : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 3]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 32), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 6, 11, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 3]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 3]


Solution : [0, 13, 1, 2, 7, 9, 3] has cost 44.


Before backtrack at level 19
 pending : []
 solution : [0, 13, 1, 2, 7, 9, 3]

After backtrack at level 19
 pending : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 3]


Invert decision for 3 at level 18


New level: 19
 pending : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 11, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Solution : [0, 13, 1, 2, 7, 9] has cost 31.


Decide in level 19 among pending : [6, 14, 17, 18, 20, 16, 11, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 19

After decision at level 19
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 11]


New level: 20
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 11]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 11]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 6, 14, 16, 17, 18, 20, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 11]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 7, 9, 11]


Solution : [0, 13, 1, 2, 7, 9, 11] has cost 37.


Before backtrack at level 20
 pending : []
 solution : [0, 13, 1, 2, 7, 9, 11]

After backtrack at level 20
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 11]


Invert decision for 11 at level 19


New level: 20
 pending : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [6, 14, 17, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Solution : [0, 13, 1, 2, 7, 9] has cost 31.


Decide in level 20 among pending : [6, 14, 17, 18, 20, 16, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 17 with phase True at level 20

After decision at level 20
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 17]


New level: 21
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 17]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 16), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 16), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 16, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 17]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 17]


Solution : [0, 13, 1, 2, 7, 9, 17] has cost 65.


Before backtrack at level 21
 pending : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 17]

After backtrack at level 21
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9, 17]


Invert decision for 17 at level 20


New level: 21
 pending : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before reduction : 
 pending  : [6, 14, 18, 20, 16, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

Essensial at level 21 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 18, 20, 31}

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 16]


Before reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 16]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 16]


Solution : [0, 13, 1, 2, 7, 9, 16] has cost 65.


Before backtrack at level 21
 pending : [6, 14]
 solution : [0, 13, 1, 2, 7, 9, 16]

After backtrack at level 21
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]


Before backtrack at level 20
 pending : [6, 14, 16, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 7, 9]

After backtrack at level 20
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 7, 9]


Before backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17]
 solution : [0, 13, 1, 2, 7, 9]

After backtrack at level 19
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 7, 9]


Before backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11]
 solution : [0, 13, 1, 2, 7, 9]

After backtrack at level 18
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3]
 solution : [0, 13, 1, 2, 7, 9]


Before backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3]
 solution : [0, 13, 1, 2, 7, 9]

After backtrack at level 17
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4]
 solution : [0, 13, 1, 2, 7, 9]


Before backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4]
 solution : [0, 13, 1, 2, 7, 9]

After backtrack at level 16
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21]
 solution : [0, 13, 1, 2, 7]


Before backtrack at level 15
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21]
 solution : [0, 13, 1, 2, 7]

After backtrack at level 15
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10]
 solution : [0, 13, 1, 2, 7]


Before backtrack at level 14
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10]
 solution : [0, 13, 1, 2, 7]

After backtrack at level 14
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29]
 solution : [0, 13, 1, 2, 7]


Before backtrack at level 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29]
 solution : [0, 13, 1, 2, 7]

After backtrack at level 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 13 among pending : [6, 14, 16, 18, 20, 31, 33, 17, 11, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2, 11]


New level: 14
 pending : [6, 14, 16, 18, 20, 31, 33, 17, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2, 11]


Before reduction : 
 pending  : [6, 14, 16, 18, 20, 31, 33, 17, 3, 4, 9, 27, 28, 21, 10, 29, 15, 12]
 solution : [0, 13, 1, 2, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 3, 4, 6, 14, 15, 31}

After reduction : 
 pending  : [16, 18, 20, 17, 9, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 9, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 0), (15, 0), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 9, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]


Solution : [0, 13, 1, 2, 11] has cost 26.


Decide in level 14 among pending : [16, 18, 20, 17, 9, 27, 28, 21, 10, 29, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11, 9]


New level: 15
 pending : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11, 9]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 12, 16, 17, 18, 20, 21, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 9]


Solution : [0, 13, 1, 2, 11, 9] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 13, 1, 2, 11, 9]

After backtrack at level 15
 pending : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]
 solution : [0, 13, 1, 2, 11]


Solution : [0, 13, 1, 2, 11] has cost 26.


Decide in level 15 among pending : [16, 18, 20, 17, 27, 28, 21, 10, 29, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 15

After decision at level 15
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11, 10]


New level: 16
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11, 10]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 32), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {12, 16, 17, 18, 20, 21, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 10]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 10]


Solution : [0, 13, 1, 2, 11, 10] has cost 39.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 11, 10]

After backtrack at level 16
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11, 10]


Invert decision for 10 at level 15


New level: 16
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 29, 12]
 solution : [0, 13, 1, 2, 11]

Essensial at level 16 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {16, 17, 18, 20, 21, 27, 28, 29}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 12]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 11, 12]


Solution : [0, 13, 1, 2, 11, 12] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 11, 12]

After backtrack at level 16
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29]
 solution : [0, 13, 1, 2, 11]


Before backtrack at level 15
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29]
 solution : [0, 13, 1, 2, 11]

After backtrack at level 15
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10]
 solution : [0, 13, 1, 2, 11]


Before backtrack at level 14
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10]
 solution : [0, 13, 1, 2, 11]

After backtrack at level 14
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 14 among pending : [12, 16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2, 12]


New level: 15
 pending : [16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 27, 28, 21, 29, 10, 6, 14, 31, 33, 3, 4, 15, 9]
 solution : [0, 13, 1, 2, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : {9, 10, 27, 28}

After reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 3, 4, 15]
 solution : [0, 13, 1, 2, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 3, 4, 15]
 solution : [0, 13, 1, 2, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 3, 4, 15]
 solution : [0, 13, 1, 2, 12]


Solution : [0, 13, 1, 2, 12] has cost 26.


Decide in level 15 among pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 3, 4, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12, 3]


New level: 16
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12, 3]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 4, 6, 14, 15, 16, 17, 18, 20, 21, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 3]


Solution : [0, 13, 1, 2, 12, 3] has cost 39.


Before backtrack at level 16
 pending : []
 solution : [0, 13, 1, 2, 12, 3]

After backtrack at level 16
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]
 solution : [0, 13, 1, 2, 12]


Solution : [0, 13, 1, 2, 12] has cost 26.


Decide in level 16 among pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 4, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12, 4]


New level: 17
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12, 4]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 6, 14, 15, 16, 17, 18, 20, 21, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 12, 4]


Solution : [0, 13, 1, 2, 12, 4] has cost 32.


Before backtrack at level 17
 pending : []
 solution : [0, 13, 1, 2, 12, 4]

After backtrack at level 17
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33, 15]
 solution : [0, 13, 1, 2, 12]

Essensial at level 17 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Before reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Solution : [0, 13, 1, 2, 12, 15] has cost 28.


Decide in level 17 among pending : [16, 18, 20, 17, 21, 29, 6, 14, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]


New level: 18
 pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]


Before reduction : 
 pending  : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]


Solution : [0, 13, 1, 2, 12, 15, 21] has cost 38.


Before backtrack at level 18
 pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]

After backtrack at level 18
 pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Before reduction : 
 pending  : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 18, 20, 17, 29, 6, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Solution : [0, 13, 1, 2, 12, 15] has cost 28.


Decide in level 18 among pending : [16, 18, 20, 17, 29, 6, 14, 31, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 6 with phase True at level 18

After decision at level 18
 pending : [16, 18, 20, 17, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 6]


New level: 19
 pending : [16, 18, 20, 17, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 6]


Before reduction : 
 pending  : [16, 18, 20, 17, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 14, 18, 20, 29, 31}

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 6]


Before reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 6]


Solution : [0, 13, 1, 2, 12, 15, 6] has cost 37.


Before backtrack at level 19
 pending : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 6]

After backtrack at level 19
 pending : [16, 17, 18, 20, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15, 6]


Invert decision for 6 at level 18


New level: 19
 pending : [16, 17, 18, 20, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Before reduction : 
 pending  : [16, 17, 18, 20, 29, 14, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]

Essensial at level 19 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 18, 20, 29, 31}

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 14]


Before reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 14]


Solution : [0, 13, 1, 2, 12, 15, 14] has cost 37.


Before backtrack at level 19
 pending : [16, 17]
 solution : [0, 13, 1, 2, 12, 15, 14]

After backtrack at level 19
 pending : [16, 17, 14, 18, 20, 29, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]


Before backtrack at level 18
 pending : [16, 17, 14, 18, 20, 29, 31, 33]
 solution : [0, 13, 1, 2, 12, 15]

After backtrack at level 18
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6]
 solution : [0, 13, 1, 2, 12, 15]


Before backtrack at level 17
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6]
 solution : [0, 13, 1, 2, 12, 15]

After backtrack at level 17
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21]
 solution : [0, 13, 1, 2, 12]


Before backtrack at level 16
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21]
 solution : [0, 13, 1, 2, 12]

After backtrack at level 16
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4]
 solution : [0, 13, 1, 2, 12]


Before backtrack at level 15
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4]
 solution : [0, 13, 1, 2, 12]

After backtrack at level 15
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 15 among pending : [16, 17, 14, 18, 20, 29, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 29 with phase True at level 15

After decision at level 15
 pending : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29]


New level: 16
 pending : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29]


Before reduction : 
 pending  : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, 128), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29]


Solution : [0, 13, 1, 2, 29] has cost 30.


Decide in level 16 among pending : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 4, 27, 28, 10, 9, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29, 4]


New level: 17
 pending : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29, 4]


Before reduction : 
 pending  : [16, 17, 14, 18, 20, 31, 33, 6, 15, 21, 27, 28, 10, 9, 3]
 solution : [0, 13, 1, 2, 29, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 3, 6, 14, 15, 21, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 10, 9]
 solution : [0, 13, 1, 2, 29, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 10, 9]
 solution : [0, 13, 1, 2, 29, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 10, 9]
 solution : [0, 13, 1, 2, 29, 4]


Solution : [0, 13, 1, 2, 29, 4] has cost 36.


Before backtrack at level 17
 pending : [16, 17, 18, 20, 27, 28, 10, 9]
 solution : [0, 13, 1, 2, 29, 4]

After backtrack at level 17
 pending : [16, 17, 18, 20, 27, 28, 10, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [16, 17, 18, 20, 27, 28, 10, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 10, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 4), (19, -1), (20, 4), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 10, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29]


Solution : [0, 13, 1, 2, 29] has cost 30.


Decide in level 17 among pending : [16, 17, 18, 20, 27, 28, 10, 9, 14, 31, 33, 6, 15, 21, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 17

After decision at level 17
 pending : [16, 17, 18, 20, 27, 28, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]


New level: 18
 pending : [16, 17, 18, 20, 27, 28, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 27, 28, 9, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 96), (17, 96), (18, 32), (19, -1), (20, 18), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 8), (28, 8), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : {9, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]


Solution : [0, 13, 1, 2, 29, 10] has cost 43.


Before backtrack at level 18
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 10]

After backtrack at level 18
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 27, 28, 9]
 solution : [0, 13, 1, 2, 29, 10]


Invert decision for 10 at level 17


New level: 18
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 27, 28, 9]
 solution : [0, 13, 1, 2, 29]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 27, 28, 9]
 solution : [0, 13, 1, 2, 29]

Essensial at level 18 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : {27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 9]


Solution : [0, 13, 1, 2, 29, 9] has cost 36.


Before backtrack at level 18
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3]
 solution : [0, 13, 1, 2, 29, 9]

After backtrack at level 18
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28]
 solution : [0, 13, 1, 2, 29]


Before backtrack at level 17
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28]
 solution : [0, 13, 1, 2, 29]

After backtrack at level 17
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 29]


Before backtrack at level 16
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 29]

After backtrack at level 16
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 29]


Invert decision for 29 at level 15


New level: 16
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 18), (17, 18), (18, 4), (19, -1), (20, 4), (21, 16), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 16 among pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 3, 9, 27, 28, 10, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 3 with phase True at level 16

After decision at level 16
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 3]


New level: 17
 pending : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 3]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6, 15, 21, 9, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 4, 6, 14, 15, 31}

After reduction : 
 pending  : [16, 17, 18, 20, 21, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 3]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 0), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 21, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 3]


Solution : [0, 13, 1, 2, 3] has cost 33.


Before backtrack at level 17
 pending : [16, 17, 18, 20, 21, 9, 27, 28, 10]
 solution : [0, 13, 1, 2, 3]

After backtrack at level 17
 pending : [16, 17, 18, 20, 21, 9, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 3]


Invert decision for 3 at level 16


New level: 17
 pending : [16, 17, 18, 20, 21, 9, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 9, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 26), (17, 26), (18, 16), (19, -1), (20, 16), (21, 4), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 21, 9, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2]


Solution : [0, 13, 1, 2] has cost 20.


Decide in level 17 among pending : [16, 17, 18, 20, 21, 9, 27, 28, 10, 14, 31, 33, 6, 15, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 9 with phase True at level 17

After decision at level 17
 pending : [16, 17, 18, 20, 21, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]


New level: 18
 pending : [16, 17, 18, 20, 21, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 27, 28, 10, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 112), (17, 112), (18, 52), (19, -1), (20, 52), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 32), (28, 32), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : {10, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15, 4]
 solution : [0, 13, 1, 2, 9]


Solution : [0, 13, 1, 2, 9] has cost 26.


Decide in level 18 among pending : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 4 with phase True at level 18

After decision at level 18
 pending : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9, 4]


New level: 19
 pending : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 6, 14, 15, 16, 17, 18, 20, 21, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 9, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 2, 9, 4]


Solution : [0, 13, 1, 2, 9, 4] has cost 32.


Before backtrack at level 19
 pending : []
 solution : [0, 13, 1, 2, 9, 4]

After backtrack at level 19
 pending : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9, 4]


Invert decision for 4 at level 18


New level: 19
 pending : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6, 15]
 solution : [0, 13, 1, 2, 9]

Essensial at level 19 : {15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]


Before reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 21, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]


Solution : [0, 13, 1, 2, 9, 15] has cost 28.


Decide in level 19 among pending : [16, 17, 18, 20, 21, 14, 31, 33, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 21 with phase True at level 19

After decision at level 19
 pending : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]


New level: 20
 pending : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 20 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]


Solution : [0, 13, 1, 2, 9, 15, 21] has cost 38.


Before backtrack at level 20
 pending : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]

After backtrack at level 20
 pending : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 21]


Invert decision for 21 at level 19


New level: 20
 pending : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]


Before reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 19), (17, 19), (18, 6), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 14, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]


Solution : [0, 13, 1, 2, 9, 15] has cost 28.


Decide in level 20 among pending : [16, 17, 18, 20, 14, 31, 33, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 14 with phase True at level 20

After decision at level 20
 pending : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 14]


New level: 21
 pending : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 14]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 14]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 32), (15, -1), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 6, 18, 20, 31}

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 14]


Before reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 14]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 14]


Solution : [0, 13, 1, 2, 9, 15, 14] has cost 37.


Before backtrack at level 21
 pending : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 14]

After backtrack at level 21
 pending : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15, 14]


Invert decision for 14 at level 20


New level: 21
 pending : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 6]
 solution : [0, 13, 1, 2, 9, 15]

Essensial at level 21 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 18, 20, 31}

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 6]


Before reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 6]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 6]


Solution : [0, 13, 1, 2, 9, 15, 6] has cost 37.


Before backtrack at level 21
 pending : [16, 17]
 solution : [0, 13, 1, 2, 9, 15, 6]

After backtrack at level 21
 pending : [16, 17, 6, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 9, 15]


Before backtrack at level 20
 pending : [16, 17, 6, 18, 20, 31, 33]
 solution : [0, 13, 1, 2, 9, 15]

After backtrack at level 20
 pending : [16, 17, 6, 18, 20, 31, 33, 14]
 solution : [0, 13, 1, 2, 9, 15]


Before backtrack at level 19
 pending : [16, 17, 6, 18, 20, 31, 33, 14]
 solution : [0, 13, 1, 2, 9, 15]

After backtrack at level 19
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21]
 solution : [0, 13, 1, 2, 9]


Before backtrack at level 18
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21]
 solution : [0, 13, 1, 2, 9]

After backtrack at level 18
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 27, 28, 10, 4]
 solution : [0, 13, 1, 2, 9]


Invert decision for 9 at level 17


New level: 18
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 27, 28, 10, 4]
 solution : [0, 13, 1, 2]


Before reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 27, 28, 10, 4]
 solution : [0, 13, 1, 2]

Essensial at level 18 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : {27, 28}

After reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4]
 solution : [0, 13, 1, 2, 10]


Before reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4]
 solution : [0, 13, 1, 2, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 0), (28, 0), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4]
 solution : [0, 13, 1, 2, 10]


Solution : [0, 13, 1, 2, 10] has cost 33.


Before backtrack at level 18
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4]
 solution : [0, 13, 1, 2, 10]

After backtrack at level 18
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28]
 solution : [0, 13, 1, 2]


Before backtrack at level 17
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28]
 solution : [0, 13, 1, 2]

After backtrack at level 17
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9]
 solution : [0, 13, 1, 2]


Before backtrack at level 16
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9]
 solution : [0, 13, 1, 2]

After backtrack at level 16
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3]
 solution : [0, 13, 1, 2]


Before backtrack at level 15
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3]
 solution : [0, 13, 1, 2]

After backtrack at level 15
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29]
 solution : [0, 13, 1, 2]


Before backtrack at level 14
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29]
 solution : [0, 13, 1, 2]

After backtrack at level 14
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12]
 solution : [0, 13, 1, 2]


Before backtrack at level 13
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12]
 solution : [0, 13, 1, 2]

After backtrack at level 13
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11]
 solution : [0, 13, 1, 2]


Before backtrack at level 12
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11]
 solution : [0, 13, 1, 2]

After backtrack at level 12
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7]
 solution : [0, 13, 1, 2]


Before backtrack at level 11
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7]
 solution : [0, 13, 1, 2]

After backtrack at level 11
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30]
 solution : [0, 13, 1, 2]


Before backtrack at level 10
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30]
 solution : [0, 13, 1, 2]

After backtrack at level 10
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22]
 solution : [0, 13, 1, 2]


Before backtrack at level 9
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22]
 solution : [0, 13, 1, 2]

After backtrack at level 9
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26]
 solution : [0, 13, 1, 2]


Before backtrack at level 8
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26]
 solution : [0, 13, 1, 2]

After backtrack at level 8
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19]
 solution : [0, 13, 1, 2]


Before backtrack at level 7
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19]
 solution : [0, 13, 1, 2]

After backtrack at level 7
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24]
 solution : [0, 13, 1, 2]


Before backtrack at level 6
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24]
 solution : [0, 13, 1, 2]

After backtrack at level 6
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25]
 solution : [0, 13, 1, 2]


Before backtrack at level 5
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25]
 solution : [0, 13, 1, 2]

After backtrack at level 5
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23]
 solution : [0, 13, 1, 2]


Before backtrack at level 4
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23]
 solution : [0, 13, 1, 2]

After backtrack at level 4
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5]
 solution : [0, 13, 1, 2]


Before backtrack at level 3
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5]
 solution : [0, 13, 1, 2]

After backtrack at level 3
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32, 8]
 solution : [0, 13, 1, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32, 8]
 solution : [0, 13, 1]


Before reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32, 8]
 solution : [0, 13, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 64), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, 64), (16, 22), (17, 22), (18, 10), (19, -1), (20, 12), (21, 64), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32, 8]
 solution : [0, 13, 1]


Solution : [0, 13, 1] has cost 10.


Decide in level 3 among pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8]


New level: 4
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8]


Before reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, 576), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 48), (17, 24), (18, 26), (19, 16), (20, 48), (21, 16), (22, 148), (23, 56), (24, 48), (25, 24), (26, 76), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8]


Solution : [0, 13, 1, 8] has cost 31.


Decide in level 4 among pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 4, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 48), (17, 24), (18, 26), (19, 16), (20, 48), (21, 16), (22, 148), (23, 56), (24, 48), (25, 24), (26, 76), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8, 4]


New level: 5
 pending : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8, 4]


Before reduction : 
 pending  : [16, 17, 6, 18, 20, 31, 33, 14, 15, 21, 10, 27, 28, 9, 3, 29, 12, 11, 7, 30, 22, 26, 19, 24, 25, 23, 5, 32]
 solution : [0, 13, 1, 8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 48), (17, 24), (18, 26), (19, 16), (20, 48), (21, 16), (22, 148), (23, 56), (24, 48), (25, 24), (26, 76), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, 512), (10, 288), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 12), (17, 6), (18, 8), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 48), (25, 24), (26, 19), (27, 128), (28, 64), (29, 128), (30, 256), (31, 8), (32, 32), (33, 2)]

Covered at level 5 : {3, 5, 6, 7, 11, 14, 15}

After reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32]
 solution : [0, 13, 1, 8, 4]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32]
 solution : [0, 13, 1, 8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, 512), (10, 288), (11, 0), (12, 128), (13, -1), (14, 0), (15, 0), (16, 12), (17, 6), (18, 8), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 48), (25, 24), (26, 19), (27, 128), (28, 64), (29, 128), (30, 256), (31, 8), (32, 32), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 512), (10, 288), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 12), (17, 6), (18, 8), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 48), (25, 24), (26, 19), (27, 128), (28, 64), (29, 128), (30, 256), (31, 8), (32, 32), (33, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32]
 solution : [0, 13, 1, 8, 4]


Solution : [0, 13, 1, 8, 4] has cost 37.


Before backtrack at level 5
 pending : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32]
 solution : [0, 13, 1, 8, 4]

After backtrack at level 5
 pending : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 10, 27, 28, 9, 29, 12, 30, 22, 26, 19, 24, 25, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8]

Essensial at level 5 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 512), (10, 288), (11, -1), (12, 128), (13, -1), (14, -1), (15, -1), (16, 12), (17, 6), (18, 8), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 48), (25, 24), (26, 19), (27, 128), (28, 64), (29, 128), (30, 256), (31, 8), (32, 32), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 10), (17, 5), (18, 5), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 0), (25, 0), (26, 19), (27, 0), (28, 0), (29, 4), (30, 8), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : {10, 12, 24, 25, 27, 28}

After reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 10), (17, 5), (18, 5), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, 0), (25, 0), (26, 19), (27, 0), (28, 0), (29, 4), (30, 8), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 10), (17, 5), (18, 5), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, -1), (25, -1), (26, 19), (27, -1), (28, -1), (29, 4), (30, 8), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8, 9]


Solution : [0, 13, 1, 8, 9] has cost 37.


Before backtrack at level 5
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5]
 solution : [0, 13, 1, 8, 9]

After backtrack at level 5
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25]
 solution : [0, 13, 1, 8]


Before backtrack at level 4
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25]
 solution : [0, 13, 1, 8]

After backtrack at level 4
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 10), (17, 5), (18, 5), (19, 4), (20, 12), (21, 4), (22, 37), (23, 14), (24, -1), (25, -1), (26, 19), (27, -1), (28, -1), (29, 4), (30, 8), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1]


Solution : [0, 13, 1] has cost 10.


Decide in level 4 among pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 22, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Decide 22 with phase True at level 4

After decision at level 4
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]


New level: 5
 pending : [16, 17, 18, 20, 31, 33, 21, 29, 30, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]


Before reduction : 
 pending  : [16, 17, 18, 20, 31, 33, 21, 29, 30, 26, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, 552), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 256), (10, 136), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, 5), (24, 20), (25, 10), (26, 0), (27, 64), (28, 32), (29, 2), (30, 4), (31, 256), (32, 64), (33, 32)]

Covered at level 5 : {16, 17, 18, 20, 26}

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 256), (10, 136), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, 0), (17, 0), (18, 0), (19, 5), (20, 0), (21, 2), (22, -1), (23, 5), (24, 20), (25, 10), (26, 0), (27, 64), (28, 32), (29, 2), (30, 4), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 256), (10, 136), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, 5), (24, 20), (25, 10), (26, -1), (27, 64), (28, 32), (29, 2), (30, 4), (31, 256), (32, 64), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]


Solution : [0, 13, 1, 22] has cost 44.


Before backtrack at level 5
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4]
 solution : [0, 13, 1, 22]

After backtrack at level 5
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 22]


Invert decision for 22 at level 4


New level: 5
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 256), (10, 136), (11, 128), (12, 64), (13, -1), (14, 64), (15, 64), (16, -1), (17, -1), (18, -1), (19, 5), (20, -1), (21, 2), (22, -1), (23, 5), (24, 20), (25, 10), (26, -1), (27, 64), (28, 32), (29, 2), (30, 4), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, -1), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1]


Solution : [0, 13, 1] has cost 10.


Decide in level 5 among pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 9, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, -1), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


New level: 6
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 10, 27, 28, 12, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, 512), (10, 320), (11, 128), (12, 128), (13, -1), (14, 64), (15, 64), (16, 224), (17, 130), (18, 64), (19, 176), (20, 112), (21, 64), (22, -1), (23, 420), (24, 384), (25, 192), (26, 280), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, 0), (28, 0), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Covered at level 6 : {10, 27, 28, 12}

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, 0), (11, 128), (12, 0), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, 0), (28, 0), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 4, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


Solution : [0, 13, 1, 9] has cost 16.


Decide in level 6 among pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 4, 16, 17, 18, 20, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Decide 4 with phase True at level 6

After decision at level 6
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 4]


New level: 7
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 4]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {3, 5, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 4]


Solution : [0, 13, 1, 9, 4] has cost 22.


Before backtrack at level 7
 pending : []
 solution : [0, 13, 1, 9, 4]

After backtrack at level 7
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 4]


Invert decision for 4 at level 6


New level: 7
 pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Covered at level 7 : set()

After reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9]


Solution : [0, 13, 1, 9] has cost 16.


Decide in level 7 among pending : [31, 33, 21, 29, 30, 19, 23, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [31, 33, 21, 29, 30, 19, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]


New level: 8
 pending : [31, 33, 21, 29, 30, 19, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]


Before reduction : 
 pending  : [31, 33, 21, 29, 30, 19, 32, 6, 14, 15, 3, 11, 7, 5, 24, 25, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, 393), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 12), (17, 6), (18, 3), (19, 0), (20, 8), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 16), (27, -1), (28, -1), (29, 2), (30, 4), (31, 64), (32, 8), (33, 16)]

Covered at level 8 : {24, 25, 19, 21}

After reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]


Before reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 12), (17, 6), (18, 3), (19, 0), (20, 8), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 16), (27, -1), (28, -1), (29, 2), (30, 4), (31, 64), (32, 8), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 12), (17, 6), (18, 3), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, -1), (28, -1), (29, 2), (30, 4), (31, 64), (32, 8), (33, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]


Solution : [0, 13, 1, 9, 23] has cost 50.


Before backtrack at level 8
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26]
 solution : [0, 13, 1, 9, 23]

After backtrack at level 8
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]


Before reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 12), (17, 6), (18, 3), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 16), (27, -1), (28, -1), (29, 2), (30, 4), (31, 64), (32, 8), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, -1), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]


Solution : [0, 13, 1, 9] has cost 16.


Decide in level 8 among pending : [31, 33, 29, 30, 32, 6, 14, 15, 3, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, -1), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9, 3]


New level: 9
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9, 3]


Before reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, -1), (5, 256), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, 64), (16, 44), (17, 22), (18, 10), (19, 162), (20, 24), (21, 64), (22, -1), (23, -1), (24, 12), (25, 6), (26, 53), (27, -1), (28, -1), (29, 16), (30, 32), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {5, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 3]


Solution : [0, 13, 1, 9, 3] has cost 29.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 9, 3]

After backtrack at level 9
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]


Before reduction : 
 pending  : [31, 33, 29, 30, 32, 6, 14, 15, 11, 7, 5, 16, 17, 18, 20, 26, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]

Essensial at level 9 : {26, 5, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 26, 5, 6]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 26, 5, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 9, 26, 5, 6]


Solution : [0, 13, 1, 9, 26, 5, 6] has cost 64.


Before backtrack at level 9
 pending : []
 solution : [0, 13, 1, 9, 26, 5, 6]

After backtrack at level 9
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]


Before backtrack at level 8
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25]
 solution : [0, 13, 1, 9]

After backtrack at level 8
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3]
 solution : [0, 13, 1, 9]


Before backtrack at level 7
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3]
 solution : [0, 13, 1, 9]

After backtrack at level 7
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23]
 solution : [0, 13, 1, 9]


Before backtrack at level 6
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23]
 solution : [0, 13, 1, 9]

After backtrack at level 6
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 10, 27, 28, 12, 4]
 solution : [0, 13, 1, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 10, 27, 28, 12, 4]
 solution : [0, 13, 1]


Before reduction : 
 pending  : [6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 10, 27, 28, 12, 4]
 solution : [0, 13, 1]

Essensial at level 6 : {10, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {3, 5, 6, 7, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 13, 1, 10, 4]


Before reduction : 
 pending  : []
 solution : [0, 13, 1, 10, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 0), (6, 0), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 13, 1, 10, 4]


Solution : [0, 13, 1, 10, 4] has cost 29.


Before backtrack at level 6
 pending : []
 solution : [0, 13, 1, 10, 4]

After backtrack at level 6
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12]
 solution : [0, 13, 1]


Before backtrack at level 5
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12]
 solution : [0, 13, 1]

After backtrack at level 5
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9]
 solution : [0, 13, 1]


Before backtrack at level 4
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9]
 solution : [0, 13, 1]

After backtrack at level 4
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22]
 solution : [0, 13, 1]


Before backtrack at level 3
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22]
 solution : [0, 13, 1]

After backtrack at level 3
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8]
 solution : [0, 13, 1]


Before backtrack at level 2
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8]
 solution : [0, 13, 1]

After backtrack at level 2
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13]


Before reduction : 
 pending  : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 560), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 2 : set()

After reduction : 
 pending  : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13]


Solution : [0, 13] has cost 7.


Decide in level 2 among pending : [10, 4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]

Coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 560), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

Decide 10 with phase True at level 2

After decision at level 2
 pending : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]


New level: 3
 pending : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 28, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, 768), (11, 512), (12, 512), (13, -1), (14, 256), (15, 512), (16, 448), (17, 520), (18, 256), (19, 352), (20, 224), (21, 128), (22, 640), (23, 456), (24, 384), (25, 384), (26, 560), (27, 128), (28, 128), (29, 256), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, 0), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 3 : {28}

After reduction : 
 pending  : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, 0), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 3 among pending : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 3, 23, 27, 12, 9, 22, 8, 2]

Coverage : [(0, -1), (1, -1), (2, 288), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 3 with phase True at level 3

After decision at level 3
 pending : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]


New level: 4
 pending : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]


Before reduction : 
 pending  : [4, 6, 5, 26, 31, 33, 29, 30, 32, 14, 15, 11, 7, 16, 17, 18, 20, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, 0), (6, 0), (7, 1), (8, 576), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 128), (16, 0), (17, 20), (18, 9), (19, 5), (20, 0), (21, 2), (22, 22), (23, 10), (24, 10), (25, 5), (26, 0), (27, 16), (28, -1), (29, 0), (30, 16), (31, 32), (32, 16), (33, 0)]

Covered at level 4 : {33, 5, 6, 16, 20, 26, 29}

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]


Before reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, 0), (6, 0), (7, 1), (8, 576), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 128), (16, 0), (17, 20), (18, 9), (19, 5), (20, 0), (21, 2), (22, 22), (23, 10), (24, 10), (25, 5), (26, 0), (27, 16), (28, -1), (29, 0), (30, 16), (31, 32), (32, 16), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 576), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 128), (16, -1), (17, 20), (18, 9), (19, 5), (20, -1), (21, 2), (22, 22), (23, 10), (24, 10), (25, 5), (26, -1), (27, 16), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]


Solution : [0, 13, 10, 3] has cost 33.


Before backtrack at level 4
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2]
 solution : [0, 13, 10, 3]

After backtrack at level 4
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 3]


Invert decision for 3 at level 3


New level: 4
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, -1), (4, 128), (5, -1), (6, -1), (7, 1), (8, 576), (9, 64), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, 128), (16, -1), (17, 20), (18, 9), (19, 5), (20, -1), (21, 2), (22, 22), (23, 10), (24, 10), (25, 5), (26, -1), (27, 16), (28, -1), (29, -1), (30, 16), (31, 16), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 4 among pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 8, 2, 6, 5, 26, 33, 29, 16, 20]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 8 with phase True at level 4

After decision at level 4
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]


New level: 5
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]


Before reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 25, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 48), (17, 40), (18, 40), (19, 16), (20, 48), (21, 16), (22, 73), (23, 28), (24, 6), (25, 0), (26, 68), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : {25}

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]


Before reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 48), (17, 40), (18, 40), (19, 16), (20, 48), (21, 16), (22, 73), (23, 28), (24, 6), (25, 0), (26, 68), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 48), (17, 40), (18, 40), (19, 16), (20, 48), (21, 16), (22, 73), (23, 28), (24, 6), (25, -1), (26, 68), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]


Solution : [0, 13, 10, 8] has cost 41.


Before backtrack at level 5
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20]
 solution : [0, 13, 10, 8]

After backtrack at level 5
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 8]


Invert decision for 8 at level 4


New level: 5
 pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 48), (17, 40), (18, 40), (19, 16), (20, 48), (21, 16), (22, 73), (23, 28), (24, 6), (25, -1), (26, 68), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 5 among pending : [4, 31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]


New level: 6
 pending : [31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]


Before reduction : 
 pending  : [31, 30, 32, 14, 15, 11, 7, 17, 18, 21, 19, 24, 23, 27, 12, 9, 22, 2, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 64), (6, 64), (7, 512), (8, -1), (9, 0), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 5), (17, 176), (18, 80), (19, 320), (20, 6), (21, 128), (22, 0), (23, 8), (24, 0), (25, 48), (26, 25), (27, 0), (28, -1), (29, 8), (30, 0), (31, 0), (32, 0), (33, 16)]

Covered at level 6 : {32, 2, 9, 22, 24, 27, 30, 31}

After reduction : 
 pending  : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]


Before reduction : 
 pending  : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, 64), (6, 64), (7, 512), (8, -1), (9, 0), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 5), (17, 176), (18, 80), (19, 320), (20, 6), (21, 128), (22, 0), (23, 8), (24, 0), (25, 48), (26, 25), (27, 0), (28, -1), (29, 8), (30, 0), (31, 0), (32, 0), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 64), (6, 64), (7, 512), (8, -1), (9, -1), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 5), (17, 176), (18, 80), (19, 320), (20, 6), (21, 128), (22, -1), (23, 8), (24, -1), (25, 48), (26, 25), (27, -1), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 16)]

Covered at level 6 : set()

After reduction : 
 pending  : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]


Solution : [0, 13, 10, 4] has cost 26.


Before backtrack at level 6
 pending : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25]
 solution : [0, 13, 10, 4]

After backtrack at level 6
 pending : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 64), (6, 64), (7, 512), (8, -1), (9, -1), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 5), (17, 176), (18, 80), (19, 320), (20, 6), (21, 128), (22, -1), (23, 8), (24, -1), (25, 48), (26, 25), (27, -1), (28, -1), (29, 8), (30, -1), (31, -1), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 6 among pending : [14, 15, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 15 with phase True at level 6

After decision at level 6
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]


New level: 7
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, 512), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]


Solution : [0, 13, 10, 15] has cost 22.


Decide in level 7 among pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 5, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]


New level: 8
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, 1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 6), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]


Solution : [0, 13, 10, 15, 5] has cost 27.


Before backtrack at level 8
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]

After backtrack at level 8
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, 1), (8, -1), (9, 64), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 6), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15]


Solution : [0, 13, 10, 15] has cost 22.


Decide in level 8 among pending : [14, 11, 7, 17, 18, 21, 19, 23, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]


New level: 9
 pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 25, 31, 30, 32, 24, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 264), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 96), (17, 38), (18, 10), (19, 2), (20, 34), (21, 2), (22, 64), (23, -1), (24, 0), (25, 0), (26, 160), (27, 8), (28, -1), (29, 8), (30, 32), (31, 64), (32, 16), (33, 32)]

Covered at level 9 : {24, 25}

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 264), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 96), (17, 38), (18, 10), (19, 2), (20, 34), (21, 2), (22, 64), (23, -1), (24, 0), (25, 0), (26, 160), (27, 8), (28, -1), (29, 8), (30, 32), (31, 64), (32, 16), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 264), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 96), (17, 22), (18, 10), (19, 2), (20, 34), (21, 2), (22, 64), (23, -1), (24, -1), (25, -1), (26, 160), (27, 8), (28, -1), (29, 8), (30, 32), (31, 64), (32, 16), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]


Solution : [0, 13, 10, 15, 23] has cost 56.


Before backtrack at level 9
 pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2]
 solution : [0, 13, 10, 15, 23]

After backtrack at level 9
 pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 264), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 96), (17, 22), (18, 10), (19, 2), (20, 34), (21, 2), (22, 64), (23, -1), (24, -1), (25, -1), (26, 160), (27, 8), (28, -1), (29, 8), (30, 32), (31, 64), (32, 16), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 296), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15]


Solution : [0, 13, 10, 15] has cost 22.


Decide in level 9 among pending : [14, 11, 7, 17, 18, 21, 19, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 296), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 19 with phase True at level 9

After decision at level 9
 pending : [14, 11, 7, 17, 18, 21, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15, 19]


New level: 10
 pending : [14, 11, 7, 17, 18, 21, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15, 19]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 21, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 25, 24]
 solution : [0, 13, 10, 15, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, 296), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 64), (17, 12), (18, 6), (19, -1), (20, 32), (21, 0), (22, 201), (23, -1), (24, 10), (25, 0), (26, 258), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 32)]

Covered at level 10 : {25, 21}

After reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24]
 solution : [0, 13, 10, 15, 19]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24]
 solution : [0, 13, 10, 15, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 64), (17, 12), (18, 6), (19, -1), (20, 32), (21, 0), (22, 201), (23, -1), (24, 10), (25, 0), (26, 258), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 64), (17, 12), (18, 6), (19, -1), (20, 32), (21, -1), (22, 201), (23, -1), (24, 10), (25, -1), (26, 258), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24]
 solution : [0, 13, 10, 15, 19]


Solution : [0, 13, 10, 15, 19] has cost 56.


Before backtrack at level 10
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24]
 solution : [0, 13, 10, 15, 19]

After backtrack at level 10
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24, 21, 25]
 solution : [0, 13, 10, 15, 19]


Invert decision for 19 at level 9


New level: 10
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24, 21, 25]
 solution : [0, 13, 10, 15]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24, 21, 25]
 solution : [0, 13, 10, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 64), (17, 12), (18, 6), (19, -1), (20, 32), (21, -1), (22, 201), (23, -1), (24, 10), (25, -1), (26, 258), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, -1), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24, 21, 25]
 solution : [0, 13, 10, 15]


Solution : [0, 13, 10, 15] has cost 22.


Decide in level 10 among pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 2, 24, 21, 25]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, -1), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 2 with phase True at level 10

After decision at level 10
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]


New level: 11
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 32, 27, 9, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, -1), (6, 256), (7, 256), (8, -1), (9, 128), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 224), (17, 44), (18, 20), (19, -1), (20, 100), (21, 128), (22, 209), (23, -1), (24, 96), (25, 6), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 4), (8, -1), (9, 0), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, -1), (20, 24), (21, 128), (22, 26), (23, -1), (24, 6), (25, 6), (26, 26), (27, 0), (28, -1), (29, 8), (30, 8), (31, 8), (32, 0), (33, 16)]

Covered at level 11 : {32, 9, 27}

After reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 4), (8, -1), (9, 0), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, -1), (20, 24), (21, 128), (22, 26), (23, -1), (24, 6), (25, 6), (26, 26), (27, 0), (28, -1), (29, 8), (30, 8), (31, 8), (32, 0), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 4), (8, -1), (9, -1), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, -1), (20, 24), (21, 128), (22, 26), (23, -1), (24, 6), (25, 6), (26, 26), (27, -1), (28, -1), (29, 8), (30, 8), (31, 8), (32, -1), (33, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]


Solution : [0, 13, 10, 15, 2] has cost 32.


Before backtrack at level 11
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25]
 solution : [0, 13, 10, 15, 2]

After backtrack at level 11
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25, 32, 27, 9]
 solution : [0, 13, 10, 15, 2]


Invert decision for 2 at level 10


New level: 11
 pending : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25, 32, 27, 9]
 solution : [0, 13, 10, 15]


Before reduction : 
 pending  : [14, 11, 7, 17, 18, 12, 6, 26, 33, 29, 16, 20, 31, 30, 22, 24, 21, 25, 32, 27, 9]
 solution : [0, 13, 10, 15]

Essensial at level 11 : {9, 6, 22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 64), (7, 4), (8, -1), (9, -1), (10, -1), (11, 256), (12, 2), (13, -1), (14, 128), (15, -1), (16, 44), (17, 44), (18, 20), (19, -1), (20, 24), (21, 128), (22, 26), (23, -1), (24, 6), (25, 6), (26, 26), (27, -1), (28, -1), (29, 8), (30, 8), (31, 8), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, 2), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 16, 17, 18, 20, 21, 24, 25, 26, 27, 29, 30, 31}

After reduction : 
 pending  : [14, 11, 7, 12]
 solution : [0, 13, 10, 15, 9, 6, 22]


Before reduction : 
 pending  : [14, 11, 7, 12]
 solution : [0, 13, 10, 15, 9, 6, 22]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, 2), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [14, 11, 7, 12]
 solution : [0, 13, 10, 15, 9, 6, 22]


Solution : [0, 13, 10, 15, 9, 6, 22] has cost 71.


Before backtrack at level 11
 pending : [14, 11, 7, 12]
 solution : [0, 13, 10, 15, 9, 6, 22]

After backtrack at level 11
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27]
 solution : [0, 13, 10, 15]


Before backtrack at level 10
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27]
 solution : [0, 13, 10, 15]

After backtrack at level 10
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2]
 solution : [0, 13, 10, 15]


Before backtrack at level 9
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2]
 solution : [0, 13, 10, 15]

After backtrack at level 9
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19]
 solution : [0, 13, 10, 15]


Before backtrack at level 8
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19]
 solution : [0, 13, 10, 15]

After backtrack at level 8
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23]
 solution : [0, 13, 10, 15]


Before backtrack at level 7
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23]
 solution : [0, 13, 10, 15]

After backtrack at level 7
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 15]


Invert decision for 15 at level 6


New level: 7
 pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 2), (13, -1), (14, 2), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 7 among pending : [14, 11, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [14, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]


New level: 8
 pending : [14, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]


Before reduction : 
 pending  : [14, 7, 12, 6, 22, 9, 17, 18, 26, 33, 29, 16, 20, 31, 30, 24, 21, 25, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, 512), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 64), (7, 4), (8, -1), (9, 128), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 26), (17, 0), (18, 0), (19, 36), (20, 16), (21, 16), (22, 209), (23, 386), (24, 96), (25, 0), (26, 10), (27, 32), (28, -1), (29, 2), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : {12, 14, 17, 18, 25}

After reduction : 
 pending  : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]


Before reduction : 
 pending  : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 64), (7, 4), (8, -1), (9, 128), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 26), (17, 0), (18, 0), (19, 36), (20, 16), (21, 16), (22, 209), (23, 386), (24, 96), (25, 0), (26, 10), (27, 32), (28, -1), (29, 2), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 64), (7, 4), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 26), (17, -1), (18, -1), (19, 36), (20, 16), (21, 16), (22, 209), (23, 386), (24, 96), (25, -1), (26, 10), (27, 32), (28, -1), (29, 2), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]


Solution : [0, 13, 10, 11] has cost 26.


Before backtrack at level 8
 pending : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5]
 solution : [0, 13, 10, 11]

After backtrack at level 8
 pending : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 64), (7, 4), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 26), (17, -1), (18, -1), (19, 36), (20, 16), (21, 16), (22, 209), (23, 386), (24, 96), (25, -1), (26, 10), (27, 32), (28, -1), (29, 2), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10]


Solution : [0, 13, 10] has cost 20.


Decide in level 8 among pending : [7, 6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]

Coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]


New level: 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, -1), (5, 512), (6, 256), (7, 512), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 224), (17, 176), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 418), (24, 96), (25, 48), (26, 274), (27, 32), (28, -1), (29, 64), (30, 128), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 272), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, 224), (17, 164), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 393), (24, 96), (25, 48), (26, 53), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 128)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]


Solution : [0, 13, 10, 7] has cost 25.


Before backtrack at level 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]

After backtrack at level 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 5, 14, 12, 17, 18, 25]
 solution : [0, 13, 10]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 272), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, 64), (13, -1), (14, 128), (15, -1), (16, 224), (17, 164), (18, 80), (19, 328), (20, 100), (21, 128), (22, 209), (23, 393), (24, 96), (25, 48), (26, 53), (27, 32), (28, -1), (29, 16), (30, 128), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 44), (17, 176), (18, 80), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 48), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 5]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 44), (17, 176), (18, 80), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 48), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 44), (17, 176), (18, 80), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 48), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 5]


Solution : [0, 13, 10, 5] has cost 25.


Before backtrack at level 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25]
 solution : [0, 13, 10, 5]

After backtrack at level 9
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5]
 solution : [0, 13, 10]


Before backtrack at level 8
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5]
 solution : [0, 13, 10]

After backtrack at level 8
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7]
 solution : [0, 13, 10]


Before backtrack at level 7
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7]
 solution : [0, 13, 10]

After backtrack at level 7
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11]
 solution : [0, 13, 10]


Before backtrack at level 6
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11]
 solution : [0, 13, 10]

After backtrack at level 6
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15]
 solution : [0, 13, 10]


Before backtrack at level 5
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15]
 solution : [0, 13, 10]

After backtrack at level 5
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4]
 solution : [0, 13, 10]


Before backtrack at level 4
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4]
 solution : [0, 13, 10]

After backtrack at level 4
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4, 8]
 solution : [0, 13, 10]


Before backtrack at level 3
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4, 8]
 solution : [0, 13, 10]

After backtrack at level 3
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13, 10]


Invert decision for 10 at level 2


New level: 3
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 12, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13]

Essensial at level 3 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, 132), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 128), (13, -1), (14, 256), (15, -1), (16, 44), (17, 176), (18, 80), (19, 321), (20, 24), (21, 128), (22, 209), (23, 417), (24, 96), (25, 48), (26, 273), (27, 16), (28, -1), (29, 64), (30, 128), (31, 128), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13, 12]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13, 12]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]
 solution : [0, 13, 12]


Solution : [0, 13, 12] has cost 13.


Decide in level 3 among pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28, 3]

Coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Decide 3 with phase True at level 3

After decision at level 3
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28]
 solution : [0, 13, 12, 3]


New level: 4
 pending : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28]
 solution : [0, 13, 12, 3]


Before reduction : 
 pending  : [6, 22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 14, 17, 18, 25, 5, 7, 11, 15, 4, 8, 28]
 solution : [0, 13, 12, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, 768), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 64), (5, 0), (6, 0), (7, 0), (8, 576), (9, 512), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 6), (17, 0), (18, 2), (19, 2), (20, 6), (21, 2), (22, 209), (23, 101), (24, 384), (25, 24), (26, 27), (27, 128), (28, 32), (29, 32), (30, 128), (31, 64), (32, 64), (33, 2)]

Covered at level 4 : {5, 6, 7, 11, 14, 15, 17}

After reduction : 
 pending  : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28]
 solution : [0, 13, 12, 3]


Before reduction : 
 pending  : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28]
 solution : [0, 13, 12, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 64), (5, 0), (6, 0), (7, 0), (8, 576), (9, 512), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, 0), (16, 6), (17, 0), (18, 2), (19, 2), (20, 6), (21, 2), (22, 209), (23, 101), (24, 384), (25, 24), (26, 27), (27, 128), (28, 32), (29, 32), (30, 128), (31, 64), (32, 64), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 64), (5, -1), (6, -1), (7, -1), (8, 576), (9, 512), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, -1), (18, 2), (19, 2), (20, 6), (21, 2), (22, 209), (23, 101), (24, 384), (25, 24), (26, 27), (27, 128), (28, 32), (29, 32), (30, 128), (31, 64), (32, 64), (33, 2)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28]
 solution : [0, 13, 12, 3]


Solution : [0, 13, 12, 3] has cost 26.


Before backtrack at level 4
 pending : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28]
 solution : [0, 13, 12, 3]

After backtrack at level 4
 pending : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 3]


Invert decision for 3 at level 3


New level: 4
 pending : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]


Before reduction : 
 pending  : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 288), (3, -1), (4, 64), (5, -1), (6, -1), (7, -1), (8, 576), (9, 512), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, -1), (18, 2), (19, 2), (20, 6), (21, 2), (22, 209), (23, 101), (24, 384), (25, 24), (26, 27), (27, 128), (28, 32), (29, 32), (30, 128), (31, 64), (32, 64), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]


Solution : [0, 13, 12] has cost 13.


Decide in level 4 among pending : [22, 9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]

Coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Decide 22 with phase True at level 4

After decision at level 4
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]


New level: 5
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]


Before reduction : 
 pending  : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, 640), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 24), (17, 256), (18, 96), (19, 272), (20, 24), (21, 128), (22, -1), (23, 66), (24, 384), (25, 6), (26, 99), (27, 128), (28, 64), (29, 128), (30, 4), (31, 256), (32, 128), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]


Solution : [0, 13, 12, 22] has cost 47.


Before backtrack at level 5
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]

After backtrack at level 5
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 22]


Invert decision for 22 at level 4


New level: 5
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]


Before reduction : 
 pending  : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 24), (17, 256), (18, 96), (19, 272), (20, 24), (21, 128), (22, -1), (23, 66), (24, 384), (25, 6), (26, 99), (27, 128), (28, 64), (29, 128), (30, 4), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, -1), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12]


Solution : [0, 13, 12] has cost 13.


Decide in level 5 among pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 2, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]

Coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, -1), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

Decide 2 with phase True at level 5

After decision at level 5
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]


New level: 6
 pending : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]


Before reduction : 
 pending  : [9, 26, 33, 29, 16, 20, 31, 30, 24, 21, 32, 27, 19, 23, 18, 25, 4, 8, 28, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 640), (3, -1), (4, 512), (5, 512), (6, 256), (7, 512), (8, 576), (9, 512), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 448), (17, 260), (18, 112), (19, 352), (20, 224), (21, 128), (22, -1), (23, 420), (24, 384), (25, 96), (26, 212), (27, 128), (28, 64), (29, 128), (30, 256), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 512), (6, 128), (7, 512), (8, 576), (9, 0), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 44), (17, 88), (18, 40), (19, 321), (20, 24), (21, 128), (22, -1), (23, 196), (24, 6), (25, 12), (26, 52), (27, 0), (28, 0), (29, 16), (30, 8), (31, 32), (32, 0), (33, 64)]

Covered at level 6 : {32, 9, 27, 28}

After reduction : 
 pending  : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]


Before reduction : 
 pending  : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 512), (6, 128), (7, 512), (8, 576), (9, 0), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 44), (17, 88), (18, 40), (19, 321), (20, 24), (21, 128), (22, -1), (23, 196), (24, 6), (25, 12), (26, 52), (27, 0), (28, 0), (29, 16), (30, 8), (31, 32), (32, 0), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 512), (6, 128), (7, 512), (8, 576), (9, -1), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 44), (17, 88), (18, 40), (19, 321), (20, 24), (21, 128), (22, -1), (23, 196), (24, 6), (25, 12), (26, 52), (27, -1), (28, -1), (29, 16), (30, 8), (31, 32), (32, -1), (33, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]


Solution : [0, 13, 12, 2] has cost 23.


Before backtrack at level 6
 pending : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15]
 solution : [0, 13, 12, 2]

After backtrack at level 6
 pending : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15, 9, 32, 27, 28]
 solution : [0, 13, 12, 2]


Invert decision for 2 at level 5


New level: 6
 pending : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15, 9, 32, 27, 28]
 solution : [0, 13, 12]


Before reduction : 
 pending  : [26, 33, 29, 16, 20, 31, 30, 24, 21, 19, 23, 18, 25, 4, 8, 6, 14, 17, 5, 7, 11, 15, 9, 32, 27, 28]
 solution : [0, 13, 12]

Essensial at level 6 : {9, 5, 6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 512), (6, 128), (7, 512), (8, 576), (9, -1), (10, -1), (11, 512), (12, -1), (13, -1), (14, 256), (15, 512), (16, 44), (17, 88), (18, 40), (19, 321), (20, 24), (21, 128), (22, -1), (23, 196), (24, 6), (25, 12), (26, 52), (27, -1), (28, -1), (29, 16), (30, 8), (31, 32), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 0), (8, 512), (9, -1), (10, -1), (11, 512), (12, -1), (13, -1), (14, 0), (15, 0), (16, 128), (17, 8), (18, 0), (19, 6), (20, 0), (21, 0), (22, -1), (23, 25), (24, 0), (25, 0), (26, 34), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 2), (33, 0)]

Covered at level 6 : {33, 7, 14, 15, 18, 20, 21, 24, 25, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [26, 16, 19, 23, 4, 8, 17, 11, 32]
 solution : [0, 13, 12, 9, 5, 6]


Before reduction : 
 pending  : [26, 16, 19, 23, 4, 8, 17, 11, 32]
 solution : [0, 13, 12, 9, 5, 6]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, 0), (8, 512), (9, -1), (10, -1), (11, 512), (12, -1), (13, -1), (14, 0), (15, 0), (16, 128), (17, 8), (18, 0), (19, 6), (20, 0), (21, 0), (22, -1), (23, 25), (24, 0), (25, 0), (26, 34), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 2), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 256), (5, -1), (6, -1), (7, -1), (8, 512), (9, -1), (10, -1), (11, 8), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, -1), (19, 6), (20, -1), (21, -1), (22, -1), (23, 25), (24, -1), (25, -1), (26, 34), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, 2), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [26, 16, 19, 23, 4, 8, 17, 11, 32]
 solution : [0, 13, 12, 9, 5, 6]


Solution : [0, 13, 12, 9, 5, 6] has cost 33.


Before backtrack at level 6
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32]
 solution : [0, 13, 12, 9, 5, 6]

After backtrack at level 6
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28]
 solution : [0, 13, 12]


Before backtrack at level 5
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28]
 solution : [0, 13, 12]

After backtrack at level 5
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2]
 solution : [0, 13, 12]


Before backtrack at level 4
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2]
 solution : [0, 13, 12]

After backtrack at level 4
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22]
 solution : [0, 13, 12]


Before backtrack at level 3
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22]
 solution : [0, 13, 12]

After backtrack at level 3
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22, 12, 3]
 solution : [0, 13]


Before backtrack at level 2
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22, 12, 3]
 solution : [0, 13]

After backtrack at level 2
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22, 12, 3, 10]
 solution : [0, 13]


Before backtrack at level 1
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22, 12, 3, 10]
 solution : [0, 13]

After backtrack at level 1
 pending : [26, 16, 19, 23, 4, 8, 17, 11, 32, 6, 5, 9, 33, 29, 20, 31, 30, 24, 21, 18, 25, 14, 7, 15, 27, 28, 2, 22, 12, 3, 10, 1]
 solution : [0, 13]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 13, 1, 9, 4]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_13] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_9] forall NODE0,NODE1. allowed_in(NODE1) | ~sent(NODE0,NODE1) | allowed_in(NODE0) | NODE0 = NODE1 # qcost: 6

invariant [invar_4] forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 12.641 seconds

[QRM NOTE]: Time elapsed since last: 2.187 seconds

[QRM NOTE]: Peak memory: 2388478 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_13
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_13 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_13 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_13 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


==================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym/ivy/firewall.node_3.0.ivy]

==================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {1, 4}

invariant [invar_13] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_4] forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1 # qcost: 6


========================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.assert.ivy]

========================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.assert.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_13
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_4

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_13 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_13 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_4 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_13 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 17.312 seconds

[QRM NOTE]: Time elapsed since last: 4.671 seconds

[QRM NOTE]: Peak memory: 2418138 bytes


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[QRM RESULT]: PASS

