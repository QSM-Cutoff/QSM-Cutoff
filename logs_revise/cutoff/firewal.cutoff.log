
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.105 seconds

[QRM NOTE]: Time elapsed since last: 7.105 seconds

[QRM NOTE]: Peak memory: 1180251 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: allowed_in('node',)
predicate: sent('node', 'node')
predicate: internal('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000011000000000
lex min decimal: 1536
states:
000101000000000
000011000000000
000110000000000




=== State Orbit 3 =====================
size : 3
repr state: 000010000000000
lex min decimal: 512
states:
000010000000000
000100000000000
000001000000000




=== State Orbit 4 =====================
size : 6
repr state: 100011000100000
lex min decimal: 7176
states:
100011000100000
001110000001000
001110001000000
010101010000000
010101000000010
100011000000100




=== State Orbit 5 =====================
size : 3
repr state: 100011000100100
lex min decimal: 7240
states:
010101010000010
100011000100100
001110001001000




=== State Orbit 6 =====================
size : 6
repr state: 100011010100100
lex min decimal: 7242
states:
010101010100010
100011010100100
001110001001010
001110001001100
100011001100100
010101010001010




=== State Orbit 7 =====================
size : 3
repr state: 100011011100100
lex min decimal: 7246
states:
100011011100100
001110001001110
010101010101010




=== State Orbit 8 =====================
size : 6
repr state: 100011010100000
lex min decimal: 7178
states:
001110000001010
100011001000100
010101010100000
100011010100000
010101000001010
001110001000100




=== State Orbit 9 =====================
size : 6
repr state: 100011011100000
lex min decimal: 7182
states:
100011011000100
010101000101010
010101010101000
001110000001110
001110001000110
100011011100000




=== State Orbit 10 =====================
size : 6
repr state: 100011001100000
lex min decimal: 7180
states:
001110000001100
010101010001000
100011001100000
001110001000010
100011010000100
010101000100010




=== State Orbit 11 =====================
size : 6
repr state: 100010000100000
lex min decimal: 5128
states:
001010000001000
010001000000010
001100001000000
010100010000000
100001000000100
100010000100000




=== State Orbit 12 =====================
size : 3
repr state: 101010000101000
lex min decimal: 14528
states:
110001000000110
011100011000000
101010000101000




=== State Orbit 13 =====================
size : 6
repr state: 101010010101000
lex min decimal: 14532
states:
011100011000100
101010010101000
110001000001110
101010000101010
110001001000110
011100011100000




=== State Orbit 14 =====================
size : 3
repr state: 101010010101010
lex min decimal: 14564
states:
101010010101010
110001001001110
011100011100100




=== State Orbit 15 =====================
size : 6
repr state: 100010010100000
lex min decimal: 5130
states:
001100001000100
010100010100000
010001000001010
100010010100000
100001001000100
001010000001010



[QRM NOTE]: Time elapsed since start: 7.217 seconds

[QRM NOTE]: Time elapsed since last: 0.112 seconds

[QRM NOTE]: Peak memory: 1230660 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.220 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 193740 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 8
num_suborbits: 2
6 (*) : ---------1-11--
6     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
7     : ---------1--11-
7     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
8     : -------11----1-
8     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
9     : -------1----11-
9     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
10     : -------11--1---
10     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
11     : --------11-1---
11     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 0--0--------1--
12     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
13     : 0--0-----1-----
13     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
14     : -0--0--------1-
14     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
15     : -0--0--1-------
15     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
16     : --0--0-----1---
16     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
17     : --0--0--1------
17     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
60 (*) : --0--0------1--
60     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : 0--0---1-------
63     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
64     : -0--0------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
65     : 0--0----1------
65     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : 0-0---------1--
18     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
19     : 00-------1-----
19     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
20     : -00----------1-
20     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
21     : 00-----1-------
21     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
22     : -00--------1---
22     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
23     : 0-0-----1------
23     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : --10--------1--
24     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
25     : -1-0-----1-----
25     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
26     : --1-0--------1-
26     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
27     : 1---0--1-------
27     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : 1----0--1------
29     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
66 (*) : 1----0------1--
66     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
67     : 1---0----1-----
67     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
68     : -1---0-------1-
68     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
69     : -1-0---1-------
69     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
70     : --1-0------1---
70     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
71     : --10----1------
71     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : 1-1---------1--
30     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
31     : 11-------1-----
31     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
32     : -11----------1-
32     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
33     : 11-----1-------
33     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
34     : -11--------1---
34     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
35     : 1-1-----1------
35     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
36 (*) : --01--------1--
36     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
37     : -0-1-----1-----
37     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
38     : --0-1--------1-
38     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
39     : 0---1--1-------
39     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
40     : -0---1-----1---
40     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
41     : 0----1--1------
41     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
42 (*) : 0----1------1--
42     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
43     : 0---1----1-----
43     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
44     : -0---1-------1-
44     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
45     : -0-1---1-------
45     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
46     : --0-1------1---
46     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
47     : --01----1------
47     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
48 (*) : ---1-1------1--
48     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
49     : ---11----1-----
49     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
50     : ----11-------1-
50     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
51     : ---11--1-------
51     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
52     : ----11-----1---
52     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
53     : ---1-1--1------
53     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : ---0-0------1--
54     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
55     : ---00----1-----
55     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
56     : ----00-------1-
56     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
57     : ---00--1-------
57     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
58     : ----00-----1---
58     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
59     : ---0-0--1------
59     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
74 (*) : -1-0---------0-
74     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
75     : --10-------0---
75     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
76     : 1---0-------0--
76     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
77     : --1-0---0------
77     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
78     : 1----0---0-----
78     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
79     : -1---0-0-------
79     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
80 (*) : -1-0-0---------
80     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
81     : --100----------
81     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
82     : 1---00---------
82     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
83 (*) : 11-----------0-
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
84     : 1-1--------0---
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
85     : 11----------0--
85     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
86     : -11-----0------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
87     : 1-1------0-----
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
88     : -11----0-------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : 11---0---------
89     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
90     : 1-1-0----------
90     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
91     : -110-----------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : --1-----0--0---
93     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : 1--------0--0--
95     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : ---01------0-1-
96     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
97     : ---0-1-----1-0-
97     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
98     : ---10---0---1--
98     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
99     : ----01--1---0--
99     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
100     : ---1-0-0-1-----
100     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
101     : ----10-1-0-----
101     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : ---01-------11-
102     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
103     : ---0-1---1-1---
103     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
104     : ---10-------11-
104     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
105     : ----01-11------
105     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
106     : ---1-0---1-1---
106     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
107     : ----10-11------
107     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
108 (*) : ---01---1----1-
108     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
109     : ---0-1-1---1---
109     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
110     : ---10------11--
110     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
111     : ----01--11-----
111     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
112     : ---1-0---1---1-
112     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
113     : ----10-1----1--
113     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
150 (*) : ---01---1--1---
150     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
151     : ---0-1-1-----1-
151     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
152     : ---10---1--1---
152     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
153     : ----01---1--1--
153     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
154     : ---1-0-1-----1-
154     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
155     : ----10---1--1--
155     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
168 (*) : ---01------11--
168     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
169     : ---0-1---1---1-
169     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
170     : ---10---1----1-
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
171     : ----01-1----1--
171     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
172     : ---1-0-1---1---
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
173     : ----10--11-----
173     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
132 (*) : -0-0----1----1-
132     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
133     : --00---1---1---
133     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
134     : 0---0------11--
134     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
135     : --0-0---11-----
135     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
136     : 0----0---1---1-
136     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
137     : -0---0-1----1--
137     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
138 (*) : 0---0---1--1---
138     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
139     : 0----0-1-----1-
139     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
140     : -0-0----1--1---
140     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
141     : -0---0---1--1--
141     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
142     : --00---1-----1-
142     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
143     : --0-0----1--1--
143     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
162 (*) : -0-0-------11--
162     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
163     : --00-----1---1-
163     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
164     : 0---0---1----1-
164     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
165     : --0-0--1----1--
165     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
166     : 0----0-1---1---
166     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
167     : -0---0--11-----
167     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
126 (*) : ---0-0-----0-1-
126     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
127     : ---00------1-0-
127     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
128     : ----00--0---1--
128     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
129     : ---00---1---0--
129     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
130     : ----00-0-1-----
130     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
131     : ---0-0-1-0-----
131     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
144 (*) : 01------1--1---
144     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
145     : 0-1----1-----1-
145     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
146     : 10------1--1---
146     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
147     : -01------1--1--
147     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
148     : 1-0----1-----1-
148     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
149     : -10------1--1--
149     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
174 (*) : 01---------11--
174     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
175     : 0-1------1---1-
175     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
176     : 10------1----1-
176     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
177     : -01----1----1--
177     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
178     : 1-0----1---1---
178     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
179     : -10-----11-----
179     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
192 (*) : 01----------11-
192     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
193     : 0-1------1-1---
193     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
194     : 10----------11-
194     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
195     : -01----11------
195     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
196     : 1-0------1-1---
196     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
197     : -10----11------
197     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
210 (*) : 01------1----1-
210     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
211     : 0-1----1---1---
211     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
212     : 10---------11--
212     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
213     : -01-----11-----
213     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
214     : 1-0------1---1-
214     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
215     : -10----1----1--
215     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : -1-1----1--1---
156     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
157     : --11---1-----1-
157     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
158     : 1---1---1--1---
158     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
159     : --1-1----1--1--
159     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
160     : 1----1-1-----1-
160     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
161     : -1---1---1--1--
161     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
180 (*) : -1-1-------11--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
181     : --11-----1---1-
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
182     : 1---1---1----1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
183     : --1-1--1----1--
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
184     : 1----1-1---1---
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
185     : -1---1--11-----
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
204 (*) : -1-1--------11-
204     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
205     : --11-----1-1---
205     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
206     : 1---1-------11-
206     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
207     : --1-1--11------
207     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
208     : 1----1---1-1---
208     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
209     : -1---1-11------
209     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
228 (*) : -1-1----1----1-
228     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
229     : --11---1---1---
229     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
230     : 1---1------11--
230     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
231     : --1-1---11-----
231     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
232     : 1----1---1---1-
232     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
233     : -1---1-1----1--
233     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 18
num_suborbits: 3
186 (*) : 01-----0----1--
186     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
187     : 0-1-----01-----
187     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
188     : 10-------0---1-
188     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
189     : -01----1---0---
189     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
190     : 1-0--------10--
190     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
191     : -10-----1----0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
216 (*) : 01-----01------
216     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
217     : 0-1----10------
217     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
218     : 10-------0-1---
218     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
219     : -01------1-0---
219     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
220     : 1-0---------01-
220     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
221     : -10---------10-
221     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
240 (*) : 01------0---1--
240     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
241     : 0-1----0-1-----
241     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
242     : 10---------0-1-
242     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
243     : -01----1-0-----
243     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
244     : 1-0--------1-0-
244     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
245     : -10-----1---0--
245     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
198 (*) : -1-1---0----1--
198     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
199     : --11----01-----
199     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
200     : 1---1----0---1-
200     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
201     : --1-1--1---0---
201     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
202     : 1----1-----10--
202     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
203     : -1---1--1----0-
203     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
222 (*) : -1-1---01------
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
223     : --11---10------
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
224     : 1---1----0-1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
225     : --1-1----1-0---
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
226     : 1----1------01-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
227     : -1---1------10-
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
246 (*) : -1-1----0---1--
246     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --11---0-1-----
247     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1---1------0-1-
248     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1-1--1-0-----
249     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
250     : 1----1-----1-0-
250     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
251     : -1---1--1---0--
251     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
234 (*) : -1---0--0---1--
234     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
235     : --1-0--0-1-----
235     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
236     : 1----0-----0-1-
236     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
237     : --10---1-0-----
237     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
238     : 1---0------1-0-
238     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
239     : -1-0----1---0--
239     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
252 (*) : 0-------0--01--
252     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
253     : 0------0-1---0-
253     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
254     : -0------0--0-1-
254     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
255     : -0-----1-0--0--
255     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
256     : --0----0---1-0-
256     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
257     : --0-----10--0--
257     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
258 (*) : ---1----0--01--
258     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
259     : ---1---0-1---0-
259     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
260     : ----1---0--0-1-
260     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
261     : ----1--1-0--0--
261     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
262     : -----1-0---1-0-
262     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
263     : -----1--10--0--
263     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
264 (*) : -----0--0--01--
264     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
265     : ----0--0-1---0-
265     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
266     : -----0--0--0-1-
266     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
267     : ---0---1-0--0--
267     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
268     : ----0--0---1-0-
268     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
269     : ---0----10--0--
269     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
270 (*) : --1----0-1-0---
270     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
271     : -1------0---10-
271     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
272     : --1----100-----
272     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
273     : 1----------001-
273     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
274     : -1-----01---0--
274     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
275     : 1--------0-1-0-
275     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 24
num_suborbits: 4
276 (*) : --1------1-0-1-
276     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
277     : -1---------110-
277     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
278     : --1----10---1--
278     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
279     : 1-------1---01-
279     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
280     : -1-----011-----
280     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
281     : 1------1-0-1---
281     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
282 (*) : --1-----01--1--
282     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
283     : -1-----0-1--1--
283     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
284     : --1----1---0-1-
284     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
285     : 1------1-0---1-
285     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
286     : -1------1--1-0-
286     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
287     : 1-------1--10--
287     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
288 (*) : --1----0-1--1--
288     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
289     : -1------01--1--
289     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
290     : --1----1-0---1-
290     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
291     : 1------1---0-1-
291     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
292     : -1------1--10--
292     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
293     : 1-------1--1-0-
293     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
342 (*) : --1----011-----
342     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
343     : -1-----10---1--
343     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
344     : --1----1-0-1---
344     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
345     : 1--------1-0-1-
345     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
346     : -1------1---01-
346     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
347     : 1----------110-
347     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 24
num_suborbits: 4
294 (*) : -----0--01--1--
294     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
295     : ----0--0-1--1--
295     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
296     : -----0-1---0-1-
296     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
297     : ---0---1-0---1-
297     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
298     : ----0---1--1-0-
298     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
299     : ---0----1--10--
299     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
312 (*) : ----0---01--1--
312     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
313     : -----0-0-1--1--
313     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
314     : ---0---1---0-1-
314     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
315     : -----0-1-0---1-
315     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
316     : ---0----1--1-0-
316     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
317     : ----0---1--10--
317     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
330 (*) : ---0-----1-0-1-
330     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
331     : ---0-------110-
331     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
332     : ----0--10---1--
332     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
333     : ----0---1---01-
333     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
334     : -----0-011-----
334     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
335     : -----0-1-0-1---
335     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
336 (*) : -----0---1-0-1-
336     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
337     : ----0------110-
337     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
338     : -----0-10---1--
338     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
339     : ---0----1---01-
339     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
340     : ----0--011-----
340     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
341     : ---0---1-0-1---
341     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 12
num_suborbits: 2
300 (*) : 0-------01--1--
300     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
301     : 0------0-1--1--
301     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
302     : -0-----1---0-1-
302     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
303     : -0-----1-0---1-
303     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
304     : --0-----1--1-0-
304     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
305     : --0-----1--10--
305     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
318 (*) : -0-------1-0-1-
318     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
319     : --0--------110-
319     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
320     : 0------10---1--
320     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
321     : --0-----1---01-
321     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
322     : 0------011-----
322     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
323     : -0-----1-0-1---
323     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 12
num_suborbits: 2
306 (*) : ---1----01--1--
306     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
307     : ---1---0-1--1--
307     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
308     : ----1--1---0-1-
308     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
309     : ----1--1-0---1-
309     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
310     : -----1--1--1-0-
310     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
311     : -----1--1--10--
311     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
324 (*) : ----1----1-0-1-
324     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
325     : -----1-----110-
325     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
326     : ---1---10---1--
326     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
327     : -----1--1---01-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
328     : ---1---011-----
328     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
329     : ----1--1-0-1---
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 7.298 seconds

[QRM NOTE]: Time elapsed since last: 0.078 seconds

[QRM NOTE]: Peak memory: 1557280 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

[QRM NOTE]: Time elapsed since start: 7.319 seconds

[QRM NOTE]: Time elapsed since last: 0.020 seconds

[QRM NOTE]: Peak memory: 496462 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : --1-----0--0---
93     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : 1--------0--0--
95     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)


=== Prime Orbit 2 =====================
size : 8
num_suborbits: 2
6 (*) : ---------1-11--
6     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
7     : ---------1--11-
7     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
8     : -------11----1-
8     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
9     : -------1----11-
9     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
10     : -------11--1---
10     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
11     : --------11-1---
11     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$0$2; node$0$sent$1$1, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$0$2; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2; node$0$sent$1$1, node$0$sent$1$0, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$0; node$0$sent$1': [node$0$sent$0$2; node$0$sent$1$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$2]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$2; node$0$sent$1$1}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE4)', 'sent(NODE1,NODE2)', 'sent(NODE0,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE1,NODE0. ~sent(NODE2,NODE4) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 0--0--------1--
12     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
13     : 0--0-----1-----
13     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
14     : -0--0--------1-
14     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
15     : -0--0--1-------
15     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
16     : --0--0-----1---
16     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
17     : --0--0--1------
17     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
60 (*) : --0--0------1--
60     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : 0--0---1-------
63     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
64     : -0--0------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
65     : 0--0----1------
65     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', '~internal(NODE2)', 'sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. allowed_in(NODE2) | internal(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : 0-0---------1--
18     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
19     : 00-------1-----
19     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
20     : -00----------1-
20     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
21     : 00-----1-------
21     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
22     : -00--------1---
22     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
23     : 0-0-----1------
23     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$1], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$1, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~allowed_in(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : --10--------1--
24     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
25     : -1-0-----1-----
25     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
26     : --1-0--------1-
26     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
27     : 1---0--1-------
27     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : 1----0--1------
29     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
66 (*) : 1----0------1--
66     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
67     : 1---0----1-----
67     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
68     : -1---0-------1-
68     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
69     : -1-0---1-------
69     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
70     : --1-0------1---
70     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
71     : --10----1------
71     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE1,NODE2)', '~internal(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE1. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | internal(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : 1-1---------1--
30     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
31     : 11-------1-----
31     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
32     : -11----------1-
32     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
33     : 11-----1-------
33     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
34     : -11--------1---
34     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
35     : 1-1-----1------
35     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$allowed_in$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$allowed_in$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$0; node$0$sent$1$0], 'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$0; node$0$sent$1$0, 'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'allowed_in(NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
36 (*) : --01--------1--
36     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
37     : -0-1-----1-----
37     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
38     : --0-1--------1-
38     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
39     : 0---1--1-------
39     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
40     : -0---1-----1---
40     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
41     : 0----1--1------
41     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
42 (*) : 0----1------1--
42     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
43     : 0---1----1-----
43     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
44     : -0---1-------1-
44     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
45     : -0-1---1-------
45     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
46     : --0-1------1---
46     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
47     : --01----1------
47     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'internal(node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', 'internal(NODE0)', '~allowed_in(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | allowed_in(NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
48 (*) : ---1-1------1--
48     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
49     : ---11----1-----
49     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
50     : ----11-------1-
50     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
51     : ---11--1-------
51     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
52     : ----11-----1---
52     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
53     : ---1-1--1------
53     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'internal(NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : ---0-0------1--
54     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
55     : ---00----1-----
55     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
56     : ----00-------1-
56     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
57     : ---00--1-------
57     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
58     : ----00-----1---
58     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
59     : ---0-0--1------
59     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1 | node$0$sent$1$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$1], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$1, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
74 (*) : -1-0---------0-
74     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
75     : --10-------0---
75     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
76     : 1---0-------0--
76     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
77     : --1-0---0------
77     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
78     : 1----0---0-----
78     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
79     : -1---0-0-------
79     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~sent(NODE2,NODE0)', '~internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | sent(NODE2,NODE0) | internal(NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
80 (*) : -1-0-0---------
80     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
81     : --100----------
81     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
82     : 1---00---------
82     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
83 (*) : 11-----------0-
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
84     : 1-1--------0---
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
85     : 11----------0--
85     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
86     : -11-----0------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
87     : 1-1------0-----
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
88     : -11----0-------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'allowed_in(NODE1)', '~sent(NODE2,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : 11---0---------
89     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
90     : 1-1-0----------
90     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
91     : -110-----------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : ---01------0-1-
96     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
97     : ---0-1-----1-0-
97     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
98     : ---10---0---1--
98     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
99     : ----01--1---0--
99     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
100     : ---1-0-0-1-----
100     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
101     : ----10-1-0-----
101     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'internal(NODE0)', '~internal(NODE2)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. sent(NODE0,NODE1) | ~internal(NODE0) | internal(NODE2) | ~sent(NODE1,NODE0) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : ---01-------11-
102     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
103     : ---0-1---1-1---
103     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
104     : ---10-------11-
104     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
105     : ----01-11------
105     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
106     : ---1-0---1-1---
106     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
107     : ----10-11------
107     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
108 (*) : ---01---1----1-
108     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
109     : ---0-1-1---1---
109     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
110     : ---10------11--
110     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
111     : ----01--11-----
111     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
112     : ---1-0---1---1-
112     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
113     : ----10-1----1--
113     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
150 (*) : ---01---1--1---
150     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
151     : ---0-1-1-----1-
151     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
152     : ---10---1--1---
152     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
153     : ----01---1--1--
153     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
154     : ---1-0-1-----1-
154     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
155     : ----10---1--1--
155     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
168 (*) : ---01------11--
168     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
169     : ---0-1---1---1-
169     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
170     : ---10---1----1-
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
171     : ----01-1----1--
171     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
172     : ---1-0-1---1---
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
173     : ----10--11-----
173     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE5)', 'sent(NODE2,NODE4)', 'internal(NODE0)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. internal(NODE5) | ~sent(NODE2,NODE4) | ~internal(NODE0) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE2 = NODE4 | NODE0 = NODE4))


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
132 (*) : -0-0----1----1-
132     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
133     : --00---1---1---
133     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
134     : 0---0------11--
134     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
135     : --0-0---11-----
135     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
136     : 0----0---1---1-
136     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
137     : -0---0-1----1--
137     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
138 (*) : 0---0---1--1---
138     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
139     : 0----0-1-----1-
139     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
140     : -0-0----1--1---
140     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
141     : -0---0---1--1--
141     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
142     : --00---1-----1-
142     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
143     : --0-0----1--1--
143     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
162 (*) : -0-0-------11--
162     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
163     : --00-----1---1-
163     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
164     : 0---0---1----1-
164     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
165     : --0-0--1----1--
165     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
166     : 0----0-1---1---
166     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
167     : -0---0--11-----
167     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE5)', 'sent(NODE0,NODE2)', 'sent(NODE1,NODE3)', '~allowed_in(NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. internal(NODE5) | ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | allowed_in(NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3))


=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~allowed_in(NODE1)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
126 (*) : ---0-0-----0-1-
126     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
127     : ---00------1-0-
127     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
128     : ----00--0---1--
128     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
129     : ---00---1---0--
129     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
130     : ----00-0-1-----
130     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
131     : ---0-0-1-0-----
131     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$1$sent$1$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
144 (*) : 01------1--1---
144     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
145     : 0-1----1-----1-
145     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
146     : 10------1--1---
146     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
147     : -01------1--1--
147     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
148     : 1-0----1-----1-
148     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
149     : -10------1--1--
149     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
174 (*) : 01---------11--
174     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
175     : 0-1------1---1-
175     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
176     : 10------1----1-
176     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
177     : -01----1----1--
177     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
178     : 1-0----1---1---
178     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
179     : -10-----11-----
179     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
192 (*) : 01----------11-
192     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
193     : 0-1------1-1---
193     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
194     : 10----------11-
194     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
195     : -01----11------
195     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
196     : 1-0------1-1---
196     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
197     : -10----11------
197     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
210 (*) : 01------1----1-
210     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
211     : 0-1----1---1---
211     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
212     : 10---------11--
212     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
213     : -01-----11-----
213     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
214     : 1-0------1---1-
214     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
215     : -10----1----1--
215     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE2,NODE4)', '~allowed_in(NODE5)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | allowed_in(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE2 = NODE4 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : -1-1----1--1---
156     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
157     : --11---1-----1-
157     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
158     : 1---1---1--1---
158     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
159     : --1-1----1--1--
159     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
160     : 1----1-1-----1-
160     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
161     : -1---1---1--1--
161     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
180 (*) : -1-1-------11--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
181     : --11-----1---1-
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
182     : 1---1---1----1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
183     : --1-1--1----1--
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
184     : 1----1-1---1---
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
185     : -1---1--11-----
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
204 (*) : -1-1--------11-
204     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
205     : --11-----1-1---
205     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
206     : 1---1-------11-
206     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
207     : --1-1--11------
207     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
208     : 1----1---1-1---
208     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
209     : -1---1-11------
209     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
228 (*) : -1-1----1----1-
228     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
229     : --11---1---1---
229     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
230     : 1---1------11--
230     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
231     : --1-1---11-----
231     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
232     : 1----1---1---1-
232     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
233     : -1---1-1----1--
233     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE2,NODE4)', 'sent(NODE3,NODE5)', 'internal(NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE3,NODE5) | ~internal(NODE1) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3))


=== Prime Orbit 23 =====================
size : 18
num_suborbits: 3
186 (*) : 01-----0----1--
186     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
187     : 0-1-----01-----
187     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
188     : 10-------0---1-
188     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
189     : -01----1---0---
189     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
190     : 1-0--------10--
190     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
191     : -10-----1----0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
216 (*) : 01-----01------
216     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
217     : 0-1----10------
217     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
218     : 10-------0-1---
218     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
219     : -01------1-0---
219     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
220     : 1-0---------01-
220     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
221     : -10---------10-
221     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
240 (*) : 01------0---1--
240     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
241     : 0-1----0-1-----
241     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
242     : 10---------0-1-
242     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
243     : -01----1-0-----
243     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
244     : 1-0--------1-0-
244     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
245     : -10-----1---0--
245     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node1)', '~sent(node0,node1)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE1,NODE2)', '~sent(NODE3,NODE4)', '~allowed_in(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
198 (*) : -1-1---0----1--
198     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
199     : --11----01-----
199     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
200     : 1---1----0---1-
200     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
201     : --1-1--1---0---
201     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
202     : 1----1-----10--
202     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
203     : -1---1--1----0-
203     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
222 (*) : -1-1---01------
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
223     : --11---10------
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
224     : 1---1----0-1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
225     : --1-1----1-0---
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
226     : 1----1------01-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
227     : -1---1------10-
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
246 (*) : -1-1----0---1--
246     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --11---0-1-----
247     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1---1------0-1-
248     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1-1--1-0-----
249     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
250     : 1----1-----1-0-
250     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
251     : -1---1--1---0--
251     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node0)', '~sent(node0,node1)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~sent(NODE1,NODE4)', 'internal(NODE1)', 'sent(NODE2,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE1,NODE0. ~allowed_in(NODE0) | sent(NODE1,NODE4) | ~internal(NODE1) | ~sent(NODE2,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
234 (*) : -1---0--0---1--
234     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
235     : --1-0--0-1-----
235     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
236     : 1----0-----0-1-
236     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
237     : --10---1-0-----
237     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
238     : 1---0------1-0-
238     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
239     : -1-0----1---0--
239     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', '~internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
252 (*) : 0-------0--01--
252     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
253     : 0------0-1---0-
253     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
254     : -0------0--0-1-
254     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
255     : -0-----1-0--0--
255     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
256     : --0----0---1-0-
256     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
257     : --0-----10--0--
257     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)', '~sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
258 (*) : ---1----0--01--
258     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
259     : ---1---0-1---0-
259     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
260     : ----1---0--0-1-
260     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
261     : ----1--1-0--0--
261     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
262     : -----1-0---1-0-
262     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
263     : -----1--10--0--
263     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE2,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. sent(NODE0,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
264 (*) : -----0--0--01--
264     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
265     : ----0--0-1---0-
265     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
266     : -----0--0--0-1-
266     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
267     : ---0---1-0--0--
267     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
268     : ----0--0---1-0-
268     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
269     : ---0----10--0--
269     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$1$sent$1$1, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
270 (*) : --1----0-1-0---
270     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
271     : -1------0---10-
271     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
272     : --1----100-----
272     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
273     : 1----------001-
273     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
274     : -1-----01---0--
274     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
275     : 1--------0-1-0-
275     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$1$sent$0$1, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$1, node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$1, node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$1 | node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$1], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$1, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$1; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE1,NODE2)', '~sent(NODE2,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)


=== Prime Orbit 30 =====================
size : 24
num_suborbits: 4
276 (*) : --1------1-0-1-
276     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
277     : -1---------110-
277     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
278     : --1----10---1--
278     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
279     : 1-------1---01-
279     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
280     : -1-----011-----
280     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
281     : 1------1-0-1---
281     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
282 (*) : --1-----01--1--
282     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
283     : -1-----0-1--1--
283     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
284     : --1----1---0-1-
284     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
285     : 1------1-0---1-
285     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
286     : -1------1--1-0-
286     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
287     : 1-------1--10--
287     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
288 (*) : --1----0-1--1--
288     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
289     : -1------01--1--
289     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
290     : --1----1-0---1-
290     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
291     : 1------1---0-1-
291     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
292     : -1------1--10--
292     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
293     : 1-------1--1-0-
293     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
342 (*) : --1----011-----
342     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
343     : -1-----10---1--
343     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
344     : --1----1-0-1---
344     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
345     : 1--------1-0-1-
345     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
346     : -1------1---01-
346     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
347     : 1----------110-
347     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$1; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$1; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE2,NODE4)', 'sent(NODE1,NODE3)', '~sent(NODE4,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | sent(NODE4,NODE5) | ((NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 31 =====================
size : 24
num_suborbits: 4
294 (*) : -----0--01--1--
294     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
295     : ----0--0-1--1--
295     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
296     : -----0-1---0-1-
296     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
297     : ---0---1-0---1-
297     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
298     : ----0---1--1-0-
298     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
299     : ---0----1--10--
299     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
312 (*) : ----0---01--1--
312     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
313     : -----0-0-1--1--
313     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
314     : ---0---1---0-1-
314     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
315     : -----0-1-0---1-
315     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
316     : ---0----1--1-0-
316     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
317     : ----0---1--10--
317     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
330 (*) : ---0-----1-0-1-
330     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
331     : ---0-------110-
331     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
332     : ----0--10---1--
332     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
333     : ----0---1---01-
333     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
334     : -----0-011-----
334     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
335     : -----0-1-0-1---
335     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
336 (*) : -----0---1-0-1-
336     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
337     : ----0------110-
337     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
338     : -----0-10---1--
338     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
339     : ---0----1---01-
339     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
340     : ----0--011-----
340     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
341     : ---0---1-0-1---
341     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~internal(node2)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0, node$0$sent$1$1; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0 | node$0$sent$1$1; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$1; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$1; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', '~internal(NODE4)', 'sent(NODE1,NODE3)', '~sent(NODE3,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE4,NODE3,NODE1,NODE0. ~sent(NODE0,NODE2) | internal(NODE4) | ~sent(NODE1,NODE3) | sent(NODE3,NODE1) | ((NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 32 =====================
size : 12
num_suborbits: 2
300 (*) : 0-------01--1--
300     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
301     : 0------0-1--1--
301     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
302     : -0-----1---0-1-
302     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
303     : -0-----1-0---1-
303     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
304     : --0-----1--1-0-
304     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
305     : --0-----1--10--
305     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
318 (*) : -0-------1-0-1-
318     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
319     : --0--------110-
319     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
320     : 0------10---1--
320     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
321     : --0-----1---01-
321     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
322     : 0------011-----
322     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
323     : -0-----1-0-1---
323     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', '~sent(NODE3,NODE1)', 'sent(NODE1,NODE3)', '~allowed_in(NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE1. ~sent(NODE0,NODE2) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | allowed_in(NODE3) | ((NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))


=== Prime Orbit 33 =====================
size : 12
num_suborbits: 2
306 (*) : ---1----01--1--
306     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
307     : ---1---0-1--1--
307     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
308     : ----1--1---0-1-
308     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
309     : ----1--1-0---1-
309     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
310     : -----1--1--1-0-
310     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
311     : -----1--1--10--
311     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
324 (*) : ----1----1-0-1-
324     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
325     : -----1-----110-
325     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
326     : ---1---10---1--
326     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
327     : -----1--1---01-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
328     : ---1---011-----
328     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
329     : ----1--1-0-1---
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$1$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$sent': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE1,NODE3)', 'sent(NODE2,NODE0)', '~sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE0) | sent(NODE0,NODE2) | ((NODE0 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3))


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : --1-----0--0---
93     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : 1--------0--0--
95     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 8
num_suborbits: 2
6 (*) : ---------1-11--
6     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
7     : ---------1--11-
7     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
8     : -------11----1-
8     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
9     : -------1----11-
9     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
10     : -------11--1---
10     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
11     : --------11-1---
11     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   5
num_exists :   0
num_literals : 13
quantified form : forall NODE2,NODE4,NODE3,NODE1,NODE0. ~sent(NODE2,NODE4) | ~sent(NODE1,NODE2) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 18




=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
12 (*) : 0--0--------1--
12     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
13     : 0--0-----1-----
13     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
14     : -0--0--------1-
14     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
15     : -0--0--1-------
15     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
16     : --0--0-----1---
16     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
17     : --0--0--1------
17     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
60 (*) : --0--0------1--
60     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
61     : -0--0----1-----
61     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
62     : --0--0-------1-
62     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
63     : 0--0---1-------
63     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
64     : -0--0------1---
64     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
65     : 0--0----1------
65     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. allowed_in(NODE2) | internal(NODE2) | ~sent(NODE0,NODE1) | ((NODE1 ~= NODE2 | NODE0 = NODE1) & (NODE0 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
18 (*) : 0-0---------1--
18     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
19     : 00-------1-----
19     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
20     : -00----------1-
20     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
21     : 00-----1-------
21     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
22     : -00--------1---
22     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
23     : 0-0-----1------
23     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : --10--------1--
24     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
25     : -1-0-----1-----
25     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
26     : --1-0--------1-
26     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
27     : 1---0--1-------
27     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
28     : -1---0-----1---
28     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
29     : 1----0--1------
29     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
66 (*) : 1----0------1--
66     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
67     : 1---0----1-----
67     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
68     : -1---0-------1-
68     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
69     : -1-0---1-------
69     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
70     : --1-0------1---
70     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
71     : --10----1------
71     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE0,NODE2,NODE3,NODE1. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | internal(NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : 1-1---------1--
30     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
31     : 11-------1-----
31     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
32     : -11----------1-
32     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
33     : 11-----1-------
33     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
34     : -11--------1---
34     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
35     : 1-1-----1------
35     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
36 (*) : --01--------1--
36     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
37     : -0-1-----1-----
37     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
38     : --0-1--------1-
38     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
39     : 0---1--1-------
39     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
40     : -0---1-----1---
40     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
41     : 0----1--1------
41     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
42 (*) : 0----1------1--
42     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
43     : 0---1----1-----
43     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
44     : -0---1-------1-
44     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
45     : -0-1---1-------
45     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
46     : --0-1------1---
46     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
47     : --01----1------
47     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE0,NODE2,NODE3,NODE1. ~sent(NODE1,NODE2) | ~internal(NODE0) | allowed_in(NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
48 (*) : ---1-1------1--
48     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
49     : ---11----1-----
49     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
50     : ----11-------1-
50     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
51     : ---11--1-------
51     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
52     : ----11-----1---
52     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
53     : ---1-1--1------
53     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~internal(NODE0) | ~internal(NODE1) | ~sent(NODE1,NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
54 (*) : ---0-0------1--
54     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
55     : ---00----1-----
55     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
56     : ----00-------1-
56     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
57     : ---00--1-------
57     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
58     : ----00-----1---
58     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
59     : ---0-0--1------
59     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
74 (*) : -1-0---------0-
74     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
75     : --10-------0---
75     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
76     : 1---0-------0--
76     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
77     : --1-0---0------
77     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
78     : 1----0---0-----
78     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
79     : -1---0-0-------
79     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | sent(NODE2,NODE0) | internal(NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 9




=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
80 (*) : -1-0-0---------
80     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
81     : --100----------
81     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
82     : 1---00---------
82     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 12 =====================
size : 6
num_suborbits: 1
83 (*) : 11-----------0-
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
84     : 1-1--------0---
84     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
85     : 11----------0--
85     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
86     : -11-----0------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
87     : 1-1------0-----
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
88     : -11----0-------
88     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | ~allowed_in(NODE1) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 9




=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : 11---0---------
89     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
90     : 1-1-0----------
90     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
91     : -110-----------
91     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 16 =====================
size : 6
num_suborbits: 1
96 (*) : ---01------0-1-
96     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
97     : ---0-1-----1-0-
97     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
98     : ---10---0---1--
98     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
99     : ----01--1---0--
99     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
100     : ---1-0-0-1-----
100     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
101     : ----10-1-0-----
101     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. sent(NODE0,NODE1) | ~internal(NODE0) | internal(NODE2) | ~sent(NODE1,NODE0) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : ---01-------11-
102     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
103     : ---0-1---1-1---
103     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
104     : ---10-------11-
104     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
105     : ----01-11------
105     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
106     : ---1-0---1-1---
106     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
107     : ----10-11------
107     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
108 (*) : ---01---1----1-
108     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
109     : ---0-1-1---1---
109     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
110     : ---10------11--
110     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
111     : ----01--11-----
111     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
112     : ---1-0---1---1-
112     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
113     : ----10-1----1--
113     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
150 (*) : ---01---1--1---
150     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
151     : ---0-1-1-----1-
151     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
152     : ---10---1--1---
152     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
153     : ----01---1--1--
153     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
154     : ---1-0-1-----1-
154     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
155     : ----10---1--1--
155     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
168 (*) : ---01------11--
168     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
169     : ---0-1---1---1-
169     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
170     : ---10---1----1-
170     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
171     : ----01-1----1--
171     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
172     : ---1-0-1---1---
172     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
173     : ----10--11-----
173     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. internal(NODE5) | ~sent(NODE2,NODE4) | ~internal(NODE0) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE2 = NODE4 | NODE0 = NODE4))
qcost : 34




=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : -0-0--------11-
114     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
115     : --00-----1-1---
115     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
116     : 0---0-------11-
116     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
117     : --0-0--11------
117     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
118     : 0----0---1-1---
118     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
119     : -0---0-11------
119     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
132 (*) : -0-0----1----1-
132     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
133     : --00---1---1---
133     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
134     : 0---0------11--
134     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
135     : --0-0---11-----
135     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
136     : 0----0---1---1-
136     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
137     : -0---0-1----1--
137     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
138 (*) : 0---0---1--1---
138     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
139     : 0----0-1-----1-
139     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
140     : -0-0----1--1---
140     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
141     : -0---0---1--1--
141     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
142     : --00---1-----1-
142     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
143     : --0-0----1--1--
143     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
162 (*) : -0-0-------11--
162     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
163     : --00-----1---1-
163     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
164     : 0---0---1----1-
164     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
165     : --0-0--1----1--
165     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
166     : 0----0-1---1---
166     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
167     : -0---0--11-----
167     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. internal(NODE5) | ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | allowed_in(NODE4) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 19 =====================
size : 6
num_suborbits: 1
120 (*) : -0-0-------0-1-
120     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
121     : --00-------1-0-
121     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
122     : 0---0---0---1--
122     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
123     : --0-0---1---0--
123     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
124     : 0----0-0-1-----
124     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
125     : -0---0-1-0-----
125     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 20 =====================
size : 6
num_suborbits: 1
126 (*) : ---0-0-----0-1-
126     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
127     : ---00------1-0-
127     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
128     : ----00--0---1--
128     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
129     : ---00---1---0--
129     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
130     : ----00-0-1-----
130     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
131     : ---0-0-1-0-----
131     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
144 (*) : 01------1--1---
144     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
145     : 0-1----1-----1-
145     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
146     : 10------1--1---
146     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
147     : -01------1--1--
147     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
148     : 1-0----1-----1-
148     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
149     : -10------1--1--
149     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
174 (*) : 01---------11--
174     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
175     : 0-1------1---1-
175     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
176     : 10------1----1-
176     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
177     : -01----1----1--
177     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
178     : 1-0----1---1---
178     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
179     : -10-----11-----
179     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
192 (*) : 01----------11-
192     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
193     : 0-1------1-1---
193     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
194     : 10----------11-
194     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
195     : -01----11------
195     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
196     : 1-0------1-1---
196     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
197     : -10----11------
197     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
210 (*) : 01------1----1-
210     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
211     : 0-1----1---1---
211     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
212     : 10---------11--
212     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
213     : -01-----11-----
213     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
214     : 1-0------1---1-
214     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
215     : -10----1----1--
215     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | allowed_in(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE2 = NODE4 | NODE0 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 34




=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
156 (*) : -1-1----1--1---
156     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
157     : --11---1-----1-
157     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
158     : 1---1---1--1---
158     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
159     : --1-1----1--1--
159     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
160     : 1----1-1-----1-
160     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
161     : -1---1---1--1--
161     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
180 (*) : -1-1-------11--
180     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
181     : --11-----1---1-
181     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
182     : 1---1---1----1-
182     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
183     : --1-1--1----1--
183     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
184     : 1----1-1---1---
184     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
185     : -1---1--11-----
185     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
204 (*) : -1-1--------11-
204     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
205     : --11-----1-1---
205     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
206     : 1---1-------11-
206     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
207     : --1-1--11------
207     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
208     : 1----1---1-1---
208     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
209     : -1---1-11------
209     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
228 (*) : -1-1----1----1-
228     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
229     : --11---1---1---
229     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
230     : 1---1------11--
230     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
231     : --1-1---11-----
231     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
232     : 1----1---1---1-
232     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
233     : -1---1-1----1--
233     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE3,NODE5) | ~internal(NODE1) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 23 =====================
size : 18
num_suborbits: 3
186 (*) : 01-----0----1--
186     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
187     : 0-1-----01-----
187     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
188     : 10-------0---1-
188     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
189     : -01----1---0---
189     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
190     : 1-0--------10--
190     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
191     : -10-----1----0-
191     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
216 (*) : 01-----01------
216     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
217     : 0-1----10------
217     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
218     : 10-------0-1---
218     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
219     : -01------1-0---
219     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
220     : 1-0---------01-
220     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
221     : -10---------10-
221     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
240 (*) : 01------0---1--
240     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
241     : 0-1----0-1-----
241     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
242     : 10---------0-1-
242     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
243     : -01----1-0-----
243     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
244     : 1-0--------1-0-
244     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
245     : -10-----1---0--
245     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE2,NODE4,NODE3,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 24




=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
198 (*) : -1-1---0----1--
198     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
199     : --11----01-----
199     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
200     : 1---1----0---1-
200     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
201     : --1-1--1---0---
201     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
202     : 1----1-----10--
202     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
203     : -1---1--1----0-
203     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
222 (*) : -1-1---01------
222     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
223     : --11---10------
223     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
224     : 1---1----0-1---
224     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
225     : --1-1----1-0---
225     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
226     : 1----1------01-
226     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
227     : -1---1------10-
227     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
246 (*) : -1-1----0---1--
246     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --11---0-1-----
247     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1---1------0-1-
248     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1-1--1-0-----
249     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
250     : 1----1-----1-0-
250     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
251     : -1---1--1---0--
251     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE2,NODE4,NODE3,NODE1,NODE0. ~allowed_in(NODE0) | sent(NODE1,NODE4) | ~internal(NODE1) | ~sent(NODE2,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 24




=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
234 (*) : -1---0--0---1--
234     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
235     : --1-0--0-1-----
235     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
236     : 1----0-----0-1-
236     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
237     : --10---1-0-----
237     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
238     : 1---0------1-0-
238     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
239     : -1-0----1---0--
239     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
252 (*) : 0-------0--01--
252     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
253     : 0------0-1---0-
253     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
254     : -0------0--0-1-
254     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
255     : -0-----1-0--0--
255     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
256     : --0----0---1-0-
256     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
257     : --0-----10--0--
257     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
258 (*) : ---1----0--01--
258     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
259     : ---1---0-1---0-
259     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
260     : ----1---0--0-1-
260     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
261     : ----1--1-0--0--
261     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
262     : -----1-0---1-0-
262     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
263     : -----1--10--0--
263     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. sent(NODE0,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
264 (*) : -----0--0--01--
264     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
265     : ----0--0-1---0-
265     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
266     : -----0--0--0-1-
266     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
267     : ---0---1-0--0--
267     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
268     : ----0--0---1-0-
268     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
269     : ---0----10--0--
269     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
270 (*) : --1----0-1-0---
270     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
271     : -1------0---10-
271     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
272     : --1----100-----
272     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
273     : 1----------001-
273     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
274     : -1-----01---0--
274     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
275     : 1--------0-1-0-
275     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE0,NODE2,NODE1. ~allowed_in(NODE0) | sent(NODE1,NODE0) | ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | (NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 24
num_suborbits: 4
276 (*) : --1------1-0-1-
276     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
277     : -1---------110-
277     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
278     : --1----10---1--
278     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
279     : 1-------1---01-
279     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
280     : -1-----011-----
280     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
281     : 1------1-0-1---
281     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
282 (*) : --1-----01--1--
282     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
283     : -1-----0-1--1--
283     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
284     : --1----1---0-1-
284     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
285     : 1------1-0---1-
285     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
286     : -1------1--1-0-
286     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
287     : 1-------1--10--
287     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
288 (*) : --1----0-1--1--
288     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
289     : -1------01--1--
289     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
290     : --1----1-0---1-
290     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
291     : 1------1---0-1-
291     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
292     : -1------1--10--
292     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
293     : 1-------1--1-0-
293     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
342 (*) : --1----011-----
342     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
343     : -1-----10---1--
343     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
344     : --1----1-0-1---
344     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
345     : 1--------1-0-1-
345     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
346     : -1------1---01-
346     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
347     : 1----------110-
347     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE2,NODE4,NODE3,NODE5,NODE1,NODE0. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | sent(NODE4,NODE5) | ((NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE1 = NODE3 | NODE0 = NODE1 | NODE0 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 34




=== Prime Orbit 31 =====================
size : 24
num_suborbits: 4
294 (*) : -----0--01--1--
294     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
295     : ----0--0-1--1--
295     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
296     : -----0-1---0-1-
296     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
297     : ---0---1-0---1-
297     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
298     : ----0---1--1-0-
298     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
299     : ---0----1--10--
299     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
312 (*) : ----0---01--1--
312     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
313     : -----0-0-1--1--
313     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
314     : ---0---1---0-1-
314     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
315     : -----0-1-0---1-
315     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
316     : ---0----1--1-0-
316     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
317     : ----0---1--10--
317     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
330 (*) : ---0-----1-0-1-
330     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
331     : ---0-------110-
331     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
332     : ----0--10---1--
332     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
333     : ----0---1---01-
333     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
334     : -----0-011-----
334     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
335     : -----0-1-0-1---
335     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
336 (*) : -----0---1-0-1-
336     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
337     : ----0------110-
337     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
338     : -----0-10---1--
338     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
339     : ---0----1---01-
339     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
340     : ----0--011-----
340     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
341     : ---0---1-0-1---
341     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
num_forall :   5
num_exists :   0
num_literals : 24
quantified form : forall NODE2,NODE4,NODE3,NODE1,NODE0. ~sent(NODE0,NODE2) | internal(NODE4) | ~sent(NODE1,NODE3) | sent(NODE3,NODE1) | ((NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 29




=== Prime Orbit 32 =====================
size : 12
num_suborbits: 2
300 (*) : 0-------01--1--
300     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
301     : 0------0-1--1--
301     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
302     : -0-----1---0-1-
302     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
303     : -0-----1-0---1-
303     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
304     : --0-----1--1-0-
304     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
305     : --0-----1--10--
305     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
318 (*) : -0-------1-0-1-
318     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
319     : --0--------110-
319     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
320     : 0------10---1--
320     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
321     : --0-----1---01-
321     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
322     : 0------011-----
322     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
323     : -0-----1-0-1---
323     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE0,NODE2,NODE3,NODE1. ~sent(NODE0,NODE2) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | allowed_in(NODE3) | ((NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2))
qcost : 16




=== Prime Orbit 33 =====================
size : 12
num_suborbits: 2
306 (*) : ---1----01--1--
306     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
307     : ---1---0-1--1--
307     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
308     : ----1--1---0-1-
308     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
309     : ----1--1-0---1-
309     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
310     : -----1--1--1-0-
310     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
311     : -----1--1--10--
311     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
324 (*) : ----1----1-0-1-
324     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
325     : -----1-----110-
325     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
326     : ---1---10---1--
326     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
327     : -----1--1---01-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
328     : ---1---011-----
328     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
329     : ----1--1-0-1---
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE0,NODE2,NODE3,NODE1. ~internal(NODE0) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE0) | sent(NODE0,NODE2) | ((NODE0 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE1 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE0 = NODE2 | NODE2 = NODE3 | NODE0 = NODE3))
qcost : 16



[QRM NOTE]: Time elapsed since start: 9.208 seconds

[QRM NOTE]: Time elapsed since last: 1.890 seconds

[QRM NOTE]: Peak memory: 2435513 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Solution : [0, 15] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


New level: 2
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 576), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 576), (19, 256), (20, 256), (21, 288), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 576), (19, 256), (20, 256), (21, 288), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Decide 3 with phase True at level 2

After decision at level 2
 pending : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]


New level: 3
 pending : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 576), (19, 256), (20, 256), (21, 288), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, 0), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 3 : {28}

After reduction : 
 pending  : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, 0), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 3 among pending : [2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Decide 2 with phase True at level 3

After decision at level 3
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2]


New level: 4
 pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 4 among pending : [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]


New level: 5
 pending : [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, 0), (14, 0), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 5 : {13, 14}

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]


Before reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, 0), (14, 0), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]


Solution : [0, 15, 1, 3, 2, 11] has cost 43.


Decide in level 5 among pending : [4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 4]


New level: 6
 pending : [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 6 : {32, 33, 7, 8, 26, 27}

After reduction : 
 pending  : [5, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [5, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Solution : [0, 15, 1, 3, 2, 11, 4] has cost 49.


Decide in level 6 among pending : [5, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 5]


New level: 7
 pending : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 5]


Before reduction : 
 pending  : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 7 : {6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 5]


Solution : [0, 15, 1, 3, 2, 11, 4, 5] has cost 62.


Before backtrack at level 7
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 4, 5]

After backtrack at level 7
 pending : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Solution : [0, 15, 1, 3, 2, 11, 4] has cost 49.


Decide in level 7 among pending : [6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 6]


New level: 8
 pending : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 6]


Before reduction : 
 pending  : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 6]


Solution : [0, 15, 1, 3, 2, 11, 4, 6] has cost 55.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 4, 6]

After backtrack at level 8
 pending : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Solution : [0, 15, 1, 3, 2, 11, 4] has cost 49.


Decide in level 8 among pending : [9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 9]


New level: 9
 pending : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 9]


Before reduction : 
 pending  : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 9]


Solution : [0, 15, 1, 3, 2, 11, 4, 9] has cost 55.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 4, 9]

After backtrack at level 9
 pending : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Solution : [0, 15, 1, 3, 2, 11, 4] has cost 49.


Decide in level 9 among pending : [10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 10]


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 10]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 10]


Solution : [0, 15, 1, 3, 2, 11, 4, 10] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 4, 10]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

Essensial at level 10 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 4, 12]


Solution : [0, 15, 1, 3, 2, 11, 4, 12] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 4, 12]

After backtrack at level 10
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31]
 solution : [0, 15, 1, 3, 2, 11, 4]

After backtrack at level 9
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10]
 solution : [0, 15, 1, 3, 2, 11, 4]

After backtrack at level 8
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 11, 4]

After backtrack at level 7
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6]
 solution : [0, 15, 1, 3, 2, 11, 4]


Before backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6]
 solution : [0, 15, 1, 3, 2, 11, 4]

After backtrack at level 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11]


Before reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11]


Solution : [0, 15, 1, 3, 2, 11] has cost 43.


Decide in level 6 among pending : [12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 16 with phase True at level 6

After decision at level 6
 pending : [12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]


New level: 7
 pending : [12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]


Before reduction : 
 pending  : [12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, 0), (20, 0), (21, 13), (22, 13), (23, 10), (24, 10), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 7 : {25, 19, 20}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, 0), (20, 0), (21, 13), (22, 13), (23, 10), (24, 10), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, -1), (21, 13), (22, 13), (23, 10), (24, 10), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16]


Solution : [0, 15, 1, 3, 2, 11, 16] has cost 53.


Decide in level 7 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 7, 8, 26, 27, 32, 33, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, -1), (21, 13), (22, 13), (23, 10), (24, 10), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]


New level: 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 8, 26, 27, 32, 33, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, -1), (21, 13), (22, 13), (23, 10), (24, 10), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 8, 26, 27}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]


Solution : [0, 15, 1, 3, 2, 11, 16, 7] has cost 66.


Before backtrack at level 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]

After backtrack at level 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 16, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 16]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 16]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 26, 27}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 8]


Solution : [0, 15, 1, 3, 2, 11, 16, 8] has cost 59.


Before backtrack at level 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5]
 solution : [0, 15, 1, 3, 2, 11, 16, 8]

After backtrack at level 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 16]


Before backtrack at level 7
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11, 16]

After backtrack at level 7
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11, 16]


Invert decision for 16 at level 6


New level: 7
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11]


Solution : [0, 15, 1, 3, 2, 11] has cost 43.


Decide in level 7 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 8, 26, 27, 32, 33, 19, 20, 25, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11, 8]


New level: 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 26, 27, 32, 33, 19, 20, 25, 7]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 24), (18, 24), (19, 128), (20, 1), (21, 24), (22, 24), (23, 24), (24, 24), (25, 1), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 7, 26, 27}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Solution : [0, 15, 1, 3, 2, 11, 8] has cost 49.


Decide in level 8 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 6, 5, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 9]


New level: 9
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 9]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {5, 6, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 9]


Solution : [0, 15, 1, 3, 2, 11, 8, 9] has cost 55.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 8, 9]

After backtrack at level 9
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Solution : [0, 15, 1, 3, 2, 11, 8] has cost 49.


Decide in level 9 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 6, 5, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 6]


New level: 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 6]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {5, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 6]


Solution : [0, 15, 1, 3, 2, 11, 8, 6] has cost 55.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 8, 6]

After backtrack at level 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Solution : [0, 15, 1, 3, 2, 11, 8] has cost 49.


Decide in level 10 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 5, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 5]


New level: 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 5]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 5]


Solution : [0, 15, 1, 3, 2, 11, 8, 5] has cost 62.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 8, 5]

After backtrack at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Solution : [0, 15, 1, 3, 2, 11, 8] has cost 49.


Decide in level 11 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 12]


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 12]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 12]


Solution : [0, 15, 1, 3, 2, 11, 8, 12] has cost 58.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 8, 12]

After backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 11, 8, 10]


Solution : [0, 15, 1, 3, 2, 11, 8, 10] has cost 58.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 2, 11, 8, 10]

After backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25]
 solution : [0, 15, 1, 3, 2, 11, 8]

After backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 11, 8]

After backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5]
 solution : [0, 15, 1, 3, 2, 11, 8]

After backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6]
 solution : [0, 15, 1, 3, 2, 11, 8]


Before backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6]
 solution : [0, 15, 1, 3, 2, 11, 8]

After backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 26, 27, 32, 33, 7, 9]
 solution : [0, 15, 1, 3, 2, 11, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 26, 27, 32, 33, 7, 9]
 solution : [0, 15, 1, 3, 2, 11]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 26, 27, 32, 33, 7, 9]
 solution : [0, 15, 1, 3, 2, 11]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 26, 27}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9]
 solution : [0, 15, 1, 3, 2, 11, 7]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9]
 solution : [0, 15, 1, 3, 2, 11, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9]
 solution : [0, 15, 1, 3, 2, 11, 7]


Solution : [0, 15, 1, 3, 2, 11, 7] has cost 56.


Before backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9]
 solution : [0, 15, 1, 3, 2, 11, 7]

After backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]


Before backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 11]

After backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8]
 solution : [0, 15, 1, 3, 2, 11]


Before backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8]
 solution : [0, 15, 1, 3, 2, 11]

After backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16]
 solution : [0, 15, 1, 3, 2, 11]


Before backtrack at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16]
 solution : [0, 15, 1, 3, 2, 11]

After backtrack at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, 1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 5 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 19, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]


New level: 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 16, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, 128), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 0), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 6 : {16}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 0), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19]


Solution : [0, 15, 1, 3, 2, 19] has cost 48.


Decide in level 6 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]


New level: 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 9, 7, 26, 27, 32, 33, 8, 13, 14, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

Covered at level 7 : {6, 9, 10, 12, 13, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]


Solution : [0, 15, 1, 3, 2, 19, 5] has cost 61.


Before backtrack at level 7
 pending : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 5]

After backtrack at level 7
 pending : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19]


Solution : [0, 15, 1, 3, 2, 19] has cost 48.


Decide in level 7 among pending : [17, 18, 21, 22, 23, 24, 7, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 4, 8, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]


Solution : [0, 15, 1, 3, 2, 19, 7] has cost 61.


Before backtrack at level 8
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 7]

After backtrack at level 8
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19]


Solution : [0, 15, 1, 3, 2, 19] has cost 48.


Decide in level 8 among pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 6, 9, 13, 14, 26, 27, 32, 33, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]


New level: 9
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

Covered at level 9 : {9, 10, 12, 13, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]


Solution : [0, 15, 1, 3, 2, 19, 6] has cost 54.


Decide in level 9 among pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6, 8]


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 4, 17, 18, 21, 22, 23, 24, 26, 27}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 8]


Solution : [0, 15, 1, 3, 2, 19, 6, 8] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 6, 8]

After backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 19, 6]

Essensial at level 10 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 17, 18, 21, 22, 23, 24, 26, 27}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 4]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, -1), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 6, 4]


Solution : [0, 15, 1, 3, 2, 19, 6, 4] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 6, 4]

After backtrack at level 10
 pending : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 19, 6]


Before backtrack at level 9
 pending : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 19, 6]

After backtrack at level 9
 pending : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19]


Solution : [0, 15, 1, 3, 2, 19] has cost 48.


Decide in level 9 among pending : [4, 17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19, 4]


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14, 8]
 solution : [0, 15, 1, 3, 2, 19, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 8, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Solution : [0, 15, 1, 3, 2, 19, 4] has cost 54.


Decide in level 10 among pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 9, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 9]


New level: 11
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 9]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {10, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 9]


Solution : [0, 15, 1, 3, 2, 19, 4, 9] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 4, 9]

After backtrack at level 11
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Solution : [0, 15, 1, 3, 2, 19, 4] has cost 54.


Decide in level 11 among pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 13, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 20, 25, 12, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 0), (21, 4), (22, 4), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : {25, 20, 14}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 0), (21, 4), (22, 4), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]


Solution : [0, 15, 1, 3, 2, 19, 4, 13] has cost 59.


Before backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]

After backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Solution : [0, 15, 1, 3, 2, 19, 4] has cost 54.


Decide in level 12 among pending : [17, 18, 21, 22, 23, 24, 10, 29, 30, 31, 12, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 10]


New level: 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 10]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {12, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 10]


Solution : [0, 15, 1, 3, 2, 19, 4, 10] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 4, 10]

After backtrack at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]

Essensial at level 13 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 4, 12]


Solution : [0, 15, 1, 3, 2, 19, 4, 12] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 4, 12]

After backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before backtrack at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 4]

After backtrack at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before backtrack at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 19, 4]

After backtrack at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13]
 solution : [0, 15, 1, 3, 2, 19, 4]


Before backtrack at level 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13]
 solution : [0, 15, 1, 3, 2, 19, 4]

After backtrack at level 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 26, 27, 32, 33, 8, 9]
 solution : [0, 15, 1, 3, 2, 19, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 26, 27, 32, 33, 8, 9]
 solution : [0, 15, 1, 3, 2, 19]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 26, 27, 32, 33, 8, 9]
 solution : [0, 15, 1, 3, 2, 19]

Essensial at level 10 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 26, 27}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 9]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 9]
 solution : [0, 15, 1, 3, 2, 19, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 9]
 solution : [0, 15, 1, 3, 2, 19, 8]


Solution : [0, 15, 1, 3, 2, 19, 8] has cost 54.


Decide in level 10 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 13 with phase True at level 10

After decision at level 10
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]


New level: 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 0), (21, 4), (22, 4), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : {25, 20, 14}

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 0), (21, 4), (22, 4), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]


Solution : [0, 15, 1, 3, 2, 19, 8, 13] has cost 59.


Before backtrack at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]

After backtrack at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 13]


Invert decision for 13 at level 10


New level: 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, -1), (21, 4), (22, 4), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Solution : [0, 15, 1, 3, 2, 19, 8] has cost 54.


Decide in level 11 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 9, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 9]


New level: 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 9]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {10, 12, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 9]


Solution : [0, 15, 1, 3, 2, 19, 8, 9] has cost 60.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 8, 9]

After backtrack at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Solution : [0, 15, 1, 3, 2, 19, 8] has cost 54.


Decide in level 12 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 12]


New level: 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 12]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {10, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 12]


Solution : [0, 15, 1, 3, 2, 19, 8, 12] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 8, 12]

After backtrack at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 19, 8, 10]


Solution : [0, 15, 1, 3, 2, 19, 8, 10] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 19, 8, 10]

After backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 19, 8]

After backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 19, 8]

After backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9]
 solution : [0, 15, 1, 3, 2, 19, 8]


Before backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9]
 solution : [0, 15, 1, 3, 2, 19, 8]

After backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13]
 solution : [0, 15, 1, 3, 2, 19]


Before backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13]
 solution : [0, 15, 1, 3, 2, 19]

After backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4]
 solution : [0, 15, 1, 3, 2, 19]


Before backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4]
 solution : [0, 15, 1, 3, 2, 19]

After backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6]
 solution : [0, 15, 1, 3, 2, 19]


Before backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6]
 solution : [0, 15, 1, 3, 2, 19]

After backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7]
 solution : [0, 15, 1, 3, 2, 19]


Before backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7]
 solution : [0, 15, 1, 3, 2, 19]

After backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 6 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 9, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 9 with phase True at level 6

After decision at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2, 9]


New level: 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2, 9]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 8, 26, 27, 32, 33, 13, 4, 6, 7, 16, 5]
 solution : [0, 15, 1, 3, 2, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 128), (17, 6), (18, 6), (19, -1), (20, 0), (21, 6), (22, 6), (23, 6), (24, 6), (25, 0), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Covered at level 7 : {5, 6, 10, 12, 13, 14, 20, 25}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 128), (17, 6), (18, 6), (19, -1), (20, 0), (21, 6), (22, 6), (23, 6), (24, 6), (25, 0), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]


Solution : [0, 15, 1, 3, 2, 9] has cost 44.


Decide in level 7 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 7, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 8]


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 4, 7, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 8]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 8]


Solution : [0, 15, 1, 3, 2, 9, 8] has cost 50.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 3, 2, 9, 8]

After backtrack at level 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]


Solution : [0, 15, 1, 3, 2, 9] has cost 44.


Decide in level 8 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 7, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 4]


New level: 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 7, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 4]


Solution : [0, 15, 1, 3, 2, 9, 4] has cost 50.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 2, 9, 4]

After backtrack at level 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 7, 16]
 solution : [0, 15, 1, 3, 2, 9]

Essensial at level 9 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 16, 17, 18, 21, 22, 23, 24, 26, 27, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 9, 7]


Solution : [0, 15, 1, 3, 2, 9, 7] has cost 57.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 2, 9, 7]

After backtrack at level 9
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16]
 solution : [0, 15, 1, 3, 2, 9]


Before backtrack at level 8
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16]
 solution : [0, 15, 1, 3, 2, 9]

After backtrack at level 8
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4]
 solution : [0, 15, 1, 3, 2, 9]


Before backtrack at level 7
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4]
 solution : [0, 15, 1, 3, 2, 9]

After backtrack at level 7
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2, 9]


Invert decision for 9 at level 6


New level: 7
 pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 7 : set()

After reduction : 
 pending  : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 7 among pending : [7, 17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2, 7]


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2, 7]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 16, 4, 10, 20, 25, 14, 12, 13, 6, 5, 8]
 solution : [0, 15, 1, 3, 2, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 8 : {32, 33, 4, 8, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5]
 solution : [0, 15, 1, 3, 2, 7]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5]
 solution : [0, 15, 1, 3, 2, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5]
 solution : [0, 15, 1, 3, 2, 7]


Solution : [0, 15, 1, 3, 2, 7] has cost 51.


Before backtrack at level 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5]
 solution : [0, 15, 1, 3, 2, 7]

After backtrack at level 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 8 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 16, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 16 with phase True at level 8

After decision at level 8
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16]


New level: 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16]


Solution : [0, 15, 1, 3, 2, 16] has cost 48.


Decide in level 9 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 13, 6, 5, 26, 27, 32, 33, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 20, 25, 14, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 0), (21, 13), (22, 13), (23, 10), (24, 10), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 10 : {25, 20, 14}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 0), (21, 13), (22, 13), (23, 10), (24, 10), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, -1), (21, 13), (22, 13), (23, 10), (24, 10), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]


Solution : [0, 15, 1, 3, 2, 16, 13] has cost 53.


Before backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 13]

After backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, -1), (21, 13), (22, 13), (23, 10), (24, 10), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]


Solution : [0, 15, 1, 3, 2, 16] has cost 48.


Decide in level 10 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 6, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 6]


New level: 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 26, 27, 32, 33, 4, 8, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

Covered at level 11 : {5, 10, 12, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, 0), (21, 2), (22, 2), (23, 2), (24, 2), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 6]


Solution : [0, 15, 1, 3, 2, 16, 6] has cost 54.


Before backtrack at level 11
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8]
 solution : [0, 15, 1, 3, 2, 16, 6]

After backtrack at level 11
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 2), (18, 2), (19, -1), (20, -1), (21, 2), (22, 2), (23, 2), (24, 2), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16]


Solution : [0, 15, 1, 3, 2, 16] has cost 48.


Decide in level 11 among pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 4, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 26, 27, 32, 33, 8, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 10), (18, 10), (19, -1), (20, 1), (21, 13), (22, 13), (23, 10), (24, 10), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 2), (31, 2), (32, 3), (33, 3)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 8, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]


Solution : [0, 15, 1, 3, 2, 16, 4] has cost 54.


Before backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 4]

After backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 26, 27, 32, 33, 8]
 solution : [0, 15, 1, 3, 2, 16, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 26, 27, 32, 33, 8]
 solution : [0, 15, 1, 3, 2, 16]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 26, 27, 32, 33, 8]
 solution : [0, 15, 1, 3, 2, 16]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 12 : {32, 33, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 8]


Solution : [0, 15, 1, 3, 2, 16, 8] has cost 54.


Before backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 16, 8]

After backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 16]


Before backtrack at level 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33]
 solution : [0, 15, 1, 3, 2, 16]

After backtrack at level 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 16]


Before backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 16]

After backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6]
 solution : [0, 15, 1, 3, 2, 16]


Before backtrack at level 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6]
 solution : [0, 15, 1, 3, 2, 16]

After backtrack at level 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2, 16]


Invert decision for 16 at level 8


New level: 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 4), (18, 4), (19, -1), (20, 1), (21, 4), (22, 4), (23, 4), (24, 4), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 9 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 5, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2, 5]


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2, 5]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 8, 26, 27, 32, 33, 4, 6, 13]
 solution : [0, 15, 1, 3, 2, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 0), (21, 6), (22, 6), (23, 6), (24, 6), (25, 0), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Covered at level 10 : {6, 10, 12, 13, 14, 20, 25}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 5]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 0), (21, 6), (22, 6), (23, 6), (24, 6), (25, 0), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 5]


Solution : [0, 15, 1, 3, 2, 5] has cost 51.


Before backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4]
 solution : [0, 15, 1, 3, 2, 5]

After backtrack at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, -1), (21, 6), (22, 6), (23, 6), (24, 6), (25, -1), (26, 32), (27, 32), (28, -1), (29, 2), (30, 2), (31, 2), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2]


Solution : [0, 15, 1, 3, 2] has cost 38.


Decide in level 10 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 8, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]


New level: 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 26, 27, 32, 33, 4, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 24), (18, 24), (19, -1), (20, 4), (21, 24), (22, 24), (23, 24), (24, 24), (25, 4), (26, 32), (27, 32), (28, -1), (29, 8), (30, 8), (31, 8), (32, 12), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 4, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 6, 13]
 solution : [0, 15, 1, 3, 2, 8]


Solution : [0, 15, 1, 3, 2, 8] has cost 44.


Decide in level 11 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 6, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8, 6]


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8, 6]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {10, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 6]


Solution : [0, 15, 1, 3, 2, 8, 6] has cost 50.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 2, 8, 6]

After backtrack at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]
 solution : [0, 15, 1, 3, 2, 8]


Solution : [0, 15, 1, 3, 2, 8] has cost 44.


Decide in level 12 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 8, 13]


New level: 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 8, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 13 : {14}

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]


Solution : [0, 15, 1, 3, 2, 8, 13] has cost 49.


Decide in level 13 among pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 10, 12, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13, 10]


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13, 10]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {12, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 10]


Solution : [0, 15, 1, 3, 2, 8, 13, 10] has cost 58.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 8, 13, 10]

After backtrack at level 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 12, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 13, 12]


Solution : [0, 15, 1, 3, 2, 8, 13, 12] has cost 58.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 8, 13, 12]

After backtrack at level 14
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]


Before backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25]
 solution : [0, 15, 1, 3, 2, 8, 13]

After backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8]


Solution : [0, 15, 1, 3, 2, 8] has cost 44.


Decide in level 13 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8, 12]


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8, 12]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {10, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 12]


Solution : [0, 15, 1, 3, 2, 8, 12] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 8, 12]

After backtrack at level 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 10]
 solution : [0, 15, 1, 3, 2, 8]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 8, 10]


Solution : [0, 15, 1, 3, 2, 8, 10] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 8, 10]

After backtrack at level 14
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 8]


Before backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 8]

After backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 8]


Before backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 8]

After backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13]
 solution : [0, 15, 1, 3, 2, 8]


Before backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13]
 solution : [0, 15, 1, 3, 2, 8]

After backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 26, 27, 32, 33, 4, 6]
 solution : [0, 15, 1, 3, 2, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 26, 27, 32, 33, 4, 6]
 solution : [0, 15, 1, 3, 2]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 26, 27, 32, 33, 4, 6]
 solution : [0, 15, 1, 3, 2]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 26, 27}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 6]
 solution : [0, 15, 1, 3, 2, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 6]
 solution : [0, 15, 1, 3, 2, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, 0), (27, 0), (28, -1), (29, 2), (30, 2), (31, 2), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 6]
 solution : [0, 15, 1, 3, 2, 4]


Solution : [0, 15, 1, 3, 2, 4] has cost 44.


Decide in level 11 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 13, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]


New level: 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : {14}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]


Solution : [0, 15, 1, 3, 2, 4, 13] has cost 49.


Decide in level 12 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 6]


New level: 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 6]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {10, 12, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 6]


Solution : [0, 15, 1, 3, 2, 4, 13, 6] has cost 55.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 13, 6]

After backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13]


Solution : [0, 15, 1, 3, 2, 4, 13] has cost 49.


Decide in level 13 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 10]


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 10]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 1), (21, 5), (22, 5), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {12, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 10]


Solution : [0, 15, 1, 3, 2, 4, 13, 10] has cost 58.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 13, 10]

After backtrack at level 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12]
 solution : [0, 15, 1, 3, 2, 4, 13]

Essensial at level 14 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 13, 12]


Solution : [0, 15, 1, 3, 2, 4, 13, 12] has cost 58.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 13, 12]

After backtrack at level 14
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25]
 solution : [0, 15, 1, 3, 2, 4, 13]

After backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10]
 solution : [0, 15, 1, 3, 2, 4, 13]


Before backtrack at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10]
 solution : [0, 15, 1, 3, 2, 4, 13]

After backtrack at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 2, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 2, 4]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 2, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 2, 4]


Solution : [0, 15, 1, 3, 2, 4] has cost 44.


Decide in level 12 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 6]


New level: 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 6]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {10, 12, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 6]


Solution : [0, 15, 1, 3, 2, 4, 6] has cost 50.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 6]

After backtrack at level 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4]


Before reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4]


Solution : [0, 15, 1, 3, 2, 4] has cost 44.


Decide in level 13 among pending : [12, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

Decide 12 with phase True at level 13

After decision at level 13
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 12]


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 12]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 6), (18, 6), (19, -1), (20, 4), (21, 5), (22, 5), (23, 6), (24, 6), (25, 4), (26, -1), (27, -1), (28, -1), (29, 2), (30, 2), (31, 2), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {10, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 12]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 12]


Solution : [0, 15, 1, 3, 2, 4, 12] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 12]

After backtrack at level 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4, 12]


Invert decision for 12 at level 13


New level: 14
 pending : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4]


Before reduction : 
 pending  : [17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 2, 4]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 2, 4, 10]


Solution : [0, 15, 1, 3, 2, 4, 10] has cost 53.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 2, 4, 10]

After backtrack at level 14
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 4]


Before backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14]
 solution : [0, 15, 1, 3, 2, 4]

After backtrack at level 13
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 4]


Before backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12]
 solution : [0, 15, 1, 3, 2, 4]

After backtrack at level 12
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6]
 solution : [0, 15, 1, 3, 2, 4]


Before backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6]
 solution : [0, 15, 1, 3, 2, 4]

After backtrack at level 11
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 2]


Before backtrack at level 4
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 2]

After backtrack at level 4
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19, 11]
 solution : [0, 15, 1, 3, 2]


Invert decision for 2 at level 3


New level: 4
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19, 11]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19, 11]
 solution : [0, 15, 1, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19, 11]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 4 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]


New level: 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 14, 12, 6, 4, 26, 27, 32, 33, 13, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 32), (21, 144), (22, 144), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, 0), (14, 0), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 5 : {13, 14}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 32, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 32, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, 0), (14, 0), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 32, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 5 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 32, 33, 8, 5, 16, 7, 9, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Decide 32 with phase True at level 5

After decision at level 5
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]


New level: 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 33, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, 0)]

Covered at level 6 : {33}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32]


Solution : [0, 15, 1, 3, 11, 32] has cost 41.


Decide in level 6 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 4, 26, 27, 8, 5, 16, 7, 9, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 4 with phase True at level 6

After decision at level 6
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


New level: 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 26, 27, 8, 5, 16, 7, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 7 : {8, 26, 27, 7}

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 7 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 6, 5, 16, 9, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 6]


New level: 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 6]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {5, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 6]


Solution : [0, 15, 1, 3, 11, 32, 4, 6] has cost 53.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 4, 6]

After backtrack at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 8 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 5, 16, 9, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 5]


New level: 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 5]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 5]


Solution : [0, 15, 1, 3, 11, 32, 4, 5] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 4, 5]

After backtrack at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 9 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 9, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 9]


New level: 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 9]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 4, 9]


Solution : [0, 15, 1, 3, 11, 32, 4, 9] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 4, 9]

After backtrack at level 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 10 among pending : [10, 17, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 17 with phase True at level 10

After decision at level 10
 pending : [10, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]


New level: 11
 pending : [10, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]


Before reduction : 
 pending  : [10, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 12, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]


Solution : [0, 15, 1, 3, 11, 32, 4, 17] has cost 81.


Before backtrack at level 11
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]

After backtrack at level 11
 pending : [10, 12, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 17]


Invert decision for 17 at level 10


New level: 11
 pending : [10, 12, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 12, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 11 among pending : [10, 12, 18, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]


New level: 12
 pending : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]


Before reduction : 
 pending  : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {16, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]


Solution : [0, 15, 1, 3, 11, 32, 4, 18] has cost 81.


Before backtrack at level 12
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]

After backtrack at level 12
 pending : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Solution : [0, 15, 1, 3, 11, 32, 4] has cost 47.


Decide in level 12 among pending : [10, 12, 21, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 21 with phase True at level 12

After decision at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {16, 19, 20, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]


Solution : [0, 15, 1, 3, 11, 32, 4, 21] has cost 81.


Before backtrack at level 13
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]

After backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4, 21]


Invert decision for 21 at level 12


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

Essensial at level 13 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {16, 19, 20, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 22]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 22]


Solution : [0, 15, 1, 3, 11, 32, 4, 22] has cost 81.


Before backtrack at level 13
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 4, 22]

After backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 8
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 8
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 32, 4]


Before backtrack at level 7
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 32, 4]

After backtrack at level 7
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 32, 4]


Invert decision for 4 at level 6


New level: 7
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 32]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 32]


Solution : [0, 15, 1, 3, 11, 32] has cost 41.


Decide in level 7 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 8, 7, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


New level: 8
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : {26, 27, 7}

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 8 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 9]


New level: 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 9]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {5, 6, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 9]


Solution : [0, 15, 1, 3, 11, 32, 8, 9] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 8, 9]

After backtrack at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 9 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 5]


New level: 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 5]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {6, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 5]


Solution : [0, 15, 1, 3, 11, 32, 8, 5] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 8, 5]

After backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 10 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 6]


New level: 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 6]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 32, 8, 6]


Solution : [0, 15, 1, 3, 11, 32, 8, 6] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 11, 32, 8, 6]

After backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 11 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]


New level: 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]


Solution : [0, 15, 1, 3, 11, 32, 8, 18] has cost 81.


Before backtrack at level 12
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]

After backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 12 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {16, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]


Solution : [0, 15, 1, 3, 11, 32, 8, 17] has cost 81.


Before backtrack at level 13
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]

After backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8]


Solution : [0, 15, 1, 3, 11, 32, 8] has cost 47.


Decide in level 13 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 22 with phase True at level 13

After decision at level 13
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]


New level: 14
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 19, 20, 21, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]


Solution : [0, 15, 1, 3, 11, 32, 8, 22] has cost 81.


Before backtrack at level 14
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]

After backtrack at level 14
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8, 22]


Invert decision for 22 at level 13


New level: 14
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 32, 8]

Essensial at level 14 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 19, 20, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 21]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 21]


Solution : [0, 15, 1, 3, 11, 32, 8, 21] has cost 81.


Before backtrack at level 14
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 32, 8, 21]

After backtrack at level 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 32, 8]


Before backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 32, 8]

After backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 32, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 32]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 32]

Essensial at level 8 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : {26, 27}

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 32, 7]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 32, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 32, 7]


Solution : [0, 15, 1, 3, 11, 32, 7] has cost 54.


Before backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 32, 7]

After backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27]
 solution : [0, 15, 1, 3, 11, 32]


Before backtrack at level 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27]
 solution : [0, 15, 1, 3, 11, 32]

After backtrack at level 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8]
 solution : [0, 15, 1, 3, 11, 32]


Before backtrack at level 6
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8]
 solution : [0, 15, 1, 3, 11, 32]

After backtrack at level 6
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 33, 4]
 solution : [0, 15, 1, 3, 11, 32]


Invert decision for 32 at level 5


New level: 6
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 33, 4]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 33, 4]
 solution : [0, 15, 1, 3, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, 192)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 33, 4]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 6 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 33, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, 192)]

Decide 33 with phase True at level 6

After decision at level 6
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]


New level: 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]


Solution : [0, 15, 1, 3, 11, 33] has cost 41.


Decide in level 7 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 7, 26, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 7 with phase True at level 7

After decision at level 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33, 7]


New level: 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33, 7]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : {8, 26, 27, 4}

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 7]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 7]


Solution : [0, 15, 1, 3, 11, 33, 7] has cost 54.


Before backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 7]

After backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33, 7]


Invert decision for 7 at level 7


New level: 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]
 solution : [0, 15, 1, 3, 11, 33]


Solution : [0, 15, 1, 3, 11, 33] has cost 41.


Decide in level 8 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 4]
 solution : [0, 15, 1, 3, 11, 33, 8]


New level: 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 4]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9, 26, 27, 4]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 101), (22, 101), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : {26, 27, 4}

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 9 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 6]


New level: 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 6]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {5, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 6]


Solution : [0, 15, 1, 3, 11, 33, 8, 6] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 8, 6]

After backtrack at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 10 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 5]


New level: 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 5]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 5]


Solution : [0, 15, 1, 3, 11, 33, 8, 5] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 8, 5]

After backtrack at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 11 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 9]


New level: 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 9]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 8, 9]


Solution : [0, 15, 1, 3, 11, 33, 8, 9] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 8, 9]

After backtrack at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 12 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 17 with phase True at level 12

After decision at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]


New level: 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {16, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]


Solution : [0, 15, 1, 3, 11, 33, 8, 17] has cost 81.


Before backtrack at level 13
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]

After backtrack at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8, 17]


Invert decision for 17 at level 12


New level: 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 13 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]


New level: 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]


Solution : [0, 15, 1, 3, 11, 33, 8, 18] has cost 81.


Before backtrack at level 14
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]

After backtrack at level 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8]


Solution : [0, 15, 1, 3, 11, 33, 8] has cost 47.


Decide in level 14 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]


New level: 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {16, 19, 20, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]


Solution : [0, 15, 1, 3, 11, 33, 8, 21] has cost 81.


Before backtrack at level 15
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]

After backtrack at level 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 8]

Essensial at level 15 : {22}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {16, 19, 20, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 22]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 22]


Solution : [0, 15, 1, 3, 11, 33, 8, 22] has cost 81.


Before backtrack at level 15
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 8, 22]

After backtrack at level 15
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 14
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 14
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 33, 8]


Before backtrack at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 33, 8]

After backtrack at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 4, 6]
 solution : [0, 15, 1, 3, 11, 33, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 4, 6]
 solution : [0, 15, 1, 3, 11, 33]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 26, 27, 4, 6]
 solution : [0, 15, 1, 3, 11, 33]

Essensial at level 9 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : {26, 27}

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 9 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 9, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 9]


New level: 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 9]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 10 : {5, 6, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 9]


Solution : [0, 15, 1, 3, 11, 33, 4, 9] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 4, 9]

After backtrack at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 10 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 5]


New level: 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 5]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {6, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 5]


Solution : [0, 15, 1, 3, 11, 33, 4, 5] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 4, 5]

After backtrack at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 11 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 6]


New level: 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 6]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 12 : {10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 33, 4, 6]


Solution : [0, 15, 1, 3, 11, 33, 4, 6] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 11, 33, 4, 6]

After backtrack at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 12 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 18, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 13 : {16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]


Solution : [0, 15, 1, 3, 11, 33, 4, 18] has cost 81.


Before backtrack at level 13
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]

After backtrack at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 13 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]


New level: 14
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, 22), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 14 : {16, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]


Solution : [0, 15, 1, 3, 11, 33, 4, 17] has cost 81.


Before backtrack at level 14
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]

After backtrack at level 14
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4]


Solution : [0, 15, 1, 3, 11, 33, 4] has cost 47.


Decide in level 14 among pending : [10, 12, 22, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Decide 22 with phase True at level 14

After decision at level 14
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]


New level: 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, 1), (21, 19), (22, 19), (23, 6), (24, 6), (25, 1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {16, 19, 20, 21, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]


Solution : [0, 15, 1, 3, 11, 33, 4, 22] has cost 81.


Before backtrack at level 15
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]

After backtrack at level 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4, 22]


Invert decision for 22 at level 14


New level: 15
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 21]
 solution : [0, 15, 1, 3, 11, 33, 4]

Essensial at level 15 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 15 : {16, 19, 20, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 21]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 21]


Solution : [0, 15, 1, 3, 11, 33, 4, 21] has cost 81.


Before backtrack at level 15
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 33, 4, 21]

After backtrack at level 15
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 14
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 13
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 12
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 11
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 10
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 33, 4]


Before backtrack at level 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 33, 4]

After backtrack at level 9
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9]
 solution : [0, 15, 1, 3, 11, 33]


Before backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9]
 solution : [0, 15, 1, 3, 11, 33]

After backtrack at level 8
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8]
 solution : [0, 15, 1, 3, 11, 33]


Before backtrack at level 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8]
 solution : [0, 15, 1, 3, 11, 33]

After backtrack at level 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 33]


Invert decision for 33 at level 6


New level: 7
 pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 7 among pending : [10, 12, 21, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]


New level: 8
 pending : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 31, 20, 25, 16, 19, 22, 17, 18, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, 144), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 0), (18, 0), (19, 1), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {17, 18, 20, 22, 23, 24, 25, 29, 30, 31}

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 1), (17, 0), (18, 0), (19, 1), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]


Solution : [0, 15, 1, 3, 11, 21] has cost 59.


Before backtrack at level 8
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 21]

After backtrack at level 8
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 31, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 31, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 31, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 1), (17, -1), (18, -1), (19, 1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 31, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 8 among pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 31, 20, 25, 22, 17, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Decide 31 with phase True at level 8

After decision at level 8
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]


New level: 9
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 29, 30, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 1), (21, -1), (22, 52), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {29, 30}

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 1), (21, -1), (22, 52), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 1), (21, -1), (22, 52), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]


Solution : [0, 15, 1, 3, 11, 31] has cost 54.


Before backtrack at level 9
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18]
 solution : [0, 15, 1, 3, 11, 31]

After backtrack at level 9
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 31]


Invert decision for 31 at level 8


New level: 9
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 1), (21, -1), (22, 52), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 9 among pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 22, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 22]


New level: 10
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 22]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 128), (19, 128), (20, 8), (21, -1), (22, 144), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 0), (18, 0), (19, 128), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {17, 18, 20, 23, 24, 25, 29, 30}

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 22]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 128), (17, 0), (18, 0), (19, 128), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 22]


Solution : [0, 15, 1, 3, 11, 22] has cost 59.


Before backtrack at level 10
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7]
 solution : [0, 15, 1, 3, 11, 22]

After backtrack at level 10
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, 128), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 64), (17, -1), (18, -1), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 10 among pending : [10, 12, 16, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 10

After decision at level 10
 pending : [10, 12, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]


New level: 11
 pending : [10, 12, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]


Before reduction : 
 pending  : [10, 12, 19, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 20, 25, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, 0), (20, 0), (21, -1), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {25, 19, 20}

After reduction : 
 pending  : [10, 12, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]


Before reduction : 
 pending  : [10, 12, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, 0), (20, 0), (21, -1), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16]


Solution : [0, 15, 1, 3, 11, 16] has cost 35.


Decide in level 11 among pending : [10, 12, 6, 5, 4, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [10, 12, 6, 5, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


New level: 12
 pending : [10, 12, 6, 5, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 6, 5, 26, 27, 9, 8, 7, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {8, 26, 27, 7}

After reduction : 
 pending  : [10, 12, 6, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, 0), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Solution : [0, 15, 1, 3, 11, 16, 4] has cost 41.


Decide in level 12 among pending : [10, 12, 6, 5, 9, 23, 24, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 6]


New level: 13
 pending : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 6]


Before reduction : 
 pending  : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {5, 9, 10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 6]


Solution : [0, 15, 1, 3, 11, 16, 4, 6] has cost 47.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 4, 6]

After backtrack at level 13
 pending : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Solution : [0, 15, 1, 3, 11, 16, 4] has cost 41.


Decide in level 13 among pending : [10, 12, 5, 9, 23, 24, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 5]


New level: 14
 pending : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 5]


Before reduction : 
 pending  : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {9, 10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 5]


Solution : [0, 15, 1, 3, 11, 16, 4, 5] has cost 54.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 4, 5]

After backtrack at level 14
 pending : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 9, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Solution : [0, 15, 1, 3, 11, 16, 4] has cost 41.


Decide in level 14 among pending : [10, 12, 9, 23, 24, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 9]


New level: 15
 pending : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 9]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 4, 9]


Solution : [0, 15, 1, 3, 11, 16, 4, 9] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 4, 9]

After backtrack at level 15
 pending : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 23, 24, 17, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Solution : [0, 15, 1, 3, 11, 16, 4] has cost 41.


Decide in level 15 among pending : [10, 12, 23, 24, 17, 18, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]


New level: 16
 pending : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]


Before reduction : 
 pending  : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {18, 23, 24, 29, 30}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]


Solution : [0, 15, 1, 3, 11, 16, 4, 17] has cost 75.


Before backtrack at level 16
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]

After backtrack at level 16
 pending : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 18, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

Essensial at level 16 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {24, 29, 30, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 18]


Solution : [0, 15, 1, 3, 11, 16, 4, 18] has cost 75.


Before backtrack at level 16
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 4, 18]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 4]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before backtrack at level 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 4]

After backtrack at level 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before backtrack at level 13
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9]
 solution : [0, 15, 1, 3, 11, 16, 4]

After backtrack at level 13
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 16, 4]


Before backtrack at level 12
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 16, 4]

After backtrack at level 12
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 16, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 16]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 16]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 8, 7, 6]
 solution : [0, 15, 1, 3, 11, 16]


Solution : [0, 15, 1, 3, 11, 16] has cost 35.


Decide in level 12 among pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 8, 7, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


New level: 13
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 15), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {26, 27, 7}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Solution : [0, 15, 1, 3, 11, 16, 8] has cost 41.


Decide in level 13 among pending : [10, 12, 18, 23, 24, 29, 30, 17, 9, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 9]


New level: 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 9]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {5, 6, 10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 9]


Solution : [0, 15, 1, 3, 11, 16, 8, 9] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 8, 9]

After backtrack at level 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Solution : [0, 15, 1, 3, 11, 16, 8] has cost 41.


Decide in level 14 among pending : [10, 12, 18, 23, 24, 29, 30, 17, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 5]


New level: 15
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 5]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {6, 10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 5]


Solution : [0, 15, 1, 3, 11, 16, 8, 5] has cost 54.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 8, 5]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Solution : [0, 15, 1, 3, 11, 16, 8] has cost 41.


Decide in level 15 among pending : [10, 12, 18, 23, 24, 29, 30, 17, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 6]


New level: 16
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 6]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {10, 12, 17, 18, 23, 24, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 16, 8, 6]


Solution : [0, 15, 1, 3, 11, 16, 8, 6] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 11, 16, 8, 6]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8]


Solution : [0, 15, 1, 3, 11, 16, 8] has cost 41.


Decide in level 16 among pending : [10, 12, 18, 23, 24, 29, 30, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Decide 18 with phase True at level 16

After decision at level 16
 pending : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]


New level: 17
 pending : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {17, 23, 24, 29, 30}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]


Solution : [0, 15, 1, 3, 11, 16, 8, 18] has cost 75.


Before backtrack at level 17
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]

After backtrack at level 17
 pending : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8, 18]


Invert decision for 18 at level 16


New level: 17
 pending : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 30, 17]
 solution : [0, 15, 1, 3, 11, 16, 8]

Essensial at level 17 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {24, 29, 30, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 17]


Solution : [0, 15, 1, 3, 11, 16, 8, 17] has cost 75.


Before backtrack at level 17
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 16, 8, 17]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before backtrack at level 16
 pending : [10, 12, 17, 23, 24, 29, 30]
 solution : [0, 15, 1, 3, 11, 16, 8]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 29, 30, 18]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before backtrack at level 15
 pending : [10, 12, 17, 23, 24, 29, 30, 18]
 solution : [0, 15, 1, 3, 11, 16, 8]

After backtrack at level 15
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before backtrack at level 14
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6]
 solution : [0, 15, 1, 3, 11, 16, 8]

After backtrack at level 14
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 16, 8]


Before backtrack at level 13
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 16, 8]

After backtrack at level 13
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 16, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 16]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 26, 27, 7, 9]
 solution : [0, 15, 1, 3, 11, 16]

Essensial at level 13 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {26, 27}

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 16, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 16, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 16, 7]


Solution : [0, 15, 1, 3, 11, 16, 7] has cost 48.


Before backtrack at level 13
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 16, 7]

After backtrack at level 13
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27]
 solution : [0, 15, 1, 3, 11, 16]


Before backtrack at level 12
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27]
 solution : [0, 15, 1, 3, 11, 16]

After backtrack at level 12
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8]
 solution : [0, 15, 1, 3, 11, 16]


Before backtrack at level 11
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8]
 solution : [0, 15, 1, 3, 11, 16]

After backtrack at level 11
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 16]


Invert decision for 16 at level 10


New level: 11
 pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 9), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 11 among pending : [10, 12, 17, 23, 24, 29, 30, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 30 with phase True at level 11

After decision at level 11
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]


New level: 12
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, 64), (19, 64), (20, 1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {29}

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, 64), (19, 64), (20, 1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, 64), (19, 64), (20, 1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]


Solution : [0, 15, 1, 3, 11, 30] has cost 59.


Before backtrack at level 12
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4]
 solution : [0, 15, 1, 3, 11, 30]

After backtrack at level 12
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11, 30]


Invert decision for 30 at level 11


New level: 12
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 64), (18, 64), (19, 64), (20, 1), (21, -1), (22, -1), (23, 16), (24, 16), (25, 1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 12 among pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 7, 26, 27, 8, 19, 20, 25, 4, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11, 7]


New level: 13
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 26, 27, 8, 19, 20, 25, 4, 29]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {8, 26, 27, 4}

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25, 29]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25, 29]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25, 29]
 solution : [0, 15, 1, 3, 11, 7]


Solution : [0, 15, 1, 3, 11, 7] has cost 38.


Decide in level 13 among pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]


New level: 14
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, 4), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]


Solution : [0, 15, 1, 3, 11, 7, 29] has cost 48.


Before backtrack at level 14
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]

After backtrack at level 14
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, 4), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Solution : [0, 15, 1, 3, 11, 7] has cost 38.


Decide in level 14 among pending : [10, 12, 17, 23, 24, 18, 6, 5, 9, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 6]


New level: 15
 pending : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 6]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {5, 9, 10, 12, 17, 18, 19, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 6]


Solution : [0, 15, 1, 3, 11, 7, 6] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 11, 7, 6]

After backtrack at level 15
 pending : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Solution : [0, 15, 1, 3, 11, 7] has cost 38.


Decide in level 15 among pending : [10, 12, 17, 23, 24, 18, 5, 9, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 5]


New level: 16
 pending : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 5]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {9, 10, 12, 17, 18, 19, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 5]


Solution : [0, 15, 1, 3, 11, 7, 5] has cost 51.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 11, 7, 5]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Solution : [0, 15, 1, 3, 11, 7] has cost 38.


Decide in level 16 among pending : [10, 12, 17, 23, 24, 18, 9, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 9]


New level: 17
 pending : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 9]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {10, 12, 17, 18, 19, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 7, 9]


Solution : [0, 15, 1, 3, 11, 7, 9] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 7, 9]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Solution : [0, 15, 1, 3, 11, 7] has cost 38.


Decide in level 17 among pending : [10, 12, 17, 23, 24, 18, 19, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 17

After decision at level 17
 pending : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 17]


New level: 18
 pending : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 17]


Before reduction : 
 pending  : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, 8), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {18, 19, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 17]


Solution : [0, 15, 1, 3, 11, 7, 17] has cost 72.


Before backtrack at level 18
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 17]

After backtrack at level 18
 pending : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7, 17]


Invert decision for 17 at level 17


New level: 18
 pending : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before reduction : 
 pending  : [10, 12, 23, 24, 18, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

Essensial at level 18 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {19, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, 0), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 18]


Solution : [0, 15, 1, 3, 11, 7, 18] has cost 72.


Before backtrack at level 18
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 7, 18]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]


Before backtrack at level 17
 pending : [10, 12, 18, 23, 24, 19, 20, 25]
 solution : [0, 15, 1, 3, 11, 7]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 7]


Before backtrack at level 16
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 7]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9]
 solution : [0, 15, 1, 3, 11, 7]


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9]
 solution : [0, 15, 1, 3, 11, 7]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 7]


Before backtrack at level 14
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 7]

After backtrack at level 14
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 7]


Before backtrack at level 13
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 7]

After backtrack at level 13
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 13 among pending : [10, 12, 18, 23, 24, 19, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 13

After decision at level 13
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]


New level: 14
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, 128), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 0), (21, -1), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {25, 20}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 0), (21, -1), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 8, 4, 29]
 solution : [0, 15, 1, 3, 11, 19]


Solution : [0, 15, 1, 3, 11, 19] has cost 35.


Decide in level 14 among pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 8, 4, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 14

After decision at level 14
 pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 4, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


New level: 15
 pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 4, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 26, 27, 4, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, -1), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {26, 27, 4}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Solution : [0, 15, 1, 3, 11, 19, 8] has cost 41.


Decide in level 15 among pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 9]


New level: 16
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 9]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {5, 6, 10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 9]


Solution : [0, 15, 1, 3, 11, 19, 8, 9] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 8, 9]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Solution : [0, 15, 1, 3, 11, 19, 8] has cost 41.


Decide in level 16 among pending : [10, 12, 18, 23, 24, 17, 5, 6, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 16

After decision at level 16
 pending : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 5]


New level: 17
 pending : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 5]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {6, 10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 5]


Solution : [0, 15, 1, 3, 11, 19, 8, 5] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 8, 5]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 5]


Invert decision for 5 at level 16


New level: 17
 pending : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Solution : [0, 15, 1, 3, 11, 19, 8] has cost 41.


Decide in level 17 among pending : [10, 12, 18, 23, 24, 17, 6, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 6]


New level: 18
 pending : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 6]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 8, 6]


Solution : [0, 15, 1, 3, 11, 19, 8, 6] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 8, 6]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Solution : [0, 15, 1, 3, 11, 19, 8] has cost 41.


Decide in level 18 among pending : [10, 12, 18, 23, 24, 17, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 18 with phase True at level 18

After decision at level 18
 pending : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]


New level: 19
 pending : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {24, 17, 29, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]


Solution : [0, 15, 1, 3, 11, 19, 8, 18] has cost 75.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]

After backtrack at level 19
 pending : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8, 18]


Invert decision for 18 at level 18


New level: 19
 pending : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

Essensial at level 19 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {24, 29, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 17]


Solution : [0, 15, 1, 3, 11, 19, 8, 17] has cost 75.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 8, 17]

After backtrack at level 19
 pending : [10, 12, 17, 23, 24, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before backtrack at level 18
 pending : [10, 12, 17, 23, 24, 29]
 solution : [0, 15, 1, 3, 11, 19, 8]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before backtrack at level 17
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 8]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 29, 18, 6]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before backtrack at level 16
 pending : [10, 12, 17, 23, 24, 29, 18, 6]
 solution : [0, 15, 1, 3, 11, 19, 8]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 19, 8]


Before backtrack at level 15
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 19, 8]

After backtrack at level 15
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5, 26, 27, 4, 9]
 solution : [0, 15, 1, 3, 11, 19, 8]


Invert decision for 8 at level 14


New level: 15
 pending : [10, 12, 17, 23, 24, 29, 18, 6, 5, 26, 27, 4, 9]
 solution : [0, 15, 1, 3, 11, 19]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 6, 5, 26, 27, 4, 9]
 solution : [0, 15, 1, 3, 11, 19]

Essensial at level 15 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {26, 27}

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Solution : [0, 15, 1, 3, 11, 19, 4] has cost 41.


Decide in level 15 among pending : [10, 12, 17, 23, 24, 29, 18, 6, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 6]


New level: 16
 pending : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 6]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {5, 9, 10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 6]


Solution : [0, 15, 1, 3, 11, 19, 4, 6] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 4, 6]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Solution : [0, 15, 1, 3, 11, 19, 4] has cost 41.


Decide in level 16 among pending : [10, 12, 17, 23, 24, 29, 18, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 16

After decision at level 16
 pending : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 5]


New level: 17
 pending : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 5]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {9, 10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 5]


Solution : [0, 15, 1, 3, 11, 19, 4, 5] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 4, 5]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4, 5]


Invert decision for 5 at level 16


New level: 17
 pending : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Solution : [0, 15, 1, 3, 11, 19, 4] has cost 41.


Decide in level 17 among pending : [10, 12, 17, 23, 24, 29, 18, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 17

After decision at level 17
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 9]


New level: 18
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 9]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {10, 12, 17, 18, 23, 24, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 19, 4, 9]


Solution : [0, 15, 1, 3, 11, 19, 4, 9] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 11, 19, 4, 9]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 9]


Invert decision for 9 at level 17


New level: 18
 pending : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4]


Solution : [0, 15, 1, 3, 11, 19, 4] has cost 41.


Decide in level 18 among pending : [10, 12, 17, 23, 24, 29, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]


New level: 19
 pending : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {24, 18, 29, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]


Solution : [0, 15, 1, 3, 11, 19, 4, 17] has cost 75.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]

After backtrack at level 19
 pending : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 29, 18]
 solution : [0, 15, 1, 3, 11, 19, 4]

Essensial at level 19 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {24, 29, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, -1), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 18]


Solution : [0, 15, 1, 3, 11, 19, 4, 18] has cost 75.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 19, 4, 18]

After backtrack at level 19
 pending : [10, 12, 18, 23, 24, 29]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before backtrack at level 18
 pending : [10, 12, 18, 23, 24, 29]
 solution : [0, 15, 1, 3, 11, 19, 4]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 29, 17]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before backtrack at level 17
 pending : [10, 12, 18, 23, 24, 29, 17]
 solution : [0, 15, 1, 3, 11, 19, 4]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 29, 17, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before backtrack at level 16
 pending : [10, 12, 18, 23, 24, 29, 17, 9]
 solution : [0, 15, 1, 3, 11, 19, 4]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 19, 4]


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 19, 4]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6]
 solution : [0, 15, 1, 3, 11, 19]


Before backtrack at level 14
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6]
 solution : [0, 15, 1, 3, 11, 19]

After backtrack at level 14
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11, 19]


Invert decision for 19 at level 13


New level: 14
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11]


Solution : [0, 15, 1, 3, 11] has cost 25.


Decide in level 14 among pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 4, 26, 27, 6, 20, 25, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11, 4]


New level: 15
 pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 26, 27, 6, 20, 25, 8]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {8, 26, 27}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 29, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4]


Solution : [0, 15, 1, 3, 11, 4] has cost 31.


Decide in level 15 among pending : [10, 12, 18, 23, 24, 29, 17, 9, 5, 6, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 15

After decision at level 15
 pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


New level: 16
 pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 9, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Solution : [0, 15, 1, 3, 11, 4, 29] has cost 41.


Decide in level 16 among pending : [10, 12, 18, 23, 24, 17, 9, 5, 6, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 9]


New level: 17
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 9]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {5, 6, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 9]


Solution : [0, 15, 1, 3, 11, 4, 29, 9] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 29, 9]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Solution : [0, 15, 1, 3, 11, 4, 29] has cost 41.


Decide in level 17 among pending : [10, 12, 18, 23, 24, 17, 5, 6, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 5]


New level: 18
 pending : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 5]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {6, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 5]


Solution : [0, 15, 1, 3, 11, 4, 29, 5] has cost 54.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 29, 5]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Solution : [0, 15, 1, 3, 11, 4, 29] has cost 41.


Decide in level 18 among pending : [10, 12, 18, 23, 24, 17, 6, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 18

After decision at level 18
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 6]


New level: 19
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 6]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 29, 6]


Solution : [0, 15, 1, 3, 11, 4, 29, 6] has cost 47.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 29, 6]

After backtrack at level 19
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 6]


Invert decision for 6 at level 18


New level: 19
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Solution : [0, 15, 1, 3, 11, 4, 29] has cost 41.


Decide in level 19 among pending : [10, 12, 18, 23, 24, 17, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 18 with phase True at level 19

After decision at level 19
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]


New level: 20
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {17, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]


Solution : [0, 15, 1, 3, 11, 4, 29, 18] has cost 75.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]

After backtrack at level 20
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29, 18]


Invert decision for 18 at level 19


New level: 20
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

Essensial at level 20 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {24, 25, 20, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 17]


Solution : [0, 15, 1, 3, 11, 4, 29, 17] has cost 75.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 29, 17]

After backtrack at level 20
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 4, 29]

After backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 29]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6]
 solution : [0, 15, 1, 3, 11, 4, 29]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 4, 29]


Before backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 4, 29]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 4, 29]


Invert decision for 29 at level 15


New level: 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]


Solution : [0, 15, 1, 3, 11, 4] has cost 31.


Decide in level 16 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4, 6]


New level: 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4, 6]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {5, 9, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 6]


Solution : [0, 15, 1, 3, 11, 4, 6] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 6]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]
 solution : [0, 15, 1, 3, 11, 4]


Solution : [0, 15, 1, 3, 11, 4] has cost 31.


Decide in level 17 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4, 5]


New level: 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4, 5]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {9, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 5]


Solution : [0, 15, 1, 3, 11, 4, 5] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 5]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 11, 4]


Solution : [0, 15, 1, 3, 11, 4] has cost 31.


Decide in level 18 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 18

After decision at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 9]


New level: 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 9]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 4, 9]


Solution : [0, 15, 1, 3, 11, 4, 9] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 3, 11, 4, 9]

After backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 9]


Invert decision for 9 at level 18


New level: 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4]


Solution : [0, 15, 1, 3, 11, 4] has cost 31.


Decide in level 19 among pending : [10, 12, 17, 23, 24, 20, 25, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 17]


New level: 20
 pending : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 17]


Before reduction : 
 pending  : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {18, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 17]


Solution : [0, 15, 1, 3, 11, 4, 17] has cost 65.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 17]

After backtrack at level 20
 pending : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 4]

Essensial at level 20 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {24, 25, 20, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 18]


Solution : [0, 15, 1, 3, 11, 4, 18] has cost 65.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 4, 18]

After backtrack at level 20
 pending : [10, 12, 18, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 4]


Before backtrack at level 19
 pending : [10, 12, 18, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 4]

After backtrack at level 19
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 4]


Before backtrack at level 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 4]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9]
 solution : [0, 15, 1, 3, 11, 4]


Before backtrack at level 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9]
 solution : [0, 15, 1, 3, 11, 4]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 4]


Before backtrack at level 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5]
 solution : [0, 15, 1, 3, 11, 4]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 4]


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 4]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 29]
 solution : [0, 15, 1, 3, 11, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 29]
 solution : [0, 15, 1, 3, 11]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 26, 27, 8, 29]
 solution : [0, 15, 1, 3, 11]

Essensial at level 15 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {26, 27}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 29]
 solution : [0, 15, 1, 3, 11, 8]


Solution : [0, 15, 1, 3, 11, 8] has cost 31.


Decide in level 15 among pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 15

After decision at level 15
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]


New level: 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]


Solution : [0, 15, 1, 3, 11, 8, 29] has cost 41.


Before backtrack at level 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]

After backtrack at level 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 29]


Invert decision for 29 at level 15


New level: 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]


Solution : [0, 15, 1, 3, 11, 8] has cost 31.


Decide in level 16 among pending : [10, 12, 18, 23, 24, 20, 25, 17, 9, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 9]


New level: 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 9]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {5, 6, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 9]


Solution : [0, 15, 1, 3, 11, 8, 9] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 11, 8, 9]

After backtrack at level 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]
 solution : [0, 15, 1, 3, 11, 8]


Solution : [0, 15, 1, 3, 11, 8] has cost 31.


Decide in level 17 among pending : [10, 12, 18, 23, 24, 20, 25, 17, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8, 5]


New level: 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8, 5]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {6, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 5]


Solution : [0, 15, 1, 3, 11, 8, 5] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 11, 8, 5]

After backtrack at level 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17, 6]
 solution : [0, 15, 1, 3, 11, 8]


Solution : [0, 15, 1, 3, 11, 8] has cost 31.


Decide in level 18 among pending : [10, 12, 18, 23, 24, 20, 25, 17, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 18

After decision at level 18
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 6]


New level: 19
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 6]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 11, 8, 6]


Solution : [0, 15, 1, 3, 11, 8, 6] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 3, 11, 8, 6]

After backtrack at level 19
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 6]


Invert decision for 6 at level 18


New level: 19
 pending : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8]


Solution : [0, 15, 1, 3, 11, 8] has cost 31.


Decide in level 19 among pending : [10, 12, 18, 23, 24, 20, 25, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 18 with phase True at level 19

After decision at level 19
 pending : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 18]


New level: 20
 pending : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 18]


Before reduction : 
 pending  : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {17, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 18]


Solution : [0, 15, 1, 3, 11, 8, 18] has cost 65.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 18]

After backtrack at level 20
 pending : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8, 18]


Invert decision for 18 at level 19


New level: 20
 pending : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8]


Before reduction : 
 pending  : [10, 12, 23, 24, 20, 25, 17]
 solution : [0, 15, 1, 3, 11, 8]

Essensial at level 20 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {24, 25, 20, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 17]


Solution : [0, 15, 1, 3, 11, 8, 17] has cost 65.


Before backtrack at level 20
 pending : [10, 12]
 solution : [0, 15, 1, 3, 11, 8, 17]

After backtrack at level 20
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 8]


Before backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 11, 8]

After backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 8]


Before backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 11, 8]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6]
 solution : [0, 15, 1, 3, 11, 8]


Before backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6]
 solution : [0, 15, 1, 3, 11, 8]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 8]


Before backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5]
 solution : [0, 15, 1, 3, 11, 8]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 8]


Before backtrack at level 15
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9]
 solution : [0, 15, 1, 3, 11, 8]

After backtrack at level 15
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 14
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 14
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 13
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 13
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 11
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 11
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 10
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 10
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 9
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 9
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 8
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 8
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 7
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 7
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 6
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 6
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33]
 solution : [0, 15, 1, 3, 11]


Before backtrack at level 5
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33]
 solution : [0, 15, 1, 3, 11]

After backtrack at level 5
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33, 14, 13, 32]
 solution : [0, 15, 1, 3, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33, 14, 13, 32]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33, 14, 13, 32]
 solution : [0, 15, 1, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33, 14, 13, 32]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 5 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 33, 14, 13, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

Decide 33 with phase True at level 5

After decision at level 5
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13, 32]
 solution : [0, 15, 1, 3, 33]


New level: 6
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13, 32]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13, 32]
 solution : [0, 15, 1, 3, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, 0), (33, -1)]

Covered at level 6 : {32}

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33]


Solution : [0, 15, 1, 3, 33] has cost 36.


Decide in level 6 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 6, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33, 6]


New level: 7
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33, 6]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 5, 9, 8, 26, 27, 29, 4, 19, 7, 30, 16, 22, 31, 21, 14, 13]
 solution : [0, 15, 1, 3, 33, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 7 : {5, 9, 10, 12, 13, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21]
 solution : [0, 15, 1, 3, 33, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21]
 solution : [0, 15, 1, 3, 33, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21]
 solution : [0, 15, 1, 3, 33, 6]


Solution : [0, 15, 1, 3, 33, 6] has cost 42.


Before backtrack at level 7
 pending : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21]
 solution : [0, 15, 1, 3, 33, 6]

After backtrack at level 7
 pending : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]


Solution : [0, 15, 1, 3, 33] has cost 36.


Decide in level 7 among pending : [17, 23, 24, 18, 8, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [17, 23, 24, 18, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]


New level: 8
 pending : [17, 23, 24, 18, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 4, 19, 7, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, 0), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 8 : {26, 27, 4, 7}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, 0), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]


Solution : [0, 15, 1, 3, 33, 8] has cost 42.


Before backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 8]

After backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33]


Solution : [0, 15, 1, 3, 33] has cost 36.


Decide in level 8 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 5, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]


New level: 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 9 : {9, 10, 12, 13, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]


Solution : [0, 15, 1, 3, 33, 5] has cost 49.


Before backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7]
 solution : [0, 15, 1, 3, 33, 5]

After backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33]


Solution : [0, 15, 1, 3, 33] has cost 36.


Decide in level 9 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]


New level: 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 7, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 10 : {26, 27, 7}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]


Solution : [0, 15, 1, 3, 33, 4] has cost 42.


Before backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 4]

After backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 7]
 solution : [0, 15, 1, 3, 33, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 7]
 solution : [0, 15, 1, 3, 33]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 26, 27, 7]
 solution : [0, 15, 1, 3, 33]

Essensial at level 10 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 10 : {26, 27}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 7]


Solution : [0, 15, 1, 3, 33, 7] has cost 49.


Before backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13]
 solution : [0, 15, 1, 3, 33, 7]

After backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27]
 solution : [0, 15, 1, 3, 33]


Before backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27]
 solution : [0, 15, 1, 3, 33]

After backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 33]


Before backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 33]

After backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5]
 solution : [0, 15, 1, 3, 33]


Before backtrack at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5]
 solution : [0, 15, 1, 3, 33]

After backtrack at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8]
 solution : [0, 15, 1, 3, 33]


Before backtrack at level 6
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8]
 solution : [0, 15, 1, 3, 33]

After backtrack at level 6
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 32, 6]
 solution : [0, 15, 1, 3, 33]


Invert decision for 33 at level 5


New level: 6
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 32, 6]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 32, 6]
 solution : [0, 15, 1, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 32, 6]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 6 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 32, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, -1)]

Decide 32 with phase True at level 6

After decision at level 6
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32]


New level: 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, 192), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32]


Solution : [0, 15, 1, 3, 32] has cost 36.


Decide in level 7 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 9, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32, 9]


New level: 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 7, 26, 27, 4, 5, 8, 6]
 solution : [0, 15, 1, 3, 32, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 16), (18, 16), (19, 8), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 8 : {5, 6, 10, 12, 13, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 16), (18, 16), (19, 8), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 16), (18, 16), (19, 8), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 9]


Solution : [0, 15, 1, 3, 32, 9] has cost 42.


Before backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 9]

After backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 16), (18, 16), (19, 8), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32]


Solution : [0, 15, 1, 3, 32] has cost 36.


Decide in level 8 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 7, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]


New level: 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 9 : {8, 26, 27, 4}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]


Solution : [0, 15, 1, 3, 32, 7] has cost 49.


Before backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6]
 solution : [0, 15, 1, 3, 32, 7]

After backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32]


Solution : [0, 15, 1, 3, 32] has cost 36.


Decide in level 9 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 13, 5, 6, 26, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 13 with phase True at level 9

After decision at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]


New level: 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 14, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 85), (22, 85), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : {14}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 85), (22, 85), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 85), (22, 85), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]


Solution : [0, 15, 1, 3, 32, 13] has cost 41.


Before backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 13]

After backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32, 13]


Invert decision for 13 at level 9


New level: 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 1), (21, 85), (22, 85), (23, 18), (24, 18), (25, 1), (26, 8), (27, 8), (28, -1), (29, 2), (30, 9), (31, 9), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32]


Solution : [0, 15, 1, 3, 32] has cost 36.


Decide in level 10 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 5, 6, 26, 27, 4, 8, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32, 5]


New level: 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 26, 27, 4, 8, 14]
 solution : [0, 15, 1, 3, 32, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

Covered at level 11 : {6, 10, 12, 14, 20, 25, 29, 30, 31}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, 0), (21, 9), (22, 9), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 0), (31, 0), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 5]


Solution : [0, 15, 1, 3, 32, 5] has cost 49.


Before backtrack at level 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 32, 5]

After backtrack at level 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 16), (18, 16), (19, 32), (20, -1), (21, 9), (22, 9), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32]


Solution : [0, 15, 1, 3, 32] has cost 36.


Decide in level 11 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 4, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]


New level: 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 26, 27, 8, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 32), (17, 70), (18, 70), (19, 32), (20, 32), (21, 85), (22, 85), (23, 18), (24, 18), (25, 32), (26, 8), (27, 8), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 12 : {8, 26, 27}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]


Solution : [0, 15, 1, 3, 32, 4] has cost 42.


Before backtrack at level 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 4]

After backtrack at level 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 26, 27, 8]
 solution : [0, 15, 1, 3, 32, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 26, 27, 8]
 solution : [0, 15, 1, 3, 32]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 26, 27, 8]
 solution : [0, 15, 1, 3, 32]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 12 : {26, 27}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, 0), (27, 0), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 8]


Solution : [0, 15, 1, 3, 32, 8] has cost 42.


Before backtrack at level 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14]
 solution : [0, 15, 1, 3, 32, 8]

After backtrack at level 12
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27]
 solution : [0, 15, 1, 3, 32]


Before backtrack at level 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27]
 solution : [0, 15, 1, 3, 32]

After backtrack at level 11
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4]
 solution : [0, 15, 1, 3, 32]


Before backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4]
 solution : [0, 15, 1, 3, 32]

After backtrack at level 10
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5]
 solution : [0, 15, 1, 3, 32]


Before backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5]
 solution : [0, 15, 1, 3, 32]

After backtrack at level 9
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13]
 solution : [0, 15, 1, 3, 32]


Before backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13]
 solution : [0, 15, 1, 3, 32]

After backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7]
 solution : [0, 15, 1, 3, 32]


Before backtrack at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7]
 solution : [0, 15, 1, 3, 32]

After backtrack at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 32]


Invert decision for 32 at level 6


New level: 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 1), (17, 22), (18, 22), (19, 1), (20, 32), (21, 19), (22, 19), (23, 6), (24, 6), (25, 32), (26, -1), (27, -1), (28, -1), (29, 16), (30, 29), (31, 28), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 7 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 31, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

Decide 31 with phase True at level 7

After decision at level 7
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]


New level: 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 29, 30, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, 144), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 4), (21, 36), (22, 36), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {29, 30}

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 4), (21, 36), (22, 36), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 4), (21, 36), (22, 36), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]


Solution : [0, 15, 1, 3, 31] has cost 49.


Before backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9]
 solution : [0, 15, 1, 3, 31]

After backtrack at level 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 31]


Invert decision for 31 at level 7


New level: 8
 pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 32), (17, 64), (18, 64), (19, 32), (20, 4), (21, 36), (22, 36), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 8 among pending : [17, 23, 24, 18, 19, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 8

After decision at level 8
 pending : [17, 23, 24, 18, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]


New level: 9
 pending : [17, 23, 24, 18, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [17, 23, 24, 18, 16, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, 128), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 0), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {16}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 0), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19]


Solution : [0, 15, 1, 3, 19] has cost 30.


Decide in level 9 among pending : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 6, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19, 6]


New level: 10
 pending : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 10, 12, 20, 25, 14, 8, 26, 27, 4, 5, 13, 7, 9, 29, 30]
 solution : [0, 15, 1, 3, 19, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, 10), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {5, 9, 10, 12, 13, 14, 20, 25, 29}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 8, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 8, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, 10), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 8, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]


Solution : [0, 15, 1, 3, 19, 6] has cost 36.


Decide in level 10 among pending : [17, 23, 24, 18, 22, 21, 8, 26, 27, 4, 7, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 8]


New level: 11
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {4, 7, 17, 18, 21, 22, 23, 24, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 8]


Solution : [0, 15, 1, 3, 19, 6, 8] has cost 42.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 3, 19, 6, 8]

After backtrack at level 11
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]


Solution : [0, 15, 1, 3, 19, 6] has cost 36.


Decide in level 11 among pending : [17, 23, 24, 18, 22, 21, 26, 27, 4, 7, 30]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 4]


New level: 12
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {7, 17, 18, 21, 22, 23, 24, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 4]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 4]


Solution : [0, 15, 1, 3, 19, 6, 4] has cost 42.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 19, 6, 4]

After backtrack at level 12
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 7, 30]
 solution : [0, 15, 1, 3, 19, 6]

Essensial at level 12 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {17, 18, 21, 22, 23, 24, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 6, 7]


Solution : [0, 15, 1, 3, 19, 6, 7] has cost 49.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 3, 19, 6, 7]

After backtrack at level 12
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30]
 solution : [0, 15, 1, 3, 19, 6]


Before backtrack at level 11
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30]
 solution : [0, 15, 1, 3, 19, 6]

After backtrack at level 11
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4]
 solution : [0, 15, 1, 3, 19, 6]


Before backtrack at level 10
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4]
 solution : [0, 15, 1, 3, 19, 6]

After backtrack at level 10
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19]


Solution : [0, 15, 1, 3, 19] has cost 30.


Decide in level 10 among pending : [7, 17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19, 7]


New level: 11
 pending : [17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 26, 27, 30, 4, 10, 12, 20, 25, 14, 5, 13, 9, 29, 8]
 solution : [0, 15, 1, 3, 19, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {8, 26, 27, 4}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 7]


Solution : [0, 15, 1, 3, 19, 7] has cost 43.


Before backtrack at level 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 7]

After backtrack at level 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19]


Solution : [0, 15, 1, 3, 19] has cost 30.


Decide in level 11 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 5, 13, 9, 29, 26, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]


New level: 12
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, 10), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {9, 10, 12, 13, 14, 20, 25, 29}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, 10), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]


Solution : [0, 15, 1, 3, 19, 5] has cost 43.


Before backtrack at level 12
 pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8]
 solution : [0, 15, 1, 3, 19, 5]

After backtrack at level 12
 pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, 10), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19]


Solution : [0, 15, 1, 3, 19] has cost 30.


Decide in level 12 among pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 4, 8, 10, 12, 20, 25, 14, 13, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]


New level: 13
 pending : [17, 23, 24, 18, 22, 21, 30, 26, 27, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 26, 27, 8, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, 73), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {8, 26, 27}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29]
 solution : [0, 15, 1, 3, 19, 4]


Solution : [0, 15, 1, 3, 19, 4] has cost 36.


Decide in level 13 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 13, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]


New level: 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 20, 25, 14, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {25, 20, 14}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]


Solution : [0, 15, 1, 3, 19, 4, 13] has cost 41.


Before backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29]
 solution : [0, 15, 1, 3, 19, 4, 13]

After backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4]


Solution : [0, 15, 1, 3, 19, 4] has cost 36.


Decide in level 14 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 9, 29, 20, 25, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4, 9]


New level: 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 12, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 4, 9]


Solution : [0, 15, 1, 3, 19, 4, 9] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 19, 4, 9]

After backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 20, 25, 14]
 solution : [0, 15, 1, 3, 19, 4]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {25, 20}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 4, 14]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 4, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 4, 14]


Solution : [0, 15, 1, 3, 19, 4, 14] has cost 38.


Before backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 4, 14]

After backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 4]


Before backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 4]

After backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9]
 solution : [0, 15, 1, 3, 19, 4]


Before backtrack at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9]
 solution : [0, 15, 1, 3, 19, 4]

After backtrack at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 26, 27, 8, 13]
 solution : [0, 15, 1, 3, 19, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 26, 27, 8, 13]
 solution : [0, 15, 1, 3, 19]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 26, 27, 8, 13]
 solution : [0, 15, 1, 3, 19]

Essensial at level 13 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {26, 27}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 13]
 solution : [0, 15, 1, 3, 19, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 13]
 solution : [0, 15, 1, 3, 19, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 13]
 solution : [0, 15, 1, 3, 19, 8]


Solution : [0, 15, 1, 3, 19, 8] has cost 36.


Decide in level 13 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 9, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8, 9]


New level: 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {10, 12, 13, 14, 17, 18, 20, 21, 22, 23, 24, 25, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 8, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 19, 8, 9]


Solution : [0, 15, 1, 3, 19, 8, 9] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 19, 8, 9]

After backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8]


Solution : [0, 15, 1, 3, 19, 8] has cost 36.


Decide in level 14 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 14

After decision at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8, 13]


New level: 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, 18), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, 77), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {25, 20, 14}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 13]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, 0), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 13]


Solution : [0, 15, 1, 3, 19, 8, 13] has cost 41.


Before backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 13]

After backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8, 13]


Invert decision for 13 at level 14


New level: 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {25, 20}

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 14]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 0), (21, 18), (22, 18), (23, 4), (24, 4), (25, 0), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 14]


Solution : [0, 15, 1, 3, 19, 8, 14] has cost 38.


Before backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29]
 solution : [0, 15, 1, 3, 19, 8, 14]

After backtrack at level 15
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8]


Before backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25]
 solution : [0, 15, 1, 3, 19, 8]

After backtrack at level 14
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8]


Before backtrack at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13]
 solution : [0, 15, 1, 3, 19, 8]

After backtrack at level 13
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9]
 solution : [0, 15, 1, 3, 19]


Before backtrack at level 12
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9]
 solution : [0, 15, 1, 3, 19]

After backtrack at level 12
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4]
 solution : [0, 15, 1, 3, 19]


Before backtrack at level 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4]
 solution : [0, 15, 1, 3, 19]

After backtrack at level 11
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5]
 solution : [0, 15, 1, 3, 19]


Before backtrack at level 10
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5]
 solution : [0, 15, 1, 3, 19]

After backtrack at level 10
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7]
 solution : [0, 15, 1, 3, 19]


Before backtrack at level 9
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7]
 solution : [0, 15, 1, 3, 19]

After backtrack at level 9
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 19]


Invert decision for 19 at level 8


New level: 9
 pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, 18), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, 71), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 9 among pending : [17, 23, 24, 18, 22, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [17, 23, 24, 18, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]


New level: 10
 pending : [17, 23, 24, 18, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]


Before reduction : 
 pending  : [17, 23, 24, 18, 21, 30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, 128), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 0), (18, 0), (19, -1), (20, 8), (21, 0), (22, -1), (23, 0), (24, 0), (25, 8), (26, 32), (27, 32), (28, -1), (29, 2), (30, 5), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {17, 18, 21, 23, 24}

After reduction : 
 pending  : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]


Before reduction : 
 pending  : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 0), (18, 0), (19, -1), (20, 8), (21, 0), (22, -1), (23, 0), (24, 0), (25, 8), (26, 32), (27, 32), (28, -1), (29, 2), (30, 5), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, -1), (29, 2), (30, 5), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]


Solution : [0, 15, 1, 3, 22] has cost 54.


Before backtrack at level 10
 pending : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6]
 solution : [0, 15, 1, 3, 22]

After backtrack at level 10
 pending : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, -1), (18, -1), (19, -1), (20, 8), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 32), (28, -1), (29, 2), (30, 5), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 10 among pending : [30, 10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

Decide 30 with phase True at level 10

After decision at level 10
 pending : [10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]


New level: 11
 pending : [10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]


Before reduction : 
 pending  : [10, 12, 29, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, 128), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 64), (18, 64), (19, -1), (20, 4), (21, 36), (22, -1), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {29}

After reduction : 
 pending  : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]


Before reduction : 
 pending  : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 64), (18, 64), (19, -1), (20, 4), (21, 36), (22, -1), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 64), (18, 64), (19, -1), (20, 4), (21, 36), (22, -1), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]


Solution : [0, 15, 1, 3, 30] has cost 54.


Before backtrack at level 11
 pending : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 30]

After backtrack at level 11
 pending : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 30]


Invert decision for 30 at level 10


New level: 11
 pending : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 64), (17, 64), (18, 64), (19, -1), (20, 4), (21, 36), (22, -1), (23, 16), (24, 16), (25, 4), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 11 among pending : [10, 12, 14, 20, 25, 13, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [10, 12, 14, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]


New level: 12
 pending : [10, 12, 14, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 14, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {14}

After reduction : 
 pending  : [10, 12, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, 0), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13]


Solution : [0, 15, 1, 3, 13] has cost 25.


Decide in level 12 among pending : [10, 12, 20, 25, 8, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [10, 12, 20, 25, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]


New level: 13
 pending : [10, 12, 20, 25, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 26, 27, 9, 4, 5, 7, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, 128), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {26, 27, 4, 7}

After reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21, 29]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 13 among pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]


New level: 14
 pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]


Before reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]


Solution : [0, 15, 1, 3, 13, 8, 29] has cost 41.


Before backtrack at level 14
 pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]

After backtrack at level 14
 pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 4), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 14 among pending : [10, 12, 20, 25, 9, 5, 16, 6, 17, 23, 24, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 9]


New level: 15
 pending : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 9]


Before reduction : 
 pending  : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {5, 6, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 9]


Solution : [0, 15, 1, 3, 13, 8, 9] has cost 37.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 13, 8, 9]

After backtrack at level 15
 pending : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 15 among pending : [10, 12, 20, 25, 5, 16, 6, 17, 23, 24, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 5]


New level: 16
 pending : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 5]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {6, 10, 12, 16, 17, 18, 20, 21, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 5]


Solution : [0, 15, 1, 3, 13, 8, 5] has cost 44.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 13, 8, 5]

After backtrack at level 16
 pending : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 16 among pending : [10, 12, 20, 25, 16, 6, 17, 23, 24, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 6]


New level: 17
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 6]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {10, 12, 16, 17, 18, 20, 21, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 8, 6]


Solution : [0, 15, 1, 3, 13, 8, 6] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 3, 13, 8, 6]

After backtrack at level 17
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 17 among pending : [10, 12, 20, 25, 16, 17, 23, 24, 18, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 21 with phase True at level 17

After decision at level 17
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 21]


New level: 18
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 21]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {16, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 21]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 21]


Solution : [0, 15, 1, 3, 13, 8, 21] has cost 65.


Before backtrack at level 18
 pending : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 21]

After backtrack at level 18
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 21]


Invert decision for 21 at level 17


New level: 18
 pending : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 20, 25, 16, 17, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8]


Solution : [0, 15, 1, 3, 13, 8] has cost 31.


Decide in level 18 among pending : [10, 12, 20, 25, 16, 17, 23, 24, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 17]


New level: 19
 pending : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 17]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {16, 18, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 17]


Solution : [0, 15, 1, 3, 13, 8, 17] has cost 65.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 17]

After backtrack at level 19
 pending : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8]


Before reduction : 
 pending  : [10, 12, 20, 25, 16, 23, 24, 18]
 solution : [0, 15, 1, 3, 13, 8]

Essensial at level 19 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {16, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 18]


Solution : [0, 15, 1, 3, 13, 8, 18] has cost 65.


Before backtrack at level 19
 pending : [10, 12]
 solution : [0, 15, 1, 3, 13, 8, 18]

After backtrack at level 19
 pending : [10, 12, 18, 20, 25, 16, 23, 24]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 18
 pending : [10, 12, 18, 20, 25, 16, 23, 24]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 18
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 17
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 17
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 16
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 16
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 15
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 15
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 14
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 14
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9]
 solution : [0, 15, 1, 3, 13, 8]


Before backtrack at level 13
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9]
 solution : [0, 15, 1, 3, 13, 8]

After backtrack at level 13
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13]


Solution : [0, 15, 1, 3, 13] has cost 25.


Decide in level 13 among pending : [10, 12, 18, 20, 25, 16, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 13

After decision at level 13
 pending : [10, 12, 18, 20, 25, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]


New level: 14
 pending : [10, 12, 18, 20, 25, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]


Before reduction : 
 pending  : [10, 12, 18, 20, 25, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 0), (21, 73), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {25, 20}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 0), (21, 73), (22, -1), (23, 18), (24, 18), (25, 0), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, 73), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]
 solution : [0, 15, 1, 3, 13, 16]


Solution : [0, 15, 1, 3, 13, 16] has cost 35.


Decide in level 14 among pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 4, 7, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, 73), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 14

After decision at level 14
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 7, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]


New level: 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 7, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 26, 27, 7, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, -1), (21, 73), (22, -1), (23, 18), (24, 18), (25, -1), (26, 8), (27, 8), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {26, 27, 7}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, 0), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]


Solution : [0, 15, 1, 3, 13, 16, 4] has cost 41.


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 4]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 26, 27, 7]
 solution : [0, 15, 1, 3, 13, 16, 4]


Invert decision for 4 at level 14


New level: 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 26, 27, 7]
 solution : [0, 15, 1, 3, 13, 16]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 26, 27, 7]
 solution : [0, 15, 1, 3, 13, 16]

Essensial at level 15 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {26, 27}

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 7]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, 0), (27, 0), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 7]


Solution : [0, 15, 1, 3, 13, 16, 7] has cost 48.


Before backtrack at level 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29]
 solution : [0, 15, 1, 3, 13, 16, 7]

After backtrack at level 15
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27]
 solution : [0, 15, 1, 3, 13, 16]


Before backtrack at level 14
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27]
 solution : [0, 15, 1, 3, 13, 16]

After backtrack at level 14
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13, 16]


Invert decision for 16 at level 13


New level: 14
 pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, 8), (13, -1), (14, -1), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, -1), (21, 18), (22, -1), (23, 4), (24, 4), (25, -1), (26, -1), (27, -1), (28, -1), (29, 2), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13]


Solution : [0, 15, 1, 3, 13] has cost 25.


Decide in level 14 among pending : [10, 12, 18, 23, 24, 17, 21, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [10, 12, 18, 23, 24, 17, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13, 21]


New level: 15
 pending : [10, 12, 18, 23, 24, 17, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13, 21]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 6, 5, 9, 29, 7, 26, 27, 20, 25, 4]
 solution : [0, 15, 1, 3, 13, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, 128), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, -1), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {17, 18, 20, 23, 24, 25, 29}

After reduction : 
 pending  : [10, 12, 6, 5, 9, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 13, 21]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 13, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, -1), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 32), (27, 32), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, -1), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 13, 21]


Solution : [0, 15, 1, 3, 13, 21] has cost 59.


Before backtrack at level 15
 pending : [10, 12, 6, 5, 9, 7, 26, 27, 4]
 solution : [0, 15, 1, 3, 13, 21]

After backtrack at level 15
 pending : [10, 12, 6, 5, 9, 7, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [10, 12, 6, 5, 9, 7, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 7, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 1), (6, 1), (7, 128), (8, -1), (9, 1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 32), (27, 32), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 7, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13]


Solution : [0, 15, 1, 3, 13] has cost 25.


Decide in level 15 among pending : [10, 12, 6, 5, 9, 7, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [10, 12, 6, 5, 9, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]


New level: 16
 pending : [10, 12, 6, 5, 9, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 26, 27, 4, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, 128), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 8), (21, -1), (22, -1), (23, 52), (24, 52), (25, 8), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {26, 27, 4}

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]


Solution : [0, 15, 1, 3, 13, 7] has cost 38.


Before backtrack at level 16
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 7]

After backtrack at level 16
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25, 26, 27, 4]
 solution : [0, 15, 1, 3, 13, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25, 26, 27, 4]
 solution : [0, 15, 1, 3, 13]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25, 26, 27, 4]
 solution : [0, 15, 1, 3, 13]

Essensial at level 16 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {26, 27}

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Solution : [0, 15, 1, 3, 13, 4] has cost 31.


Decide in level 16 among pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 29, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 16

After decision at level 16
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]


New level: 17
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]


Solution : [0, 15, 1, 3, 13, 4, 29] has cost 41.


Before backtrack at level 17
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]

After backtrack at level 17
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 29]


Invert decision for 29 at level 16


New level: 17
 pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, -1), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Solution : [0, 15, 1, 3, 13, 4] has cost 31.


Decide in level 17 among pending : [10, 12, 6, 5, 9, 18, 23, 24, 17, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 6]


New level: 18
 pending : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 6]


Before reduction : 
 pending  : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {5, 9, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 6]


Solution : [0, 15, 1, 3, 13, 4, 6] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 13, 4, 6]

After backtrack at level 18
 pending : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Solution : [0, 15, 1, 3, 13, 4] has cost 31.


Decide in level 18 among pending : [10, 12, 5, 9, 18, 23, 24, 17, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 18

After decision at level 18
 pending : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 5]


New level: 19
 pending : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 5]


Before reduction : 
 pending  : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {9, 10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 5]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 5]


Solution : [0, 15, 1, 3, 13, 4, 5] has cost 44.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 3, 13, 4, 5]

After backtrack at level 19
 pending : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 5]


Invert decision for 5 at level 18


New level: 19
 pending : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 12, 9, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Solution : [0, 15, 1, 3, 13, 4] has cost 31.


Decide in level 19 among pending : [10, 12, 9, 18, 23, 24, 17, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 19

After decision at level 19
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 9]


New level: 20
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 9]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 9]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {10, 12, 17, 18, 20, 23, 24, 25}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 9]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 13, 4, 9]


Solution : [0, 15, 1, 3, 13, 4, 9] has cost 37.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 3, 13, 4, 9]

After backtrack at level 20
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 9]


Invert decision for 9 at level 19


New level: 20
 pending : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 12, 18, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Solution : [0, 15, 1, 3, 13, 4] has cost 31.


Decide in level 20 among pending : [10, 12, 18, 23, 24, 17, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 18 with phase True at level 20

After decision at level 20
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 18]


New level: 21
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 18]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 18]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, 16), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, -1), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : {17, 20, 23, 24, 25}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 18]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 18]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 18]


Solution : [0, 15, 1, 3, 13, 4, 18] has cost 65.


Before backtrack at level 21
 pending : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 18]

After backtrack at level 21
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4, 18]


Invert decision for 18 at level 20


New level: 21
 pending : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before reduction : 
 pending  : [10, 12, 23, 24, 17, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

Essensial at level 21 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : {24, 25, 20, 23}

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 17]


Before reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 0), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 17]


Solution : [0, 15, 1, 3, 13, 4, 17] has cost 65.


Before backtrack at level 21
 pending : [10, 12]
 solution : [0, 15, 1, 3, 13, 4, 17]

After backtrack at level 21
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]


Before backtrack at level 20
 pending : [10, 12, 17, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 13, 4]

After backtrack at level 20
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 13, 4]


Before backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18]
 solution : [0, 15, 1, 3, 13, 4]

After backtrack at level 19
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 13, 4]


Before backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9]
 solution : [0, 15, 1, 3, 13, 4]

After backtrack at level 18
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5]
 solution : [0, 15, 1, 3, 13, 4]


Before backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5]
 solution : [0, 15, 1, 3, 13, 4]

After backtrack at level 17
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6]
 solution : [0, 15, 1, 3, 13, 4]


Before backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6]
 solution : [0, 15, 1, 3, 13, 4]

After backtrack at level 16
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29]
 solution : [0, 15, 1, 3, 13]


Before backtrack at level 15
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29]
 solution : [0, 15, 1, 3, 13]

After backtrack at level 15
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7]
 solution : [0, 15, 1, 3, 13]


Before backtrack at level 14
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7]
 solution : [0, 15, 1, 3, 13]

After backtrack at level 14
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21]
 solution : [0, 15, 1, 3, 13]


Before backtrack at level 13
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21]
 solution : [0, 15, 1, 3, 13]

After backtrack at level 13
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16]
 solution : [0, 15, 1, 3, 13]


Before backtrack at level 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16]
 solution : [0, 15, 1, 3, 13]

After backtrack at level 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 12 among pending : [10, 12, 17, 23, 24, 20, 25, 18, 9, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3, 9]


New level: 13
 pending : [10, 12, 17, 23, 24, 20, 25, 18, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3, 9]


Before reduction : 
 pending  : [10, 12, 17, 23, 24, 20, 25, 18, 5, 6, 4, 26, 27, 29, 7, 21, 16, 14, 8]
 solution : [0, 15, 1, 3, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, 128), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, 0), (21, 25), (22, -1), (23, 16), (24, 16), (25, 0), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {5, 6, 10, 12, 14, 20, 25}

After reduction : 
 pending  : [17, 23, 24, 18, 4, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 4, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, 0), (7, 128), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, 0), (21, 25), (22, -1), (23, 16), (24, 16), (25, 0), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 4, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]


Solution : [0, 15, 1, 3, 9] has cost 26.


Decide in level 13 among pending : [17, 23, 24, 18, 4, 26, 27, 29, 7, 21, 16, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 13

After decision at level 13
 pending : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 4]


New level: 14
 pending : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 4]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {7, 8, 16, 17, 18, 21, 23, 24, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 4]


Solution : [0, 15, 1, 3, 9, 4] has cost 32.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 3, 9, 4]

After backtrack at level 14
 pending : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 4]


Invert decision for 4 at level 13


New level: 14
 pending : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]


Solution : [0, 15, 1, 3, 9] has cost 26.


Decide in level 14 among pending : [17, 23, 24, 18, 26, 27, 29, 7, 21, 16, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 7]


New level: 15
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 7]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 128), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {8, 16, 17, 18, 21, 23, 24, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 7]


Solution : [0, 15, 1, 3, 9, 7] has cost 39.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 9, 7]

After backtrack at level 15
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 21, 16, 8]
 solution : [0, 15, 1, 3, 9]

Essensial at level 15 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {16, 17, 18, 21, 23, 24, 26, 27, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 8]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 9, 8]


Solution : [0, 15, 1, 3, 9, 8] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 9, 8]

After backtrack at level 15
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16]
 solution : [0, 15, 1, 3, 9]


Before backtrack at level 14
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16]
 solution : [0, 15, 1, 3, 9]

After backtrack at level 14
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7]
 solution : [0, 15, 1, 3, 9]


Before backtrack at level 13
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7]
 solution : [0, 15, 1, 3, 9]

After backtrack at level 13
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 13 among pending : [8, 17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3, 8]


New level: 14
 pending : [17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 26, 27, 29, 21, 16, 7, 10, 12, 20, 25, 5, 6, 14, 4]
 solution : [0, 15, 1, 3, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, 128), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 128), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, 0), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {26, 27, 4, 7}

After reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 5, 6, 14]
 solution : [0, 15, 1, 3, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 5, 6, 14]
 solution : [0, 15, 1, 3, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, 0), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 5, 6, 14]
 solution : [0, 15, 1, 3, 8]


Solution : [0, 15, 1, 3, 8] has cost 26.


Decide in level 14 among pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 5, 6, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8, 5]


New level: 15
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8, 5]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {6, 10, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 5]


Solution : [0, 15, 1, 3, 8, 5] has cost 39.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 3, 8, 5]

After backtrack at level 15
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]
 solution : [0, 15, 1, 3, 8]


Solution : [0, 15, 1, 3, 8] has cost 26.


Decide in level 15 among pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 6, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8, 6]


New level: 16
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8, 6]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {10, 12, 14, 16, 17, 18, 20, 21, 23, 24, 25, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 8, 6]


Solution : [0, 15, 1, 3, 8, 6] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 3, 8, 6]

After backtrack at level 16
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25, 14]
 solution : [0, 15, 1, 3, 8]

Essensial at level 16 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Before reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Solution : [0, 15, 1, 3, 8, 14] has cost 28.


Decide in level 16 among pending : [17, 23, 24, 18, 29, 21, 16, 10, 12, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 16

After decision at level 16
 pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]


New level: 17
 pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]


Before reduction : 
 pending  : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]


Solution : [0, 15, 1, 3, 8, 14, 29] has cost 38.


Before backtrack at level 17
 pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]

After backtrack at level 17
 pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 29]


Invert decision for 29 at level 16


New level: 17
 pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Before reduction : 
 pending  : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 4), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Solution : [0, 15, 1, 3, 8, 14] has cost 28.


Decide in level 17 among pending : [17, 23, 24, 18, 21, 16, 10, 12, 20, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 17

After decision at level 17
 pending : [17, 23, 24, 18, 21, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 10]


New level: 18
 pending : [17, 23, 24, 18, 21, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 10]


Before reduction : 
 pending  : [17, 23, 24, 18, 21, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {12, 16, 20, 23, 24, 25}

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 10]


Before reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 10]


Solution : [0, 15, 1, 3, 8, 14, 10] has cost 37.


Before backtrack at level 18
 pending : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 10]

After backtrack at level 18
 pending : [17, 18, 21, 23, 24, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14, 10]


Invert decision for 10 at level 17


New level: 18
 pending : [17, 18, 21, 23, 24, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 16, 12, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]

Essensial at level 18 : {12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {16, 20, 23, 24, 25}

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 12]


Before reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 12]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 12]


Solution : [0, 15, 1, 3, 8, 14, 12] has cost 37.


Before backtrack at level 18
 pending : [17, 18, 21]
 solution : [0, 15, 1, 3, 8, 14, 12]

After backtrack at level 18
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]


Before backtrack at level 17
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25]
 solution : [0, 15, 1, 3, 8, 14]

After backtrack at level 17
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10]
 solution : [0, 15, 1, 3, 8, 14]


Before backtrack at level 16
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10]
 solution : [0, 15, 1, 3, 8, 14]

After backtrack at level 16
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29]
 solution : [0, 15, 1, 3, 8]


Before backtrack at level 15
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29]
 solution : [0, 15, 1, 3, 8]

After backtrack at level 15
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6]
 solution : [0, 15, 1, 3, 8]


Before backtrack at level 14
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6]
 solution : [0, 15, 1, 3, 8]

After backtrack at level 14
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 14 among pending : [17, 18, 21, 12, 23, 24, 16, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16]


New level: 15
 pending : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16]


Before reduction : 
 pending  : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, 128), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16]


Solution : [0, 15, 1, 3, 16] has cost 30.


Decide in level 15 among pending : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 6, 26, 27, 7, 4, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16, 6]


New level: 16
 pending : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16, 6]


Before reduction : 
 pending  : [17, 18, 21, 12, 23, 24, 20, 25, 10, 14, 29, 26, 27, 7, 4, 5]
 solution : [0, 15, 1, 3, 16, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, -1), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {5, 10, 12, 14, 20, 25, 29}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 7, 4]
 solution : [0, 15, 1, 3, 16, 6]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 7, 4]
 solution : [0, 15, 1, 3, 16, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, 128), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, 0), (21, 10), (22, -1), (23, 4), (24, 4), (25, 0), (26, 8), (27, 8), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, -1), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 7, 4]
 solution : [0, 15, 1, 3, 16, 6]


Solution : [0, 15, 1, 3, 16, 6] has cost 36.


Before backtrack at level 16
 pending : [17, 18, 21, 23, 24, 26, 27, 7, 4]
 solution : [0, 15, 1, 3, 16, 6]

After backtrack at level 16
 pending : [17, 18, 21, 23, 24, 26, 27, 7, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [17, 18, 21, 23, 24, 26, 27, 7, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 7, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 8), (18, 8), (19, -1), (20, -1), (21, 10), (22, -1), (23, 4), (24, 4), (25, -1), (26, 8), (27, 8), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 7, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16]


Solution : [0, 15, 1, 3, 16] has cost 30.


Decide in level 16 among pending : [17, 18, 21, 23, 24, 26, 27, 7, 4, 12, 20, 25, 10, 14, 29, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [17, 18, 21, 23, 24, 26, 27, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]


New level: 17
 pending : [17, 18, 21, 23, 24, 26, 27, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 26, 27, 4, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 38), (18, 38), (19, -1), (20, 8), (21, 73), (22, -1), (23, 18), (24, 18), (25, 8), (26, 8), (27, 8), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 27, 4}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]


Solution : [0, 15, 1, 3, 16, 7] has cost 43.


Before backtrack at level 17
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 7]

After backtrack at level 17
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 26, 27, 4]
 solution : [0, 15, 1, 3, 16, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 26, 27, 4]
 solution : [0, 15, 1, 3, 16]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 26, 27, 4]
 solution : [0, 15, 1, 3, 16]

Essensial at level 17 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 27}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, 0), (27, 0), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 4]


Solution : [0, 15, 1, 3, 16, 4] has cost 36.


Before backtrack at level 17
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5]
 solution : [0, 15, 1, 3, 16, 4]

After backtrack at level 17
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27]
 solution : [0, 15, 1, 3, 16]


Before backtrack at level 16
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27]
 solution : [0, 15, 1, 3, 16]

After backtrack at level 16
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 16]


Before backtrack at level 15
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 16]

After backtrack at level 15
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 14), (18, 14), (19, -1), (20, 8), (21, 18), (22, -1), (23, 4), (24, 4), (25, 8), (26, -1), (27, -1), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 15 among pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 5, 4, 26, 27, 7, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 5]


New level: 16
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 5]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10, 14, 29, 4, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 20), (18, 20), (19, -1), (20, 0), (21, 25), (22, -1), (23, 16), (24, 16), (25, 0), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {6, 10, 12, 14, 20, 25}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 5]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 20), (18, 20), (19, -1), (20, 0), (21, 25), (22, -1), (23, 16), (24, 16), (25, 0), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 5]


Solution : [0, 15, 1, 3, 5] has cost 33.


Before backtrack at level 16
 pending : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7]
 solution : [0, 15, 1, 3, 5]

After backtrack at level 16
 pending : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 20), (18, 20), (19, -1), (20, -1), (21, 25), (22, -1), (23, 16), (24, 16), (25, -1), (26, 32), (27, 32), (28, -1), (29, 16), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3]


Solution : [0, 15, 1, 3] has cost 20.


Decide in level 16 among pending : [17, 18, 21, 23, 24, 29, 4, 26, 27, 7, 12, 20, 25, 10, 14, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 16

After decision at level 16
 pending : [17, 18, 21, 23, 24, 29, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]


New level: 17
 pending : [17, 18, 21, 23, 24, 29, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 26, 27, 7, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 120), (18, 112), (19, -1), (20, 32), (21, 120), (22, -1), (23, 52), (24, 52), (25, 32), (26, 32), (27, 32), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 27, 7}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14, 6]
 solution : [0, 15, 1, 3, 4]


Solution : [0, 15, 1, 3, 4] has cost 26.


Decide in level 17 among pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4, 6]


New level: 18
 pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4, 6]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {10, 12, 14, 17, 18, 20, 21, 23, 24, 25, 29}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 4, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 3, 4, 6]


Solution : [0, 15, 1, 3, 4, 6] has cost 32.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 3, 4, 6]

After backtrack at level 18
 pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10, 14]
 solution : [0, 15, 1, 3, 4]

Essensial at level 18 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]


Solution : [0, 15, 1, 3, 4, 14] has cost 28.


Decide in level 18 among pending : [17, 18, 21, 23, 24, 29, 12, 20, 25, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 29 with phase True at level 18

After decision at level 18
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]


New level: 19
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]


Solution : [0, 15, 1, 3, 4, 14, 29] has cost 38.


Before backtrack at level 19
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]

After backtrack at level 19
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 29]


Invert decision for 29 at level 18


New level: 19
 pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 19), (18, 19), (19, -1), (20, 4), (21, 19), (22, -1), (23, 8), (24, 8), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 12, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]


Solution : [0, 15, 1, 3, 4, 14] has cost 28.


Decide in level 19 among pending : [17, 18, 21, 23, 24, 12, 20, 25, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 12 with phase True at level 19

After decision at level 19
 pending : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 12]


New level: 20
 pending : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 12]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 12]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, 32), (13, -1), (14, -1), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 8), (21, 26), (22, -1), (23, 12), (24, 12), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {10, 20, 23, 24, 25}

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 12]


Before reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 12]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 12]


Solution : [0, 15, 1, 3, 4, 14, 12] has cost 37.


Before backtrack at level 20
 pending : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 12]

After backtrack at level 20
 pending : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14, 12]


Invert decision for 12 at level 19


New level: 20
 pending : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 10]
 solution : [0, 15, 1, 3, 4, 14]

Essensial at level 20 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : {24, 25, 20, 23}

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 10]


Before reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, 0), (21, 8), (22, -1), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 10]


Solution : [0, 15, 1, 3, 4, 14, 10] has cost 37.


Before backtrack at level 20
 pending : [17, 18, 21]
 solution : [0, 15, 1, 3, 4, 14, 10]

After backtrack at level 20
 pending : [17, 18, 21, 10, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 4, 14]


Before backtrack at level 19
 pending : [17, 18, 21, 10, 23, 24, 20, 25]
 solution : [0, 15, 1, 3, 4, 14]

After backtrack at level 19
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12]
 solution : [0, 15, 1, 3, 4, 14]


Before backtrack at level 18
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12]
 solution : [0, 15, 1, 3, 4, 14]

After backtrack at level 18
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29]
 solution : [0, 15, 1, 3, 4]


Before backtrack at level 17
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29]
 solution : [0, 15, 1, 3, 4]

After backtrack at level 17
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 26, 27, 7, 6]
 solution : [0, 15, 1, 3, 4]


Invert decision for 4 at level 16


New level: 17
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 26, 27, 7, 6]
 solution : [0, 15, 1, 3]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 26, 27, 7, 6]
 solution : [0, 15, 1, 3]

Essensial at level 17 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 7), (18, 7), (19, -1), (20, -1), (21, 8), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 27}

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6]
 solution : [0, 15, 1, 3, 7]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6]
 solution : [0, 15, 1, 3, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, 0), (27, 0), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6]
 solution : [0, 15, 1, 3, 7]


Solution : [0, 15, 1, 3, 7] has cost 33.


Before backtrack at level 17
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6]
 solution : [0, 15, 1, 3, 7]

After backtrack at level 17
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27]
 solution : [0, 15, 1, 3]


Before backtrack at level 16
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27]
 solution : [0, 15, 1, 3]

After backtrack at level 16
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4]
 solution : [0, 15, 1, 3]


Before backtrack at level 15
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4]
 solution : [0, 15, 1, 3]

After backtrack at level 15
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5]
 solution : [0, 15, 1, 3]


Before backtrack at level 14
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5]
 solution : [0, 15, 1, 3]

After backtrack at level 14
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16]
 solution : [0, 15, 1, 3]


Before backtrack at level 13
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16]
 solution : [0, 15, 1, 3]

After backtrack at level 13
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8]
 solution : [0, 15, 1, 3]


Before backtrack at level 12
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8]
 solution : [0, 15, 1, 3]

After backtrack at level 12
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9]
 solution : [0, 15, 1, 3]


Before backtrack at level 11
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9]
 solution : [0, 15, 1, 3]

After backtrack at level 11
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13]
 solution : [0, 15, 1, 3]


Before backtrack at level 10
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13]
 solution : [0, 15, 1, 3]

After backtrack at level 10
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30]
 solution : [0, 15, 1, 3]


Before backtrack at level 9
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30]
 solution : [0, 15, 1, 3]

After backtrack at level 9
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22]
 solution : [0, 15, 1, 3]


Before backtrack at level 8
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22]
 solution : [0, 15, 1, 3]

After backtrack at level 8
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19]
 solution : [0, 15, 1, 3]


Before backtrack at level 7
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19]
 solution : [0, 15, 1, 3]

After backtrack at level 7
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31]
 solution : [0, 15, 1, 3]


Before backtrack at level 6
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31]
 solution : [0, 15, 1, 3]

After backtrack at level 6
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32]
 solution : [0, 15, 1, 3]


Before backtrack at level 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32]
 solution : [0, 15, 1, 3]

After backtrack at level 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33]
 solution : [0, 15, 1, 3]


Before backtrack at level 4
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33]
 solution : [0, 15, 1, 3]

After backtrack at level 4
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11]
 solution : [0, 15, 1, 3]


Before backtrack at level 3
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11]
 solution : [0, 15, 1, 3]

After backtrack at level 3
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28, 2]
 solution : [0, 15, 1, 3]


Invert decision for 3 at level 2


New level: 3
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28, 2]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28, 2]
 solution : [0, 15, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 64), (13, -1), (14, 64), (15, -1), (16, -1), (17, 23), (18, 23), (19, -1), (20, 32), (21, 26), (22, -1), (23, 12), (24, 12), (25, 32), (26, -1), (27, -1), (28, -1), (29, 64), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Covered at level 3 : set()

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28, 2]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 3 among pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28, 2]

Coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Decide 2 with phase True at level 3

After decision at level 3
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2]


New level: 4
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 64), (18, 128), (19, 256), (20, 256), (21, 48), (22, 24), (23, 48), (24, 26), (25, 128), (26, 128), (27, 64), (28, 128), (29, 16), (30, 16), (31, 60), (32, 48), (33, 24)]

Covered at level 4 : set()

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2]


Solution : [0, 15, 1, 2] has cost 28.


Decide in level 4 among pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 4, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 64), (18, 128), (19, 256), (20, 256), (21, 48), (22, 24), (23, 48), (24, 26), (25, 128), (26, 128), (27, 64), (28, 128), (29, 16), (30, 16), (31, 60), (32, 48), (33, 24)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2, 4]


New level: 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2, 4]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 7, 26, 27, 5, 16, 8, 9, 13, 30, 22, 19, 31, 32, 33, 11, 28]
 solution : [0, 15, 1, 2, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 64), (18, 128), (19, 256), (20, 256), (21, 48), (22, 24), (23, 48), (24, 26), (25, 128), (26, 128), (27, 64), (28, 128), (29, 16), (30, 16), (31, 60), (32, 48), (33, 24)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, 0), (8, 0), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 4), (17, 16), (18, 32), (19, 8), (20, 256), (21, 10), (22, 5), (23, 12), (24, 6), (25, 128), (26, 0), (27, 0), (28, 32), (29, 4), (30, 4), (31, 15), (32, 0), (33, 0)]

Covered at level 5 : {32, 33, 7, 8, 26, 27}

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28]
 solution : [0, 15, 1, 2, 4]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28]
 solution : [0, 15, 1, 2, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, 0), (8, 0), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 4), (17, 16), (18, 32), (19, 8), (20, 256), (21, 10), (22, 5), (23, 12), (24, 6), (25, 128), (26, 0), (27, 0), (28, 32), (29, 4), (30, 4), (31, 15), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 4), (17, 16), (18, 32), (19, 8), (20, 256), (21, 10), (22, 5), (23, 12), (24, 6), (25, 128), (26, -1), (27, -1), (28, 32), (29, 4), (30, 4), (31, 15), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28]
 solution : [0, 15, 1, 2, 4]


Solution : [0, 15, 1, 2, 4] has cost 34.


Before backtrack at level 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28]
 solution : [0, 15, 1, 2, 4]

After backtrack at level 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28, 7, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 2, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28, 7, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 2]


Before reduction : 
 pending  : [17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 9, 13, 30, 22, 19, 31, 11, 28, 7, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 2]

Essensial at level 5 : {9, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 4), (17, 16), (18, 32), (19, 8), (20, 256), (21, 10), (22, 5), (23, 12), (24, 6), (25, 128), (26, -1), (27, -1), (28, 32), (29, 4), (30, 4), (31, 15), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 5 : {5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 2, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 2, 9, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 2, 9, 7]


Solution : [0, 15, 1, 2, 9, 7] has cost 47.


Before backtrack at level 5
 pending : []
 solution : [0, 15, 1, 2, 9, 7]

After backtrack at level 5
 pending : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 2]


Before backtrack at level 4
 pending : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 2]

After backtrack at level 4
 pending : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 2]


Invert decision for 2 at level 3


New level: 4
 pending : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 4 among pending : [9, 7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]


New level: 5
 pending : [7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [7, 17, 18, 21, 10, 23, 24, 20, 25, 12, 14, 29, 6, 5, 16, 13, 30, 22, 19, 31, 11, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 320), (6, 128), (7, 320), (8, 128), (9, 512), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 128), (17, 272), (18, 512), (19, 256), (20, 256), (21, 240), (22, 144), (23, 112), (24, 64), (25, 128), (26, 128), (27, 64), (28, 128), (29, 64), (30, 160), (31, 420), (32, 384), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 0), (6, 0), (7, 320), (8, 128), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 64), (17, 54), (18, 108), (19, 128), (20, 8), (21, 50), (22, 25), (23, 28), (24, 28), (25, 2), (26, 128), (27, 64), (28, 32), (29, 8), (30, 22), (31, 89), (32, 384), (33, 192)]

Covered at level 5 : {5, 6, 10, 11, 12, 13, 14}

After reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 0), (6, 0), (7, 320), (8, 128), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 64), (17, 54), (18, 108), (19, 128), (20, 8), (21, 50), (22, 25), (23, 28), (24, 28), (25, 2), (26, 128), (27, 64), (28, 32), (29, 8), (30, 22), (31, 89), (32, 384), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, -1), (6, -1), (7, 320), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 54), (18, 108), (19, 128), (20, 8), (21, 50), (22, 25), (23, 28), (24, 28), (25, 2), (26, 128), (27, 64), (28, 32), (29, 8), (30, 22), (31, 89), (32, 384), (33, 192)]

Covered at level 5 : set()

After reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 4]
 solution : [0, 15, 1, 9]


Solution : [0, 15, 1, 9] has cost 16.


Decide in level 5 among pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, -1), (6, -1), (7, 320), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 54), (18, 108), (19, 128), (20, 8), (21, 50), (22, 25), (23, 28), (24, 28), (25, 2), (26, 128), (27, 64), (28, 32), (29, 8), (30, 22), (31, 89), (32, 384), (33, 192)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9, 4]


New level: 6
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9, 4]


Before reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, -1), (6, -1), (7, 320), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 64), (17, 54), (18, 108), (19, 128), (20, 8), (21, 50), (22, 25), (23, 28), (24, 28), (25, 2), (26, 128), (27, 64), (28, 32), (29, 8), (30, 22), (31, 89), (32, 384), (33, 192)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {7, 8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 4]


Solution : [0, 15, 1, 9, 4] has cost 22.


Before backtrack at level 6
 pending : []
 solution : [0, 15, 1, 9, 4]

After backtrack at level 6
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9]

Essensial at level 6 : {7}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {8, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 7]


Solution : [0, 15, 1, 9, 7] has cost 29.


Before backtrack at level 6
 pending : []
 solution : [0, 15, 1, 9, 7]

After backtrack at level 6
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9]


Before backtrack at level 5
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33]
 solution : [0, 15, 1, 9]

After backtrack at level 5
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 10, 12, 14, 6, 5, 13, 11, 4]
 solution : [0, 15, 1, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 10, 12, 14, 6, 5, 13, 11, 4]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [7, 17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 26, 27, 8, 32, 33, 10, 12, 14, 6, 5, 13, 11, 4]
 solution : [0, 15, 1]

Essensial at level 5 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, 0), (8, 0), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, 0), (27, 0), (28, 32), (29, 64), (30, 106), (31, 393), (32, 12), (33, 6)]

Covered at level 5 : {8, 26, 27, 7}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, 0), (8, 0), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, 0), (27, 0), (28, 32), (29, 64), (30, 106), (31, 393), (32, 12), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, 393), (32, 12), (33, 6)]

Covered at level 5 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4]


Solution : [0, 15, 1, 4] has cost 16.


Decide in level 5 among pending : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 31, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, 393), (32, 12), (33, 6)]

Decide 31 with phase True at level 5

After decision at level 5
 pending : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]


New level: 6
 pending : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 29, 16, 30, 22, 19, 28, 32, 33, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, 393), (32, 12), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 272), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 2), (17, 32), (18, 64), (19, 4), (20, 64), (21, 12), (22, 6), (23, 8), (24, 4), (25, 16), (26, -1), (27, -1), (28, 8), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

Covered at level 6 : {32, 33, 29, 30}

After reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 272), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 2), (17, 32), (18, 64), (19, 4), (20, 64), (21, 12), (22, 6), (23, 8), (24, 4), (25, 16), (26, -1), (27, -1), (28, 8), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 272), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 2), (17, 32), (18, 64), (19, 4), (20, 64), (21, 12), (22, 6), (23, 8), (24, 4), (25, 16), (26, -1), (27, -1), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]


Solution : [0, 15, 1, 4, 31] has cost 45.


Before backtrack at level 6
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11]
 solution : [0, 15, 1, 4, 31]

After backtrack at level 6
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4, 31]


Invert decision for 31 at level 5


New level: 6
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 272), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 2), (17, 32), (18, 64), (19, 4), (20, 64), (21, 12), (22, 6), (23, 8), (24, 4), (25, 16), (26, -1), (27, -1), (28, 8), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, -1), (32, 12), (33, 6)]

Covered at level 6 : set()

After reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4]


Solution : [0, 15, 1, 4] has cost 16.


Decide in level 6 among pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 5, 13, 11, 29, 30, 32, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, -1), (32, 12), (33, 6)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4, 5]


New level: 7
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4, 5]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 320), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 64), (13, 128), (14, 64), (15, -1), (16, 16), (17, 50), (18, 100), (19, 32), (20, 256), (21, 52), (22, 26), (23, 24), (24, 12), (25, 128), (26, -1), (27, -1), (28, 32), (29, 64), (30, 106), (31, -1), (32, 12), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

Covered at level 7 : {6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5]


Solution : [0, 15, 1, 4, 5] has cost 29.


Before backtrack at level 7
 pending : []
 solution : [0, 15, 1, 4, 5]

After backtrack at level 7
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4]


Before reduction : 
 pending  : [17, 18, 21, 23, 24, 20, 25, 16, 22, 19, 28, 10, 12, 14, 6, 13, 11, 29, 30, 32, 33]
 solution : [0, 15, 1, 4]

Essensial at level 7 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 0), (13, 8), (14, 1), (15, -1), (16, 0), (17, 29), (18, 57), (19, 0), (20, 16), (21, 16), (22, 8), (23, 0), (24, 0), (25, 2), (26, -1), (27, -1), (28, 16), (29, 0), (30, 8), (31, -1), (32, 0), (33, 0)]

Covered at level 7 : {32, 33, 12, 16, 19, 23, 24, 29}

After reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30]
 solution : [0, 15, 1, 4, 10]


Before reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30]
 solution : [0, 15, 1, 4, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 0), (13, 8), (14, 1), (15, -1), (16, 0), (17, 29), (18, 57), (19, 0), (20, 16), (21, 16), (22, 8), (23, 0), (24, 0), (25, 2), (26, -1), (27, -1), (28, 16), (29, 0), (30, 8), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 8), (14, 1), (15, -1), (16, -1), (17, 29), (18, 57), (19, -1), (20, 16), (21, 16), (22, 8), (23, -1), (24, -1), (25, 2), (26, -1), (27, -1), (28, 16), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30]
 solution : [0, 15, 1, 4, 10]


Solution : [0, 15, 1, 4, 10] has cost 25.


Before backtrack at level 7
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30]
 solution : [0, 15, 1, 4, 10]

After backtrack at level 7
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33]
 solution : [0, 15, 1, 4]


Before backtrack at level 6
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33]
 solution : [0, 15, 1, 4]

After backtrack at level 6
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5]
 solution : [0, 15, 1, 4]


Before backtrack at level 5
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5]
 solution : [0, 15, 1, 4]

After backtrack at level 5
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31]
 solution : [0, 15, 1]


Before backtrack at level 4
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31]
 solution : [0, 15, 1]

After backtrack at level 4
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9]
 solution : [0, 15, 1]


Before backtrack at level 3
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9]
 solution : [0, 15, 1]

After backtrack at level 3
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2]
 solution : [0, 15, 1]


Before backtrack at level 2
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2]
 solution : [0, 15, 1]

After backtrack at level 2
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15]


Before reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, -1), (13, 8), (14, 1), (15, -1), (16, -1), (17, 29), (18, 57), (19, -1), (20, 16), (21, 16), (22, 8), (23, -1), (24, -1), (25, 2), (26, -1), (27, -1), (28, 16), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Covered at level 2 : set()

After reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15]


Solution : [0, 15] has cost 7.


Decide in level 2 among pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 5, 4, 7, 26, 27, 8, 31, 9, 2, 3]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Decide 5 with phase True at level 2

After decision at level 2
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]


New level: 3
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 11, 30, 10, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, 768), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 128), (7, 768), (8, 512), (9, 64), (10, 0), (11, 0), (12, 64), (13, 1), (14, 256), (15, -1), (16, 256), (17, 272), (18, 216), (19, 256), (20, 128), (21, 240), (22, 196), (23, 104), (24, 160), (25, 4), (26, 128), (27, 128), (28, 64), (29, 64), (30, 112), (31, 228), (32, 384), (33, 384)]

Covered at level 3 : {10, 11}

After reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 128), (7, 768), (8, 512), (9, 64), (10, 0), (11, 0), (12, 64), (13, 1), (14, 256), (15, -1), (16, 256), (17, 272), (18, 216), (19, 256), (20, 128), (21, 240), (22, 196), (23, 104), (24, 160), (25, 4), (26, 128), (27, 128), (28, 64), (29, 64), (30, 112), (31, 228), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 128), (7, 768), (8, 512), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, 256), (17, 272), (18, 216), (19, 256), (20, 128), (21, 240), (22, 196), (23, 104), (24, 160), (25, 4), (26, 128), (27, 128), (28, 64), (29, 64), (30, 112), (31, 228), (32, 384), (33, 384)]

Covered at level 3 : set()

After reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 3 among pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 7, 26, 27, 8, 31, 9, 2, 3]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 128), (7, 768), (8, 512), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, 256), (17, 272), (18, 216), (19, 256), (20, 128), (21, 240), (22, 196), (23, 104), (24, 160), (25, 4), (26, 128), (27, 128), (28, 64), (29, 64), (30, 112), (31, 228), (32, 384), (33, 384)]

Decide 7 with phase True at level 3

After decision at level 3
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]


New level: 4
 pending : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]


Before reduction : 
 pending  : [17, 18, 21, 20, 25, 22, 28, 14, 6, 13, 30, 23, 24, 16, 19, 12, 29, 32, 33, 4, 26, 27, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 128), (7, 768), (8, 512), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, 256), (17, 272), (18, 216), (19, 256), (20, 128), (21, 240), (22, 196), (23, 104), (24, 160), (25, 4), (26, 128), (27, 128), (28, 64), (29, 64), (30, 112), (31, 228), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, 0), (17, 0), (18, 21), (19, 32), (20, 128), (21, 0), (22, 20), (23, 0), (24, 9), (25, 0), (26, 16), (27, 0), (28, 16), (29, 2), (30, 5), (31, 10), (32, 10), (33, 5)]

Covered at level 4 : {16, 17, 21, 23, 25, 27}

After reduction : 
 pending  : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]


Before reduction : 
 pending  : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, 0), (17, 0), (18, 21), (19, 32), (20, 128), (21, 0), (22, 20), (23, 0), (24, 9), (25, 0), (26, 16), (27, 0), (28, 16), (29, 2), (30, 5), (31, 10), (32, 10), (33, 5)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, -1), (17, -1), (18, 21), (19, 32), (20, 32), (21, -1), (22, 20), (23, -1), (24, 9), (25, -1), (26, 16), (27, -1), (28, 16), (29, 2), (30, 5), (31, 10), (32, 10), (33, 5)]

Covered at level 4 : set()

After reduction : 
 pending  : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]


Solution : [0, 15, 5, 7] has cost 33.


Before backtrack at level 4
 pending : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3]
 solution : [0, 15, 5, 7]

After backtrack at level 4
 pending : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5, 7]


Invert decision for 7 at level 3


New level: 4
 pending : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [18, 20, 22, 28, 14, 6, 13, 30, 24, 19, 12, 29, 32, 33, 4, 26, 8, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5]

Essensial at level 4 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 64), (4, 64), (5, -1), (6, 128), (7, -1), (8, 128), (9, 64), (10, -1), (11, -1), (12, 64), (13, 1), (14, 256), (15, -1), (16, -1), (17, -1), (18, 21), (19, 32), (20, 32), (21, -1), (22, 20), (23, -1), (24, 9), (25, -1), (26, 16), (27, -1), (28, 16), (29, 2), (30, 5), (31, 10), (32, 10), (33, 5)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 0), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 25), (18, 216), (19, 128), (20, 64), (21, 6), (22, 0), (23, 6), (24, 2), (25, 2), (26, 128), (27, 32), (28, 64), (29, 2), (30, 2), (31, 165), (32, 384), (33, 40)]

Covered at level 4 : {6, 12, 13, 14, 22}

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5, 8]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, 0), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 32), (17, 25), (18, 216), (19, 128), (20, 64), (21, 6), (22, 0), (23, 6), (24, 2), (25, 2), (26, 128), (27, 32), (28, 64), (29, 2), (30, 2), (31, 165), (32, 384), (33, 40)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 25), (18, 216), (19, 128), (20, 64), (21, 6), (22, -1), (23, 6), (24, 2), (25, 2), (26, 128), (27, 32), (28, 64), (29, 2), (30, 2), (31, 165), (32, 384), (33, 40)]

Covered at level 4 : set()

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5, 8]


Solution : [0, 15, 5, 8] has cost 26.


Before backtrack at level 4
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27]
 solution : [0, 15, 5, 8]

After backtrack at level 4
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12]
 solution : [0, 15, 5]


Before backtrack at level 3
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12]
 solution : [0, 15, 5]

After backtrack at level 3
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10, 7]
 solution : [0, 15, 5]


Invert decision for 5 at level 2


New level: 3
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10, 7]
 solution : [0, 15]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10, 7]
 solution : [0, 15]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 512), (5, -1), (6, -1), (7, -1), (8, -1), (9, 64), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 32), (17, 25), (18, 216), (19, 128), (20, 64), (21, 6), (22, -1), (23, 6), (24, 2), (25, 2), (26, 128), (27, 32), (28, 64), (29, 2), (30, 2), (31, 165), (32, 384), (33, 40)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Covered at level 3 : set()

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10, 7]
 solution : [0, 15]


Solution : [0, 15] has cost 7.


Decide in level 3 among pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10, 7]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

Decide 7 with phase True at level 3

After decision at level 3
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]


New level: 4
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 27, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, 768), (8, 512), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 256), (17, 544), (18, 576), (19, 256), (20, 256), (21, 480), (22, 576), (23, 224), (24, 256), (25, 256), (26, 128), (27, 128), (28, 128), (29, 128), (30, 320), (31, 456), (32, 384), (33, 384)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, 0), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 4 : {27}

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, 0), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 4 : set()

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7]


Solution : [0, 15, 7] has cost 20.


Decide in level 4 among pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 2, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Decide 2 with phase True at level 4

After decision at level 4
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]


New level: 5
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 33, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 42), (18, 64), (19, 128), (20, 256), (21, 48), (22, 34), (23, 48), (24, 36), (25, 256), (26, 32), (27, -1), (28, 64), (29, 16), (30, 16), (31, 28), (32, 6), (33, 0)]

Covered at level 5 : {33}

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 42), (18, 64), (19, 128), (20, 256), (21, 48), (22, 34), (23, 48), (24, 36), (25, 256), (26, 32), (27, -1), (28, 64), (29, 16), (30, 16), (31, 28), (32, 6), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 42), (18, 64), (19, 128), (20, 256), (21, 48), (22, 34), (23, 48), (24, 36), (25, 256), (26, 32), (27, -1), (28, 64), (29, 16), (30, 16), (31, 28), (32, 6), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]


Solution : [0, 15, 7, 2] has cost 38.


Before backtrack at level 5
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10]
 solution : [0, 15, 7, 2]

After backtrack at level 5
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 2]


Invert decision for 2 at level 4


New level: 5
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 42), (18, 64), (19, 128), (20, 256), (21, 48), (22, 34), (23, 48), (24, 36), (25, 256), (26, 32), (27, -1), (28, 64), (29, 16), (30, 16), (31, 28), (32, 6), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 5 : set()

After reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7]


Solution : [0, 15, 7] has cost 20.


Decide in level 5 among pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 9, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]


New level: 6
 pending : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]


Before reduction : 
 pending  : [18, 20, 28, 30, 24, 19, 29, 32, 4, 26, 31, 3, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 128), (12, 256), (13, 512), (14, 512), (15, -1), (16, 8), (17, 18), (18, 0), (19, 0), (20, 0), (21, 5), (22, 201), (23, 6), (24, 96), (25, 16), (26, 0), (27, -1), (28, 0), (29, 128), (30, 194), (31, 8), (32, 0), (33, 48)]

Covered at level 6 : {32, 3, 4, 18, 19, 20, 26, 28}

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]


Before reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 128), (12, 256), (13, 512), (14, 512), (15, -1), (16, 8), (17, 18), (18, 0), (19, 0), (20, 0), (21, 5), (22, 201), (23, 6), (24, 96), (25, 16), (26, 0), (27, -1), (28, 0), (29, 128), (30, 194), (31, 8), (32, 0), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 128), (12, 256), (13, 512), (14, 512), (15, -1), (16, 8), (17, 18), (18, -1), (19, -1), (20, -1), (21, 5), (22, 201), (23, 6), (24, 96), (25, 16), (26, -1), (27, -1), (28, -1), (29, 128), (30, 194), (31, 8), (32, -1), (33, 48)]

Covered at level 6 : set()

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]


Solution : [0, 15, 7, 9] has cost 26.


Before backtrack at level 6
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33]
 solution : [0, 15, 7, 9]

After backtrack at level 6
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 128), (12, 256), (13, 512), (14, 512), (15, -1), (16, 8), (17, 18), (18, -1), (19, -1), (20, -1), (21, 5), (22, 201), (23, 6), (24, 96), (25, 16), (26, -1), (27, -1), (28, -1), (29, 128), (30, 194), (31, 8), (32, -1), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 6 : set()

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7]


Solution : [0, 15, 7] has cost 20.


Decide in level 6 among pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 14, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]


New level: 7
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]


Before reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, 512), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

Covered at level 7 : set()

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]


Solution : [0, 15, 7, 14] has cost 22.


Decide in level 7 among pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 11, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, 512), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]


New level: 8
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]


Before reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, 512), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 128), (11, -1), (12, 128), (13, 1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 6)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]


Solution : [0, 15, 7, 14, 11] has cost 27.


Before backtrack at level 8
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]

After backtrack at level 8
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]


Before reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 128), (11, -1), (12, 128), (13, 1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

Covered at level 8 : set()

After reduction : 
 pending  : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14]


Solution : [0, 15, 7, 14] has cost 22.


Decide in level 8 among pending : [30, 24, 29, 31, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

Decide 31 with phase True at level 8

After decision at level 8
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]


New level: 9
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 33, 18, 20, 28, 19, 32, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 4), (17, 128), (18, 128), (19, 32), (20, 64), (21, 153), (22, 21), (23, 34), (24, 10), (25, 32), (26, 8), (27, -1), (28, 16), (29, 2), (30, 2), (31, -1), (32, 0), (33, 0)]

Covered at level 9 : {32, 33}

After reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 4), (17, 128), (18, 128), (19, 32), (20, 64), (21, 153), (22, 21), (23, 34), (24, 10), (25, 32), (26, 8), (27, -1), (28, 16), (29, 2), (30, 2), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 4), (17, 128), (18, 128), (19, 32), (20, 64), (21, 89), (22, 21), (23, 34), (24, 10), (25, 32), (26, 8), (27, -1), (28, 16), (29, 2), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]


Solution : [0, 15, 7, 14, 31] has cost 51.


Before backtrack at level 9
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3]
 solution : [0, 15, 7, 14, 31]

After backtrack at level 9
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3, 33, 32]
 solution : [0, 15, 7, 14, 31]


Invert decision for 31 at level 8


New level: 9
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3, 33, 32]
 solution : [0, 15, 7, 14]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3, 33, 32]
 solution : [0, 15, 7, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 4), (17, 128), (18, 128), (19, 32), (20, 64), (21, 89), (22, 21), (23, 34), (24, 10), (25, 32), (26, 8), (27, -1), (28, 16), (29, 2), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 32), (17, 154), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 160), (31, -1), (32, 96), (33, 6)]

Covered at level 9 : set()

After reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3, 33, 32]
 solution : [0, 15, 7, 14]


Solution : [0, 15, 7, 14] has cost 22.


Decide in level 9 among pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 3, 33, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 32), (17, 154), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 160), (31, -1), (32, 96), (33, 6)]

Decide 3 with phase True at level 9

After decision at level 9
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 33, 32]
 solution : [0, 15, 7, 14, 3]


New level: 10
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 33, 32]
 solution : [0, 15, 7, 14, 3]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 28, 19, 4, 26, 33, 32]
 solution : [0, 15, 7, 14, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 256), (11, -1), (12, 128), (13, 256), (14, -1), (15, -1), (16, 32), (17, 154), (18, 200), (19, 128), (20, 256), (21, 240), (22, 52), (23, 100), (24, 24), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 160), (31, -1), (32, 96), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 128), (13, 4), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, 8), (20, 8), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, 0), (27, -1), (28, 0), (29, 128), (30, 106), (31, -1), (32, 6), (33, 6)]

Covered at level 10 : {26, 28, 4}

After reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32]
 solution : [0, 15, 7, 14, 3]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32]
 solution : [0, 15, 7, 14, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 128), (13, 4), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, 8), (20, 8), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, 0), (27, -1), (28, 0), (29, 128), (30, 106), (31, -1), (32, 6), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 128), (13, 4), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, 8), (20, 8), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, -1), (27, -1), (28, -1), (29, 128), (30, 106), (31, -1), (32, 6), (33, 6)]

Covered at level 10 : set()

After reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32]
 solution : [0, 15, 7, 14, 3]


Solution : [0, 15, 7, 14, 3] has cost 32.


Before backtrack at level 10
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32]
 solution : [0, 15, 7, 14, 3]

After backtrack at level 10
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32, 28, 4, 26]
 solution : [0, 15, 7, 14, 3]


Invert decision for 3 at level 9


New level: 10
 pending : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32, 28, 4, 26]
 solution : [0, 15, 7, 14]


Before reduction : 
 pending  : [30, 24, 29, 17, 21, 25, 23, 16, 8, 22, 6, 13, 12, 10, 18, 20, 19, 33, 32, 28, 4, 26]
 solution : [0, 15, 7, 14]

Essensial at level 10 : {10, 18, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 128), (13, 4), (14, -1), (15, -1), (16, 8), (17, 23), (18, 23), (19, 8), (20, 8), (21, 52), (22, 52), (23, 24), (24, 24), (25, 16), (26, -1), (27, -1), (28, -1), (29, 128), (30, 106), (31, -1), (32, 6), (33, 6)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

Covered at level 10 : {32, 33, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30}

After reduction : 
 pending  : [8, 6, 13, 12]
 solution : [0, 15, 7, 14, 10, 18, 4]


Before reduction : 
 pending  : [8, 6, 13, 12]
 solution : [0, 15, 7, 14, 10, 18, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, -1), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 6, 13, 12]
 solution : [0, 15, 7, 14, 10, 18, 4]


Solution : [0, 15, 7, 14, 10, 18, 4] has cost 71.


Before backtrack at level 10
 pending : [8, 6, 13, 12]
 solution : [0, 15, 7, 14, 10, 18, 4]

After backtrack at level 10
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26]
 solution : [0, 15, 7, 14]


Before backtrack at level 9
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26]
 solution : [0, 15, 7, 14]

After backtrack at level 9
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3]
 solution : [0, 15, 7, 14]


Before backtrack at level 8
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3]
 solution : [0, 15, 7, 14]

After backtrack at level 8
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31]
 solution : [0, 15, 7, 14]


Before backtrack at level 7
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31]
 solution : [0, 15, 7, 14]

After backtrack at level 7
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 2), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 7 : set()

After reduction : 
 pending  : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7]


Solution : [0, 15, 7] has cost 20.


Decide in level 7 among pending : [8, 6, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [8, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]


New level: 8
 pending : [8, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]


Before reduction : 
 pending  : [8, 13, 12, 10, 18, 4, 30, 24, 29, 17, 21, 25, 23, 16, 22, 20, 19, 33, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, 512), (12, 0), (13, 4), (14, -1), (15, -1), (16, 2), (17, 9), (18, 200), (19, 128), (20, 256), (21, 25), (22, 0), (23, 16), (24, 0), (25, 256), (26, 32), (27, -1), (28, 64), (29, 4), (30, 14), (31, 386), (32, 96), (33, 0)]

Covered at level 8 : {33, 8, 12, 22, 24}

After reduction : 
 pending  : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]


Before reduction : 
 pending  : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, 512), (12, 0), (13, 4), (14, -1), (15, -1), (16, 2), (17, 9), (18, 200), (19, 128), (20, 256), (21, 25), (22, 0), (23, 16), (24, 0), (25, 256), (26, 32), (27, -1), (28, 64), (29, 4), (30, 14), (31, 386), (32, 96), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, 512), (12, -1), (13, 4), (14, -1), (15, -1), (16, 2), (17, 9), (18, 200), (19, 128), (20, 256), (21, 25), (22, -1), (23, 16), (24, -1), (25, 64), (26, 32), (27, -1), (28, 64), (29, 4), (30, 14), (31, 386), (32, 96), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]


Solution : [0, 15, 7, 6] has cost 26.


Before backtrack at level 8
 pending : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11]
 solution : [0, 15, 7, 6]

After backtrack at level 8
 pending : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, 512), (12, -1), (13, 4), (14, -1), (15, -1), (16, 2), (17, 9), (18, 200), (19, 128), (20, 256), (21, 25), (22, -1), (23, 16), (24, -1), (25, 64), (26, 32), (27, -1), (28, 64), (29, 4), (30, 14), (31, 386), (32, 96), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Covered at level 8 : set()

After reduction : 
 pending  : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7]


Solution : [0, 15, 7] has cost 20.


Decide in level 8 among pending : [13, 10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]


New level: 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 288), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 256), (11, 512), (12, 256), (13, 512), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 256), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 418), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, 128), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 16), (17, 50), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 128), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 393), (32, 96), (33, 48)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]


Solution : [0, 15, 7, 13] has cost 25.


Before backtrack at level 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]

After backtrack at level 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 11, 8, 12, 24, 22, 33]
 solution : [0, 15, 7]

Essensial at level 9 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 264), (4, 128), (5, -1), (6, -1), (7, -1), (8, 64), (9, -1), (10, 128), (11, 64), (12, 128), (13, -1), (14, -1), (15, -1), (16, 16), (17, 50), (18, 200), (19, 128), (20, 256), (21, 240), (22, 202), (23, 100), (24, 96), (25, 128), (26, 32), (27, -1), (28, 64), (29, 128), (30, 256), (31, 393), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 202), (23, 24), (24, 96), (25, 32), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 48)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 11]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 202), (23, 24), (24, 96), (25, 32), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 202), (23, 24), (24, 96), (25, 32), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 48)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 11]


Solution : [0, 15, 7, 11] has cost 25.


Before backtrack at level 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33]
 solution : [0, 15, 7, 11]

After backtrack at level 9
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11]
 solution : [0, 15, 7]


Before backtrack at level 8
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11]
 solution : [0, 15, 7]

After backtrack at level 8
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13]
 solution : [0, 15, 7]


Before backtrack at level 7
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13]
 solution : [0, 15, 7]

After backtrack at level 7
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6]
 solution : [0, 15, 7]


Before backtrack at level 6
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6]
 solution : [0, 15, 7]

After backtrack at level 6
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14]
 solution : [0, 15, 7]


Before backtrack at level 5
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14]
 solution : [0, 15, 7]

After backtrack at level 5
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14, 9]
 solution : [0, 15, 7]


Before backtrack at level 4
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14, 9]
 solution : [0, 15, 7]

After backtrack at level 4
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 7]


Invert decision for 7 at level 3


New level: 4
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 8, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15]

Essensial at level 4 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 132), (4, 64), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, 128), (11, -1), (12, 256), (13, -1), (14, -1), (15, -1), (16, 64), (17, 216), (18, 200), (19, 128), (20, 128), (21, 52), (22, 202), (23, 24), (24, 96), (25, 32), (26, 16), (27, -1), (28, 32), (29, 128), (30, 202), (31, 417), (32, 96), (33, 48)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 128), (17, 180), (18, 576), (19, 256), (20, 256), (21, 480), (22, 288), (23, 224), (24, 112), (25, 256), (26, 128), (27, 64), (28, 128), (29, 128), (30, 320), (31, 356), (32, 384), (33, 96)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 128), (17, 180), (18, 576), (19, 256), (20, 256), (21, 480), (22, 288), (23, 224), (24, 112), (25, 256), (26, 128), (27, 64), (28, 128), (29, 128), (30, 320), (31, 356), (32, 384), (33, 96)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 128), (17, 180), (18, 576), (19, 256), (20, 256), (21, 480), (22, 288), (23, 224), (24, 112), (25, 256), (26, 128), (27, 64), (28, 128), (29, 128), (30, 320), (31, 356), (32, 384), (33, 96)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8]


Solution : [0, 15, 8] has cost 13.


Decide in level 4 among pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 3, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]

Coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 128), (17, 180), (18, 576), (19, 256), (20, 256), (21, 480), (22, 288), (23, 224), (24, 112), (25, 256), (26, 128), (27, 64), (28, 128), (29, 128), (30, 320), (31, 356), (32, 384), (33, 96)]

Decide 3 with phase True at level 4

After decision at level 4
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8, 3]


New level: 5
 pending : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8, 3]


Before reduction : 
 pending  : [10, 18, 4, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 28, 26, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 27, 2]
 solution : [0, 15, 8, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, 640), (4, 512), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 128), (17, 180), (18, 576), (19, 256), (20, 256), (21, 480), (22, 288), (23, 224), (24, 112), (25, 256), (26, 128), (27, 64), (28, 128), (29, 128), (30, 320), (31, 356), (32, 384), (33, 96)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 0), (5, -1), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 41), (18, 23), (19, 8), (20, 32), (21, 52), (22, 102), (23, 24), (24, 48), (25, 64), (26, 0), (27, 0), (28, 0), (29, 128), (30, 202), (31, 104), (32, 6), (33, 12)]

Covered at level 5 : {26, 27, 4, 28}

After reduction : 
 pending  : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2]
 solution : [0, 15, 8, 3]


Before reduction : 
 pending  : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2]
 solution : [0, 15, 8, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, 0), (5, -1), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 41), (18, 23), (19, 8), (20, 32), (21, 52), (22, 102), (23, 24), (24, 48), (25, 64), (26, 0), (27, 0), (28, 0), (29, 128), (30, 202), (31, 104), (32, 6), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 41), (18, 23), (19, 8), (20, 32), (21, 52), (22, 102), (23, 24), (24, 48), (25, 64), (26, -1), (27, -1), (28, -1), (29, 128), (30, 202), (31, 104), (32, 6), (33, 12)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2]
 solution : [0, 15, 8, 3]


Solution : [0, 15, 8, 3] has cost 23.


Before backtrack at level 5
 pending : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2]
 solution : [0, 15, 8, 3]

After backtrack at level 5
 pending : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 4, 28, 26, 27]
 solution : [0, 15, 8, 3]


Invert decision for 3 at level 4


New level: 5
 pending : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 4, 28, 26, 27]
 solution : [0, 15, 8]


Before reduction : 
 pending  : [10, 18, 30, 29, 17, 21, 25, 23, 16, 20, 19, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 4, 28, 26, 27]
 solution : [0, 15, 8]

Essensial at level 5 : {10, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, 576), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 256), (13, 512), (14, 512), (15, -1), (16, 16), (17, 41), (18, 23), (19, 8), (20, 32), (21, 52), (22, 102), (23, 24), (24, 48), (25, 64), (26, -1), (27, -1), (28, -1), (29, 128), (30, 202), (31, 104), (32, 6), (33, 12)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, -1), (16, 16), (17, 141), (18, 145), (19, 0), (20, 32), (21, 128), (22, 36), (23, 4), (24, 4), (25, 128), (26, 0), (27, 8), (28, 32), (29, 2), (30, 50), (31, 265), (32, 2), (33, 16)]

Covered at level 5 : {26, 19}

After reduction : 
 pending  : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27]
 solution : [0, 15, 8, 10, 4]


Before reduction : 
 pending  : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27]
 solution : [0, 15, 8, 10, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, -1), (16, 16), (17, 141), (18, 145), (19, 0), (20, 32), (21, 128), (22, 36), (23, 4), (24, 4), (25, 128), (26, 0), (27, 8), (28, 32), (29, 2), (30, 50), (31, 265), (32, 2), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 512), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 8), (13, 128), (14, 512), (15, -1), (16, 16), (17, 141), (18, 145), (19, -1), (20, 32), (21, 128), (22, 36), (23, 4), (24, 4), (25, 128), (26, -1), (27, 8), (28, 32), (29, 2), (30, 50), (31, 265), (32, 2), (33, 16)]

Covered at level 5 : set()

After reduction : 
 pending  : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27]
 solution : [0, 15, 8, 10, 4]


Solution : [0, 15, 8, 10, 4] has cost 28.


Before backtrack at level 5
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27]
 solution : [0, 15, 8, 10, 4]

After backtrack at level 5
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26]
 solution : [0, 15, 8]


Before backtrack at level 4
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26]
 solution : [0, 15, 8]

After backtrack at level 4
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3]
 solution : [0, 15]


Before backtrack at level 3
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3]
 solution : [0, 15]

After backtrack at level 3
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3, 7]
 solution : [0, 15]


Before backtrack at level 2
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3, 7]
 solution : [0, 15]

After backtrack at level 2
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3, 7, 5]
 solution : [0, 15]


Before backtrack at level 1
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3, 7, 5]
 solution : [0, 15]

After backtrack at level 1
 pending : [18, 30, 29, 17, 21, 25, 23, 16, 20, 32, 31, 12, 24, 22, 33, 11, 13, 6, 14, 9, 2, 28, 27, 10, 4, 19, 26, 8, 3, 7, 5, 1]
 solution : [0, 15]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 15, 1, 9, 4]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_15] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0) # qcost: 3

invariant [invar_9] forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_4] forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 11.686 seconds

[QRM NOTE]: Time elapsed since last: 2.478 seconds

[QRM NOTE]: Peak memory: 2398190 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_9 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_4 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


==================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym/ivy/firewall.node_3.0.ivy]

==================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {1, 3}

invariant [invar_15] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_9] forall NODE0,NODE1. internal(NODE0) | ~sent(NODE0,NODE1) | internal(NODE1) | NODE0 = NODE1 # qcost: 6


========================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.assert.ivy]

========================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.assert.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_9

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_9 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_9 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_9 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 15.616 seconds

[QRM NOTE]: Time elapsed since last: 3.930 seconds

[QRM NOTE]: Peak memory: 2420306 bytes


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[QRM RESULT]: PASS

