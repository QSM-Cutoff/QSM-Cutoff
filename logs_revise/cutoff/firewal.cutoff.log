
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 9.192 seconds

[QRM NOTE]: Time elapsed since last: 9.192 seconds

[QRM NOTE]: Peak memory: 1177582 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: allowed_in('node',)
predicate: internal('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000101000000000
lex min decimal: 1536
states:
000110000000000
000011000000000
000101000000000




=== State Orbit 3 =====================
size : 3
repr state: 000100000000000
lex min decimal: 512
states:
000001000000000
000100000000000
000010000000000




=== State Orbit 4 =====================
size : 6
repr state: 010101010000000
lex min decimal: 7176
states:
010101010000000
010101000000010
100011000000100
001110000001000
001110001000000
100011000100000




=== State Orbit 5 =====================
size : 3
repr state: 010101010000010
lex min decimal: 7240
states:
001110001001000
100011000100100
010101010000010




=== State Orbit 6 =====================
size : 6
repr state: 010101010100010
lex min decimal: 7242
states:
001110001001100
100011010100100
001110001001010
100011001100100
010101010001010
010101010100010




=== State Orbit 7 =====================
size : 3
repr state: 010101010101010
lex min decimal: 7246
states:
001110001001110
010101010101010
100011011100100




=== State Orbit 8 =====================
size : 6
repr state: 010101010100000
lex min decimal: 7178
states:
001110000001010
010101000001010
100011010100000
010101010100000
100011001000100
001110001000100




=== State Orbit 9 =====================
size : 6
repr state: 010101010101000
lex min decimal: 7182
states:
010101000101010
100011011000100
001110000001110
010101010101000
100011011100000
001110001000110




=== State Orbit 10 =====================
size : 6
repr state: 010101010001000
lex min decimal: 7180
states:
010101010001000
010101000100010
001110001000010
100011001100000
100011010000100
001110000001100




=== State Orbit 11 =====================
size : 6
repr state: 010100010000000
lex min decimal: 5128
states:
010001000000010
100001000000100
010100010000000
001010000001000
001100001000000
100010000100000




=== State Orbit 12 =====================
size : 3
repr state: 011100011000000
lex min decimal: 14528
states:
011100011000000
110001000000110
101010000101000




=== State Orbit 13 =====================
size : 6
repr state: 011100011100000
lex min decimal: 14532
states:
011100011000100
101010010101000
110001001000110
101010000101010
110001000001110
011100011100000




=== State Orbit 14 =====================
size : 3
repr state: 011100011100100
lex min decimal: 14564
states:
011100011100100
101010010101010
110001001001110




=== State Orbit 15 =====================
size : 6
repr state: 010100010100000
lex min decimal: 5130
states:
010100010100000
001100001000100
100010010100000
010001000001010
001010000001010
100001001000100



[QRM NOTE]: Time elapsed since start: 9.324 seconds

[QRM NOTE]: Time elapsed since last: 0.131 seconds

[QRM NOTE]: Peak memory: 1227740 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 9.329 seconds

[QRM NOTE]: Time elapsed since last: 0.005 seconds

[QRM NOTE]: Peak memory: 190820 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : -1---0-0-------
6     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
7     : --1-0---0------
7     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
8     : 1----0---0-----
8     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
9     : --10-------0---
9     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
10     : 1---0-------0--
10     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : -11----0-------
12     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
13     : -11-----0------
13     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
14     : 1-1------0-----
14     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
15     : 1-1--------0---
15     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
16     : 11----------0--
16     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 8
num_suborbits: 2
18 (*) : -------11--1---
18     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
19     : -------11----1-
19     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
20     : --------11-1---
20     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
21     : ---------1-11--
21     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
22     : -------1----11-
22     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
23     : ---------1--11-
23     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : -0---1-----1---
24     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
25     : --0-1--------1-
25     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
26     : 0----1--1------
26     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
27     : --01--------1--
27     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
28     : 0---1--1-------
28     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
29     : -0-1-----1-----
29     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
60 (*) : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : -0---1-------1-
61     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
62     : --01----1------
62     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
64     : -0-1---1-------
64     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
65     : 0---1----1-----
65     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : ----11-----1---
30     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
31     : ----11-------1-
31     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
32     : ---1-1--1------
32     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
33     : ---1-1------1--
33     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
34     : ---11--1-------
34     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
35     : ---11----1-----
35     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
36 (*) : ----00-----1---
36     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
37     : ----00-------1-
37     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
38     : ---0-0--1------
38     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
39     : ---0-0------1--
39     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
40     : ---00--1-------
40     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
41     : ---00----1-----
41     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 12
num_suborbits: 2
42 (*) : -0--0------1---
42     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
43     : --0--0-------1-
43     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
44     : 0--0----1------
44     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
45     : --0--0------1--
45     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
46     : 0--0---1-------
46     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
47     : -0--0----1-----
47     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
54 (*) : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : -0--0--------1-
55     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0--1------
56     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
58     : -0--0--1-------
58     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
59     : 0--0-----1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
48 (*) : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : -00----------1-
49     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
50     : 0-0-----1------
50     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
52     : 00-----1-------
52     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
53     : 00-------1-----
53     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
66 (*) : --1-0------1---
66     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
67     : -1---0-------1-
67     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
68     : --10----1------
68     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
69     : 1----0------1--
69     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
70     : -1-0---1-------
70     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
71     : 1---0----1-----
71     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
74 (*) : -1---0-----1---
74     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
75     : --1-0--------1-
75     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
76     : 1----0--1------
76     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
77     : --10--------1--
77     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
78     : 1---0--1-------
78     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
79     : -1-0-----1-----
79     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
80 (*) : -11--------1---
80     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
81     : -11----------1-
81     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
82     : 1-1-----1------
82     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
83     : 1-1---------1--
83     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
84     : 11-----1-------
84     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
85     : 11-------1-----
85     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
86 (*) : -110-----------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : 11---0---------
88     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : -1-0-0---------
89     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
90     : --100----------
90     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
91     : 1---00---------
91     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : 1--------0--0--
93     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : --1-----0--0---
95     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 1------1---0-1-
96     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
97     : 1-------1--1-0-
97     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
98     : -1------01--1--
98     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
99     : -1------1--10--
99     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
100     : --1----0-1--1--
100     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
101     : --1----1-0---1-
101     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
108 (*) : 1------1-0---1-
108     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
109     : 1-------1--10--
109     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
110     : -1-----0-1--1--
110     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
111     : -1------1--1-0-
111     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
112     : --1-----01--1--
112     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
113     : --1----1---0-1-
113     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
240 (*) : --1----10---1--
240     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
241     : -1-----011-----
241     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
242     : --1------1-0-1-
242     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
243     : 1------1-0-1---
243     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
244     : -1---------110-
244     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
245     : 1-------1---01-
245     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
246 (*) : -1-----10---1--
246     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --1----011-----
247     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1--------1-0-1-
248     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1----1-0-1---
249     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
250     : 1----------110-
250     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
251     : -1------1---01-
251     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 12
num_suborbits: 2
102 (*) : -0-----1---0-1-
102     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
103     : --0-----1--1-0-
103     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
104     : 0-------01--1--
104     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
105     : --0-----1--10--
105     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
106     : 0------0-1--1--
106     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
107     : -0-----1-0---1-
107     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
216 (*) : 0------10---1--
216     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 0------011-----
217     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -0-------1-0-1-
218     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : -0-----1-0-1---
219     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : --0--------110-
220     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : --0-----1---01-
221     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : ---0---1-0---1-
114     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
115     : ---0----1--10--
115     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
116     : ----0--0-1--1--
116     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
117     : ----0---1--1-0-
117     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
118     : -----0--01--1--
118     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
119     : -----0-1---0-1-
119     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
120 (*) : -----0-1-0---1-
120     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
121     : ----0---1--10--
121     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
122     : -----0-0-1--1--
122     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
123     : ---0----1--1-0-
123     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
124     : ----0---01--1--
124     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
125     : ---0---1---0-1-
125     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
186 (*) : -----0-10---1--
186     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
187     : ----0--011-----
187     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
188     : -----0---1-0-1-
188     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
189     : ---0---1-0-1---
189     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
190     : ----0------110-
190     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
191     : ---0----1---01-
191     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
204 (*) : ----0--10---1--
204     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
205     : -----0-011-----
205     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
206     : ---0-----1-0-1-
206     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
207     : -----0-1-0-1---
207     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
208     : ---0-------110-
208     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
209     : ----0---1---01-
209     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 12
num_suborbits: 2
126 (*) : ----1--1-0---1-
126     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
127     : -----1--1--10--
127     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
128     : ---1---0-1--1--
128     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
129     : -----1--1--1-0-
129     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
130     : ---1----01--1--
130     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
131     : ----1--1---0-1-
131     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : ---1---10---1--
222     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
223     : ---1---011-----
223     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
224     : ----1----1-0-1-
224     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
225     : ----1--1-0-1---
225     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -----1-----110-
226     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : -----1--1---01-
227     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
132 (*) : ---0-1-1-----1-
132     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
133     : ---01---1--1---
133     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
134     : ----01---1--1--
134     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
135     : ---10---1--1---
135     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
136     : ----10---1--1--
136     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
137     : ---1-0-1-----1-
137     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
180 (*) : ----01-1----1--
180     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
181     : ----10--11-----
181     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
182     : ---0-1---1---1-
182     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
183     : ---1-0-1---1---
183     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
184     : ---01------11--
184     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
185     : ---10---1----1-
185     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
192 (*) : ----10-1----1--
192     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
193     : ----01--11-----
193     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
194     : ---1-0---1---1-
194     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
195     : ---0-1-1---1---
195     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
196     : ---10------11--
196     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
197     : ---01---1----1-
197     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ----01-11------
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
265     : ----10-11------
265     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
266     : ---0-1---1-1---
266     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
267     : ---1-0---1-1---
267     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
268     : ---01-------11-
268     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
269     : ---10-------11-
269     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : --00---1-----1-
138     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
139     : -0-0----1--1---
139     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
140     : --0-0----1--1--
140     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
141     : 0---0---1--1---
141     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
142     : -0---0---1--1--
142     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
143     : 0----0-1-----1-
143     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
198 (*) : -0---0-1----1--
198     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
199     : --0-0---11-----
199     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
200     : 0----0---1---1-
200     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
201     : --00---1---1---
201     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
202     : 0---0------11--
202     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
203     : -0-0----1----1-
203     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
210 (*) : --0-0--1----1--
210     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
211     : -0---0--11-----
211     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
212     : --00-----1---1-
212     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
213     : 0----0-1---1---
213     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
214     : -0-0-------11--
214     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
215     : 0---0---1----1-
215     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : -0---0-11------
270     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
271     : --0-0--11------
271     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
272     : 0----0---1-1---
272     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
273     : --00-----1-1---
273     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
274     : 0---0-------11-
274     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
275     : -0-0--------11-
275     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --11---1-----1-
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
145     : -1-1----1--1---
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
146     : --1-1----1--1--
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
147     : 1---1---1--1---
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
148     : -1---1---1--1--
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
149     : 1----1-1-----1-
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
228 (*) : --1-1--1----1--
228     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
229     : -1---1--11-----
229     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
230     : --11-----1---1-
230     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
231     : 1----1-1---1---
231     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
232     : -1-1-------11--
232     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
233     : 1---1---1----1-
233     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
258 (*) : -1---1-1----1--
258     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
259     : --1-1---11-----
259     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
260     : 1----1---1---1-
260     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
261     : --11---1---1---
261     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
262     : 1---1------11--
262     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
263     : -1-1----1----1-
263     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
276 (*) : --1-1--11------
276     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
277     : -1---1-11------
277     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
278     : --11-----1-1---
278     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
279     : 1----1---1-1---
279     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
280     : -1-1--------11-
280     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
281     : 1---1-------11-
281     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
150 (*) : 0-1----1-----1-
150     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
151     : 01------1--1---
151     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
152     : -01------1--1--
152     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
153     : 10------1--1---
153     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
154     : -10------1--1--
154     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
155     : 1-0----1-----1-
155     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
234 (*) : -01----1----1--
234     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
235     : -10-----11-----
235     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
236     : 0-1------1---1-
236     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
237     : 1-0----1---1---
237     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
238     : 01---------11--
238     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
239     : 10------1----1-
239     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
252 (*) : -10----1----1--
252     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
253     : -01-----11-----
253     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
254     : 1-0------1---1-
254     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
255     : 0-1----1---1---
255     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
256     : 10---------11--
256     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
257     : 01------1----1-
257     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
282 (*) : -01----11------
282     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
283     : -10----11------
283     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
284     : 0-1------1-1---
284     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
285     : 1-0------1-1---
285     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
286     : 01----------11-
286     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
287     : 10----------11-
287     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
156 (*) : --1-1--1---0---
156     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
157     : -1---1--1----0-
157     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
158     : --11----01-----
158     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
159     : 1----1-----10--
159     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
160     : -1-1---0----1--
160     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
161     : 1---1----0---1-
161     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
168 (*) : --11---10------
168     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
169     : -1-1---01------
169     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
170     : --1-1----1-0---
170     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
171     : 1---1----0-1---
171     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
172     : -1---1------10-
172     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
173     : 1----1------01-
173     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 18
num_suborbits: 3
162 (*) : -01----1---0---
162     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
163     : -10-----1----0-
163     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
164     : 0-1-----01-----
164     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
165     : 1-0--------10--
165     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
166     : 01-----0----1--
166     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
167     : 10-------0---1-
167     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
174 (*) : 0-1----10------
174     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----01------
175     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01------1-0---
176     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0-1---
177     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10---------10-
178     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0---------01-
179     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
324 (*) : -01----1-0-----
324     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
325     : -10-----1---0--
325     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
326     : 0-1----0-1-----
326     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
327     : 1-0--------1-0-
327     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
328     : 01------0---1--
328     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
329     : 10---------0-1-
329     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
300 (*) : ----10-1-0-----
300     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
301     : ----01--1---0--
301     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
302     : ---1-0-0-1-----
302     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
303     : ---0-1-----1-0-
303     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
304     : ---10---0---1--
304     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
305     : ---01------0-1-
305     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
306 (*) : ----1--1-0--0--
306     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
307     : -----1--10--0--
307     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
308     : ---1---0-1---0-
308     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
309     : -----1-0---1-0-
309     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
310     : ---1----0--01--
310     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
311     : ----1---0--0-1-
311     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
312 (*) : -0---0-1-0-----
312     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
313     : --0-0---1---0--
313     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
314     : 0----0-0-1-----
314     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
315     : --00-------1-0-
315     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
316     : 0---0---0---1--
316     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
317     : -0-0-------0-1-
317     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
318 (*) : -0-----1-0--0--
318     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : --0-----10--0--
319     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : 0------0-1---0-
320     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : --0----0---1-0-
321     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : 0-------0--01--
322     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -0------0--0-1-
323     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-0-1-0-----
330     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
331     : ---00---1---0--
331     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
332     : ----00-0-1-----
332     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
333     : ---00------1-0-
333     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
334     : ----00--0---1--
334     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
335     : ---0-0-----0-1-
335     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : ---0---1-0--0--
336     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
337     : ---0----10--0--
337     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
338     : ----0--0-1---0-
338     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
339     : ----0--0---1-0-
339     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
340     : -----0--0--01--
340     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
341     : -----0--0--0-1-
341     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : --10---1-0-----
342     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
343     : -1-0----1---0--
343     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
344     : --1-0--0-1-----
344     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
345     : 1---0------1-0-
345     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
346     : -1---0--0---1--
346     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
347     : 1----0-----0-1-
347     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 9.429 seconds

[QRM NOTE]: Time elapsed since last: 0.100 seconds

[QRM NOTE]: Peak memory: 1556807 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 15}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 544), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 544), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 528), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

[QRM NOTE]: Time elapsed since start: 9.456 seconds

[QRM NOTE]: Time elapsed since last: 0.027 seconds

[QRM NOTE]: Peak memory: 496010 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : 1--------0--0--
93     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : --1-----0--0---
95     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE0,NODE1)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : -1---0-0-------
6     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
7     : --1-0---0------
7     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
8     : 1----0---0-----
8     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
9     : --10-------0---
9     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
10     : 1---0-------0--
10     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE0)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : -11----0-------
12     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
13     : -11-----0------
13     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
14     : 1-1------0-----
14     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
15     : 1-1--------0---
15     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
16     : 11----------0--
16     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$allowed_in$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$allowed_in$0$1, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$allowed_in$0$1 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$allowed_in$0': [node$0$allowed_in$0$1], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$allowed_in$0': node$0$allowed_in$0$1, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE0)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 4 =====================
size : 8
num_suborbits: 2
18 (*) : -------11--1---
18     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
19     : -------11----1-
19     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
20     : --------11-1---
20     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
21     : ---------1-11--
21     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
22     : -------1----11-
22     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
23     : ---------1--11-
23     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$0$2; node$0$sent$1$0, node$0$sent$1$1; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$0 | node$0$sent$1$1; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$0 | node$0$sent$1$1; node$0$sent$1$2',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$2, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$0$2; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$0$sent$1$2 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$0$2; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2, node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2 | node$0$sent$1$0 | node$0$sent$1$1 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE3)', 'sent(NODE1,NODE4)', 'sent(NODE2,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE0,NODE3) | ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE2 = NODE4 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : -0---1-----1---
24     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
25     : --0-1--------1-
25     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
26     : 0----1--1------
26     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
27     : --01--------1--
27     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
28     : 0---1--1-------
28     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
29     : -0-1-----1-----
29     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
60 (*) : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : -0---1-------1-
61     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
62     : --01----1------
62     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
64     : -0-1---1-------
64     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
65     : 0---1----1-----
65     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~allowed_in(NODE3)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1,NODE3. ~internal(NODE0) | allowed_in(NODE3) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : ----11-----1---
30     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
31     : ----11-------1-
31     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
32     : ---1-1--1------
32     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
33     : ---1-1------1--
33     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
34     : ---11--1-------
34     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
35     : ---11----1-----
35     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE0,NODE1)', 'internal(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~internal(NODE0) | ~sent(NODE0,NODE1) | ~internal(NODE1) | NODE0 = NODE1


=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
36 (*) : ----00-----1---
36     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
37     : ----00-------1-
37     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
38     : ---0-0--1------
38     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
39     : ---0-0------1--
39     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
40     : ---00--1-------
40     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
41     : ---00----1-----
41     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~internal(node2)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 12
num_suborbits: 2
42 (*) : -0--0------1---
42     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
43     : --0--0-------1-
43     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
44     : 0--0----1------
44     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
45     : --0--0------1--
45     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
46     : 0--0---1-------
46     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
47     : -0--0----1-----
47     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
54 (*) : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : -0--0--------1-
55     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0--1------
56     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
58     : -0--0--1-------
58     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
59     : 0--0-----1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', 'sent(NODE0,NODE1)', '~allowed_in(NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. internal(NODE2) | ~sent(NODE0,NODE1) | allowed_in(NODE2) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
48 (*) : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : -00----------1-
49     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
50     : 0-0-----1------
50     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
52     : 00-----1-------
52     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
53     : 00-------1-----
53     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~allowed_in(node2)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~allowed_in(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
66 (*) : --1-0------1---
66     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
67     : -1---0-------1-
67     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
68     : --10----1------
68     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
69     : 1----0------1--
69     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
70     : -1-0---1-------
70     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
71     : 1---0----1-----
71     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
74 (*) : -1---0-----1---
74     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
75     : --1-0--------1-
75     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
76     : 1----0--1------
76     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
77     : --10--------1--
77     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
78     : 1---0--1-------
78     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
79     : -1-0-----1-----
79     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~internal(NODE3)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1,NODE3. ~sent(NODE1,NODE2) | internal(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
80 (*) : -11--------1---
80     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
81     : -11----------1-
81     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
82     : 1-1-----1------
82     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
83     : 1-1---------1--
83     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
84     : 11-----1-------
84     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
85     : 11-------1-----
85     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', 'sent(NODE0,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
86 (*) : -110-----------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : 11---0---------
88     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : -1-0-0---------
89     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
90     : --100----------
90     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
91     : 1---00---------
91     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 1------1---0-1-
96     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
97     : 1-------1--1-0-
97     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
98     : -1------01--1--
98     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
99     : -1------1--10--
99     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
100     : --1----0-1--1--
100     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
101     : --1----1-0---1-
101     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
108 (*) : 1------1-0---1-
108     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
109     : 1-------1--10--
109     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
110     : -1-----0-1--1--
110     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
111     : -1------1--1-0-
111     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
112     : --1-----01--1--
112     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
113     : --1----1---0-1-
113     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
240 (*) : --1----10---1--
240     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
241     : -1-----011-----
241     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
242     : --1------1-0-1-
242     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
243     : 1------1-0-1---
243     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
244     : -1---------110-
244     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
245     : 1-------1---01-
245     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
246 (*) : -1-----10---1--
246     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --1----011-----
247     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1--------1-0-1-
248     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1----1-0-1---
249     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
250     : 1----------110-
250     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
251     : -1------1---01-
251     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$1; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$1; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE4)', 'sent(NODE1,NODE3)', 'allowed_in(NODE0)', '~sent(NODE4,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | ~allowed_in(NODE0) | sent(NODE4,NODE5) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE0 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 17 =====================
size : 12
num_suborbits: 2
102 (*) : -0-----1---0-1-
102     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
103     : --0-----1--1-0-
103     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
104     : 0-------01--1--
104     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
105     : --0-----1--10--
105     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
106     : 0------0-1--1--
106     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
107     : -0-----1-0---1-
107     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
216 (*) : 0------10---1--
216     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 0------011-----
217     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -0-------1-0-1-
218     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : -0-----1-0-1---
219     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : --0--------110-
220     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : --0-----1---01-
221     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node2)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$1; node$1$sent$1$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$1; node$1$sent$1$0, 'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', '~sent(NODE3,NODE1)', 'sent(NODE1,NODE3)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1,NODE3. allowed_in(NODE3) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : ---0---1-0---1-
114     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
115     : ---0----1--10--
115     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
116     : ----0--0-1--1--
116     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
117     : ----0---1--1-0-
117     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
118     : -----0--01--1--
118     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
119     : -----0-1---0-1-
119     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
120 (*) : -----0-1-0---1-
120     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
121     : ----0---1--10--
121     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
122     : -----0-0-1--1--
122     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
123     : ---0----1--1-0-
123     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
124     : ----0---01--1--
124     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
125     : ---0---1---0-1-
125     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
186 (*) : -----0-10---1--
186     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
187     : ----0--011-----
187     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
188     : -----0---1-0-1-
188     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
189     : ---0---1-0-1---
189     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
190     : ----0------110-
190     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
191     : ---0----1---01-
191     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
204 (*) : ----0--10---1--
204     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
205     : -----0-011-----
205     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
206     : ---0-----1-0-1-
206     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
207     : -----0-1-0-1---
207     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
208     : ---0-------110-
208     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
209     : ----0---1---01-
209     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1; node$1$sent$0$0, node$1$internal$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1; node$1$sent$0$0 | node$1$internal$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$1; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$sent$1': node$0$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$1; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE3,NODE5)', '~internal(NODE4)', 'sent(NODE1,NODE3)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. sent(NODE3,NODE5) | internal(NODE4) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE4 | NODE0 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE1 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE5 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 19 =====================
size : 12
num_suborbits: 2
126 (*) : ----1--1-0---1-
126     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
127     : -----1--1--10--
127     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
128     : ---1---0-1--1--
128     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
129     : -----1--1--1-0-
129     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
130     : ---1----01--1--
130     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
131     : ----1--1---0-1-
131     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : ---1---10---1--
222     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
223     : ---1---011-----
223     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
224     : ----1----1-0-1-
224     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
225     : ----1--1-0-1---
225     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -----1-----110-
226     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : -----1--1---01-
227     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$1, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$1; node$1$sent$1$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$1; node$1$sent$1$0 | node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$1; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE2,NODE0)', '~sent(NODE0,NODE4)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE4,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE2,NODE0) | sent(NODE0,NODE4) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2))


=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
132 (*) : ---0-1-1-----1-
132     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
133     : ---01---1--1---
133     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
134     : ----01---1--1--
134     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
135     : ---10---1--1---
135     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
136     : ----10---1--1--
136     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
137     : ---1-0-1-----1-
137     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
180 (*) : ----01-1----1--
180     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
181     : ----10--11-----
181     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
182     : ---0-1---1---1-
182     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
183     : ---1-0-1---1---
183     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
184     : ---01------11--
184     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
185     : ---10---1----1-
185     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
192 (*) : ----10-1----1--
192     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
193     : ----01--11-----
193     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
194     : ---1-0---1---1-
194     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
195     : ---0-1-1---1---
195     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
196     : ---10------11--
196     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
197     : ---01---1----1-
197     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ----01-11------
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
265     : ----10-11------
265     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
266     : ---0-1---1-1---
266     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
267     : ---1-0---1-1---
267     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
268     : ---01-------11-
268     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
269     : ---10-------11-
269     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE2,NODE4)', '~internal(NODE5)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE2,NODE4) | internal(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3))


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : --00---1-----1-
138     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
139     : -0-0----1--1---
139     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
140     : --0-0----1--1--
140     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
141     : 0---0---1--1---
141     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
142     : -0---0---1--1--
142     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
143     : 0----0-1-----1-
143     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
198 (*) : -0---0-1----1--
198     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
199     : --0-0---11-----
199     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
200     : 0----0---1---1-
200     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
201     : --00---1---1---
201     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
202     : 0---0------11--
202     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
203     : -0-0----1----1-
203     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
210 (*) : --0-0--1----1--
210     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
211     : -0---0--11-----
211     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
212     : --00-----1---1-
212     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
213     : 0----0-1---1---
213     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
214     : -0-0-------11--
214     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
215     : 0---0---1----1-
215     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : -0---0-11------
270     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
271     : --0-0--11------
271     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
272     : 0----0---1-1---
272     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
273     : --00-----1-1---
273     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
274     : 0---0-------11-
274     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
275     : -0-0--------11-
275     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE4)', '~internal(NODE5)', 'sent(NODE1,NODE3)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. allowed_in(NODE4) | internal(NODE5) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE5 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2))


=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --11---1-----1-
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
145     : -1-1----1--1---
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
146     : --1-1----1--1--
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
147     : 1---1---1--1---
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
148     : -1---1---1--1--
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
149     : 1----1-1-----1-
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
228 (*) : --1-1--1----1--
228     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
229     : -1---1--11-----
229     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
230     : --11-----1---1-
230     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
231     : 1----1-1---1---
231     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
232     : -1-1-------11--
232     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
233     : 1---1---1----1-
233     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
258 (*) : -1---1-1----1--
258     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
259     : --1-1---11-----
259     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
260     : 1----1---1---1-
260     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
261     : --11---1---1---
261     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
262     : 1---1------11--
262     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
263     : -1-1----1----1-
263     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
276 (*) : --1-1--11------
276     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
277     : -1---1-11------
277     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
278     : --11-----1-1---
278     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
279     : 1----1---1-1---
279     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
280     : -1-1--------11-
280     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
281     : 1---1-------11-
281     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE2,NODE4)', 'internal(NODE1)', 'sent(NODE3,NODE5)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE2,NODE4) | ~internal(NODE1) | ~sent(NODE3,NODE5) | ~allowed_in(NODE0) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE1 = NODE4 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
150 (*) : 0-1----1-----1-
150     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
151     : 01------1--1---
151     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
152     : -01------1--1--
152     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
153     : 10------1--1---
153     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
154     : -10------1--1--
154     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
155     : 1-0----1-----1-
155     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
234 (*) : -01----1----1--
234     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
235     : -10-----11-----
235     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
236     : 0-1------1---1-
236     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
237     : 1-0----1---1---
237     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
238     : 01---------11--
238     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
239     : 10------1----1-
239     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
252 (*) : -10----1----1--
252     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
253     : -01-----11-----
253     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
254     : 1-0------1---1-
254     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
255     : 0-1----1---1---
255     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
256     : 10---------11--
256     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
257     : 01------1----1-
257     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
282 (*) : -01----11------
282     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
283     : -10----11------
283     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
284     : 0-1------1-1---
284     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
285     : 1-0------1-1---
285     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
286     : 01----------11-
286     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
287     : 10----------11-
287     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'sent(NODE2,NODE4)', 'sent(NODE1,NODE3)', '~allowed_in(NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | allowed_in(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3))


=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
156 (*) : --1-1--1---0---
156     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
157     : -1---1--1----0-
157     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
158     : --11----01-----
158     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
159     : 1----1-----10--
159     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
160     : -1-1---0----1--
160     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
161     : 1---1----0---1-
161     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
168 (*) : --11---10------
168     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
169     : -1-1---01------
169     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
170     : --1-1----1-0---
170     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
171     : 1---1----0-1---
171     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
172     : -1---1------10-
172     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
173     : 1----1------01-
173     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', '~sent(NODE1,NODE4)', 'allowed_in(NODE0)', 'sent(NODE2,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE4,NODE2,NODE3. ~internal(NODE1) | sent(NODE1,NODE4) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 25 =====================
size : 18
num_suborbits: 3
162 (*) : -01----1---0---
162     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
163     : -10-----1----0-
163     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
164     : 0-1-----01-----
164     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
165     : 1-0--------10--
165     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
166     : 01-----0----1--
166     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
167     : 10-------0---1-
167     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
174 (*) : 0-1----10------
174     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----01------
175     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01------1-0---
176     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0-1---
177     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10---------10-
178     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0---------01-
179     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
324 (*) : -01----1-0-----
324     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
325     : -10-----1---0--
325     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
326     : 0-1----0-1-----
326     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
327     : 1-0--------1-0-
327     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
328     : 01------0---1--
328     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
329     : 10---------0-1-
329     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE3,NODE4)', '~allowed_in(NODE3)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE4,NODE2,NODE3. ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))


=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$0$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
300 (*) : ----10-1-0-----
300     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
301     : ----01--1---0--
301     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
302     : ---1-0-0-1-----
302     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
303     : ---0-1-----1-0-
303     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
304     : ---10---0---1--
304     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
305     : ---01------0-1-
305     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~sent(NODE0,NODE1)', 'sent(NODE1,NODE0)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
306 (*) : ----1--1-0--0--
306     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
307     : -----1--10--0--
307     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
308     : ---1---0-1---0-
308     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
309     : -----1-0---1-0-
309     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
310     : ---1----0--01--
310     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
311     : ----1---0--0-1-
311     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', '~sent(NODE0,NODE1)', '~sent(NODE2,NODE1)', 'sent(NODE1,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
312 (*) : -0---0-1-0-----
312     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
313     : --0-0---1---0--
313     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
314     : 0----0-0-1-----
314     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
315     : --00-------1-0-
315     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
316     : 0---0---0---1--
316     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
317     : -0-0-------0-1-
317     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
318 (*) : -0-----1-0--0--
318     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : --0-----10--0--
319     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : 0------0-1---0-
320     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : --0----0---1-0-
321     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : 0-------0--01--
322     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -0------0--0-1-
323     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~sent(NODE2,NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-0-1-0-----
330     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
331     : ---00---1---0--
331     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
332     : ----00-0-1-----
332     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
333     : ---00------1-0-
333     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
334     : ----00--0---1--
334     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
335     : ---0-0-----0-1-
335     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)', '~internal(NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : ---0---1-0--0--
336     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
337     : ---0----10--0--
337     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
338     : ----0--0-1---0-
338     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
339     : ----0--0---1-0-
339     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
340     : -----0--0--01--
340     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
341     : -----0--0--0-1-
341     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE0)', '~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : --10---1-0-----
342     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
343     : -1-0----1---0--
343     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
344     : --1-0--0-1-----
344     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
345     : 1---0------1-0-
345     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
346     : -1---0--0---1--
346     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
347     : 1----0-----0-1-
347     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~sent(NODE2,NODE1)', '~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 15 =====================
size : 3
num_suborbits: 1
93 (*) : 1--------0--0--
93     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
94     : -1-----0-----0-
94     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
95     : --1-----0--0---
95     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : --1--1---------
3     : ['allowed_in(node2)', 'internal(node2)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : 1--1-----------
5     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 6
num_suborbits: 1
6 (*) : -1---0-0-------
6     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
7     : --1-0---0------
7     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
8     : 1----0---0-----
8     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
9     : --10-------0---
9     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
10     : 1---0-------0--
10     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
11     : -1-0---------0-
11     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 3 =====================
size : 6
num_suborbits: 1
12 (*) : -11----0-------
12     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
13     : -11-----0------
13     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
14     : 1-1------0-----
14     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
15     : 1-1--------0---
15     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
16     : 11----------0--
16     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
17     : 11-----------0-
17     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 9




=== Prime Orbit 4 =====================
size : 8
num_suborbits: 2
18 (*) : -------11--1---
18     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
19     : -------11----1-
19     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
20     : --------11-1---
20     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
21     : ---------1-11--
21     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
22     : -------1----11-
22     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
23     : ---------1--11-
23     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
72 (*) : -------1---11--
72     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
73     : --------11---1-
73     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 15
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE0,NODE3) | ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE2 = NODE4 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 21




=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
24 (*) : -0---1-----1---
24     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
25     : --0-1--------1-
25     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
26     : 0----1--1------
26     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
27     : --01--------1--
27     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
28     : 0---1--1-------
28     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
29     : -0-1-----1-----
29     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
60 (*) : --0-1------1---
60     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
61     : -0---1-------1-
61     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
62     : --01----1------
62     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
63     : 0----1------1--
63     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
64     : -0-1---1-------
64     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
65     : 0---1----1-----
65     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE2,NODE0,NODE1,NODE3. ~internal(NODE0) | allowed_in(NODE3) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
30 (*) : ----11-----1---
30     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
31     : ----11-------1-
31     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
32     : ---1-1--1------
32     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
33     : ---1-1------1--
33     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
34     : ---11--1-------
34     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
35     : ---11----1-----
35     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~internal(NODE0) | ~sent(NODE0,NODE1) | ~internal(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 7 =====================
size : 6
num_suborbits: 1
36 (*) : ----00-----1---
36     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
37     : ----00-------1-
37     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
38     : ---0-0--1------
38     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
39     : ---0-0------1--
39     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
40     : ---00--1-------
40     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
41     : ---00----1-----
41     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 12
num_suborbits: 2
42 (*) : -0--0------1---
42     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
43     : --0--0-------1-
43     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
44     : 0--0----1------
44     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
45     : --0--0------1--
45     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
46     : 0--0---1-------
46     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
47     : -0--0----1-----
47     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
54 (*) : --0--0-----1---
54     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
55     : -0--0--------1-
55     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
56     : --0--0--1------
56     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
57     : 0--0--------1--
57     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
58     : -0--0--1-------
58     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
59     : 0--0-----1-----
59     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. internal(NODE2) | ~sent(NODE0,NODE1) | allowed_in(NODE2) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
48 (*) : -00--------1---
48     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
49     : -00----------1-
49     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
50     : 0-0-----1------
50     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
51     : 0-0---------1--
51     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
52     : 00-----1-------
52     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
53     : 00-------1-----
53     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 12
num_suborbits: 2
66 (*) : --1-0------1---
66     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
67     : -1---0-------1-
67     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
68     : --10----1------
68     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
69     : 1----0------1--
69     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
70     : -1-0---1-------
70     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
71     : 1---0----1-----
71     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
74 (*) : -1---0-----1---
74     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
75     : --1-0--------1-
75     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
76     : 1----0--1------
76     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
77     : --10--------1--
77     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
78     : 1---0--1-------
78     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
79     : -1-0-----1-----
79     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE2,NODE0,NODE1,NODE3. ~sent(NODE1,NODE2) | internal(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 11 =====================
size : 6
num_suborbits: 1
80 (*) : -11--------1---
80     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
81     : -11----------1-
81     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
82     : 1-1-----1------
82     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
83     : 1-1---------1--
83     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
84     : 11-----1-------
84     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
85     : 11-------1-----
85     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~allowed_in(NODE1) | ~sent(NODE0,NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
86 (*) : -110-----------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
87     : 1-1-0----------
87     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
88     : 11---0---------
88     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 13 =====================
size : 3
num_suborbits: 1
89 (*) : -1-0-0---------
89     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
90     : --100----------
90     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
91     : 1---00---------
91     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
92 (*) : 111------------
92     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 1------1---0-1-
96     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
97     : 1-------1--1-0-
97     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
98     : -1------01--1--
98     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
99     : -1------1--10--
99     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
100     : --1----0-1--1--
100     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
101     : --1----1-0---1-
101     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
108 (*) : 1------1-0---1-
108     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
109     : 1-------1--10--
109     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
110     : -1-----0-1--1--
110     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
111     : -1------1--1-0-
111     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
112     : --1-----01--1--
112     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
113     : --1----1---0-1-
113     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
240 (*) : --1----10---1--
240     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
241     : -1-----011-----
241     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
242     : --1------1-0-1-
242     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
243     : 1------1-0-1---
243     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
244     : -1---------110-
244     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
245     : 1-------1---01-
245     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
246 (*) : -1-----10---1--
246     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
247     : --1----011-----
247     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
248     : 1--------1-0-1-
248     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
249     : --1----1-0-1---
249     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
250     : 1----------110-
250     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
251     : -1------1---01-
251     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | ~allowed_in(NODE0) | sent(NODE4,NODE5) | ((NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE0 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 17 =====================
size : 12
num_suborbits: 2
102 (*) : -0-----1---0-1-
102     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
103     : --0-----1--1-0-
103     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
104     : 0-------01--1--
104     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
105     : --0-----1--10--
105     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
106     : 0------0-1--1--
106     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
107     : -0-----1-0---1-
107     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
216 (*) : 0------10---1--
216     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 0------011-----
217     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -0-------1-0-1-
218     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : -0-----1-0-1---
219     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : --0--------110-
220     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : --0-----1---01-
221     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE2,NODE0,NODE1,NODE3. allowed_in(NODE3) | sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 16




=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
114 (*) : ---0---1-0---1-
114     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
115     : ---0----1--10--
115     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
116     : ----0--0-1--1--
116     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
117     : ----0---1--1-0-
117     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
118     : -----0--01--1--
118     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
119     : -----0-1---0-1-
119     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
120 (*) : -----0-1-0---1-
120     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
121     : ----0---1--10--
121     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
122     : -----0-0-1--1--
122     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
123     : ---0----1--1-0-
123     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
124     : ----0---01--1--
124     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
125     : ---0---1---0-1-
125     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
186 (*) : -----0-10---1--
186     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
187     : ----0--011-----
187     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
188     : -----0---1-0-1-
188     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
189     : ---0---1-0-1---
189     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
190     : ----0------110-
190     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
191     : ---0----1---01-
191     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
204 (*) : ----0--10---1--
204     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
205     : -----0-011-----
205     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
206     : ---0-----1-0-1-
206     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
207     : -----0-1-0-1---
207     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
208     : ---0-------110-
208     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
209     : ----0---1---01-
209     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. sent(NODE3,NODE5) | internal(NODE4) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE4 | NODE0 ~= NODE5 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE1 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE5 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 19 =====================
size : 12
num_suborbits: 2
126 (*) : ----1--1-0---1-
126     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
127     : -----1--1--10--
127     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
128     : ---1---0-1--1--
128     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
129     : -----1--1--1-0-
129     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
130     : ---1----01--1--
130     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
131     : ----1--1---0-1-
131     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : ---1---10---1--
222     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
223     : ---1---011-----
223     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
224     : ----1----1-0-1-
224     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
225     : ----1--1-0-1---
225     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -----1-----110-
226     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : -----1--1---01-
227     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 14
quantified form : forall NODE1,NODE0,NODE4,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE2,NODE0) | sent(NODE0,NODE4) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2))
qcost : 19




=== Prime Orbit 20 =====================
size : 24
num_suborbits: 4
132 (*) : ---0-1-1-----1-
132     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
133     : ---01---1--1---
133     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
134     : ----01---1--1--
134     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
135     : ---10---1--1---
135     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
136     : ----10---1--1--
136     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
137     : ---1-0-1-----1-
137     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
180 (*) : ----01-1----1--
180     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
181     : ----10--11-----
181     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
182     : ---0-1---1---1-
182     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
183     : ---1-0-1---1---
183     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
184     : ---01------11--
184     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
185     : ---10---1----1-
185     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
192 (*) : ----10-1----1--
192     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
193     : ----01--11-----
193     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
194     : ---1-0---1---1-
194     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
195     : ---0-1-1---1---
195     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
196     : ---10------11--
196     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
197     : ---01---1----1-
197     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ----01-11------
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
265     : ----10-11------
265     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
266     : ---0-1---1-1---
266     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
267     : ---1-0---1-1---
267     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
268     : ---01-------11-
268     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
269     : ---10-------11-
269     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~internal(NODE0) | ~sent(NODE2,NODE4) | internal(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3))
qcost : 34




=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
138 (*) : --00---1-----1-
138     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
139     : -0-0----1--1---
139     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
140     : --0-0----1--1--
140     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
141     : 0---0---1--1---
141     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
142     : -0---0---1--1--
142     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
143     : 0----0-1-----1-
143     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
198 (*) : -0---0-1----1--
198     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
199     : --0-0---11-----
199     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
200     : 0----0---1---1-
200     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
201     : --00---1---1---
201     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
202     : 0---0------11--
202     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
203     : -0-0----1----1-
203     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
210 (*) : --0-0--1----1--
210     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
211     : -0---0--11-----
211     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
212     : --00-----1---1-
212     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
213     : 0----0-1---1---
213     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
214     : -0-0-------11--
214     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
215     : 0---0---1----1-
215     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
270 (*) : -0---0-11------
270     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
271     : --0-0--11------
271     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
272     : 0----0---1-1---
272     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
273     : --00-----1-1---
273     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
274     : 0---0-------11-
274     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
275     : -0-0--------11-
275     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. allowed_in(NODE4) | internal(NODE5) | ~sent(NODE1,NODE3) | ~sent(NODE0,NODE2) | ((NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE5 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE2 = NODE3 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 22 =====================
size : 24
num_suborbits: 4
144 (*) : --11---1-----1-
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
145     : -1-1----1--1---
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
146     : --1-1----1--1--
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
147     : 1---1---1--1---
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
148     : -1---1---1--1--
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
149     : 1----1-1-----1-
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
228 (*) : --1-1--1----1--
228     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
229     : -1---1--11-----
229     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
230     : --11-----1---1-
230     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
231     : 1----1-1---1---
231     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
232     : -1-1-------11--
232     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
233     : 1---1---1----1-
233     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
258 (*) : -1---1-1----1--
258     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
259     : --1-1---11-----
259     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
260     : 1----1---1---1-
260     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
261     : --11---1---1---
261     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
262     : 1---1------11--
262     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
263     : -1-1----1----1-
263     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
276 (*) : --1-1--11------
276     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
277     : -1---1-11------
277     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
278     : --11-----1-1---
278     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
279     : 1----1---1-1---
279     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
280     : -1-1--------11-
280     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
281     : 1---1-------11-
281     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~sent(NODE2,NODE4) | ~internal(NODE1) | ~sent(NODE3,NODE5) | ~allowed_in(NODE0) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE0 = NODE4 | NODE1 = NODE4 | NODE0 = NODE1) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 34




=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
150 (*) : 0-1----1-----1-
150     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
151     : 01------1--1---
151     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
152     : -01------1--1--
152     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
153     : 10------1--1---
153     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
154     : -10------1--1--
154     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
155     : 1-0----1-----1-
155     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
234 (*) : -01----1----1--
234     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
235     : -10-----11-----
235     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
236     : 0-1------1---1-
236     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
237     : 1-0----1---1---
237     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
238     : 01---------11--
238     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
239     : 10------1----1-
239     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
252 (*) : -10----1----1--
252     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
253     : -01-----11-----
253     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
254     : 1-0------1---1-
254     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
255     : 0-1----1---1---
255     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
256     : 10---------11--
256     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
257     : 01------1----1-
257     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
282 (*) : -01----11------
282     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
283     : -10----11------
283     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
284     : 0-1------1-1---
284     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
285     : 1-0------1-1---
285     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
286     : 01----------11-
286     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
287     : 10----------11-
287     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE1,NODE5,NODE0,NODE4,NODE2,NODE3. ~allowed_in(NODE0) | ~sent(NODE2,NODE4) | ~sent(NODE1,NODE3) | allowed_in(NODE5) | ((NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE4 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE1 ~= NODE4 | NODE2 ~= NODE5 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3))
qcost : 34




=== Prime Orbit 24 =====================
size : 18
num_suborbits: 3
156 (*) : --1-1--1---0---
156     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
157     : -1---1--1----0-
157     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
158     : --11----01-----
158     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
159     : 1----1-----10--
159     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
160     : -1-1---0----1--
160     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
161     : 1---1----0---1-
161     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
168 (*) : --11---10------
168     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
169     : -1-1---01------
169     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
170     : --1-1----1-0---
170     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
171     : 1---1----0-1---
171     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
172     : -1---1------10-
172     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
173     : 1----1------01-
173     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
294 (*) : --1-1--1-0-----
294     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
295     : -1---1--1---0--
295     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
296     : --11---0-1-----
296     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
297     : 1----1-----1-0-
297     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : -1-1----0---1--
298     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : 1---1------0-1-
299     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE1,NODE0,NODE4,NODE2,NODE3. ~internal(NODE1) | sent(NODE1,NODE4) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE3 | NODE0 = NODE1 | NODE1 = NODE3) & (NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 24




=== Prime Orbit 25 =====================
size : 18
num_suborbits: 3
162 (*) : -01----1---0---
162     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
163     : -10-----1----0-
163     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
164     : 0-1-----01-----
164     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
165     : 1-0--------10--
165     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
166     : 01-----0----1--
166     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
167     : 10-------0---1-
167     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
174 (*) : 0-1----10------
174     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
175     : 01-----01------
175     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
176     : -01------1-0---
176     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
177     : 10-------0-1---
177     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
178     : -10---------10-
178     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
179     : 1-0---------01-
179     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
324 (*) : -01----1-0-----
324     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
325     : -10-----1---0--
325     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
326     : 0-1----0-1-----
326     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
327     : 1-0--------1-0-
327     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
328     : 01------0---1--
328     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
329     : 10---------0-1-
329     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE1,NODE0,NODE4,NODE2,NODE3. ~sent(NODE1,NODE2) | sent(NODE3,NODE4) | allowed_in(NODE3) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2))
qcost : 24




=== Prime Orbit 26 =====================
size : 6
num_suborbits: 1
288 (*) : --1----100-----
288     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
289     : -1-----01---0--
289     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
290     : --1----0-1-0---
290     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
291     : 1--------0-1-0-
291     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
292     : -1------0---10-
292     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
293     : 1----------001-
293     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
300 (*) : ----10-1-0-----
300     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
301     : ----01--1---0--
301     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
302     : ---1-0-0-1-----
302     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
303     : ---0-1-----1-0-
303     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
304     : ---10---0---1--
304     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
305     : ---01------0-1-
305     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. ~internal(NODE0) | sent(NODE0,NODE1) | ~sent(NODE1,NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
306 (*) : ----1--1-0--0--
306     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
307     : -----1--10--0--
307     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
308     : ---1---0-1---0-
308     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
309     : -----1-0---1-0-
309     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
310     : ---1----0--01--
310     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
311     : ----1---0--0-1-
311     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. ~internal(NODE0) | sent(NODE0,NODE1) | sent(NODE2,NODE1) | ~sent(NODE1,NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
312 (*) : -0---0-1-0-----
312     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
313     : --0-0---1---0--
313     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
314     : 0----0-0-1-----
314     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
315     : --00-------1-0-
315     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
316     : 0---0---0---1--
316     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
317     : -0-0-------0-1-
317     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 6
num_suborbits: 1
318 (*) : -0-----1-0--0--
318     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
319     : --0-----10--0--
319     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
320     : 0------0-1---0-
320     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
321     : --0----0---1-0-
321     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
322     : 0-------0--01--
322     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
323     : -0------0--0-1-
323     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. allowed_in(NODE1) | sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
330 (*) : ---0-0-1-0-----
330     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
331     : ---00---1---0--
331     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
332     : ----00-0-1-----
332     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
333     : ---00------1-0-
333     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
334     : ----00--0---1--
334     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
335     : ---0-0-----0-1-
335     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | internal(NODE2) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
336 (*) : ---0---1-0--0--
336     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
337     : ---0----10--0--
337     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
338     : ----0--0-1---0-
338     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
339     : ----0--0---1-0-
339     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
340     : -----0--0--01--
340     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
341     : -----0--0--0-1-
341     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. sent(NODE2,NODE0) | sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
342 (*) : --10---1-0-----
342     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
343     : -1-0----1---0--
343     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
344     : --1-0--0-1-----
344     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
345     : 1---0------1-0-
345     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
346     : -1---0--0---1--
346     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
347     : 1----0-----0-1-
347     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. ~sent(NODE1,NODE2) | sent(NODE2,NODE1) | internal(NODE1) | ~allowed_in(NODE0) | (NODE1 = NODE2 | NODE0 = NODE1 | NODE0 = NODE2)
qcost : 10



[QRM NOTE]: Time elapsed since start: 11.414 seconds

[QRM NOTE]: Time elapsed since last: 1.958 seconds

[QRM NOTE]: Peak memory: 2418833 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Before reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 528), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 528), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15]


Solution : [0, 15] has cost 7.


Decide in level 1 among pending : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 528), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


New level: 2
 pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 528), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, 640), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 264), (21, 520), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 2 among pending : [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, 640), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 264), (21, 520), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 8 with phase True at level 2

After decision at level 2
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 8]


New level: 3
 pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 15, 1, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, 640), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 264), (21, 520), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 576), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, 0), (33, 32)]

Covered at level 3 : {32}

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 576), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, 0), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 576), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 3 among pending : [2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 576), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 4 with phase True at level 3

After decision at level 3
 pending : [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4]


New level: 4
 pending : [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, 576), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 4 : set()

After reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 4 among pending : [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]


New level: 5
 pending : [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]


Before reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, 0), (13, -1), (14, 0), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 5 : {12, 14}

After reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]


Before reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, 0), (13, -1), (14, 0), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 3, 5, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13]


Solution : [0, 15, 1, 8, 4, 13] has cost 46.


Decide in level 5 among pending : [2, 3, 5, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 5 with phase True at level 5

After decision at level 5
 pending : [2, 3, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


New level: 6
 pending : [2, 3, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [2, 3, 6, 7, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {6, 9, 17, 19, 28, 30}

After reduction : 
 pending  : [2, 3, 7, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [2, 3, 7, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [2, 3, 7, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Solution : [0, 15, 1, 8, 4, 13, 5] has cost 59.


Decide in level 6 among pending : [2, 3, 7, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 7]


New level: 7
 pending : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 7]


Before reduction : 
 pending  : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 7]


Solution : [0, 15, 1, 8, 4, 13, 5, 7] has cost 65.


Before backtrack at level 7
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 5, 7]

After backtrack at level 7
 pending : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Solution : [0, 15, 1, 8, 4, 13, 5] has cost 59.


Decide in level 7 among pending : [2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 10]


New level: 8
 pending : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 10]


Before reduction : 
 pending  : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 8 : {33, 2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 10]


Solution : [0, 15, 1, 8, 4, 13, 5, 10] has cost 72.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 5, 10]

After backtrack at level 8
 pending : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Solution : [0, 15, 1, 8, 4, 13, 5] has cost 59.


Decide in level 8 among pending : [2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 11]


New level: 9
 pending : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 11]


Before reduction : 
 pending  : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 11]


Solution : [0, 15, 1, 8, 4, 13, 5, 11] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 5, 11]

After backtrack at level 9
 pending : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Solution : [0, 15, 1, 8, 4, 13, 5] has cost 59.


Decide in level 9 among pending : [2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 2 with phase True at level 9

After decision at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 2]


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 2]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 2]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 2]


Solution : [0, 15, 1, 8, 4, 13, 5, 2] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 5, 2]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5, 2]


Invert decision for 2 at level 9


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

Essensial at level 10 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 5, 3]


Solution : [0, 15, 1, 8, 4, 13, 5, 3] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 5, 3]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 5]

After backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 13, 5]

After backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 5]

After backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 5]


Before backtrack at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 5]

After backtrack at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 5]


Invert decision for 5 at level 5


New level: 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13]


Solution : [0, 15, 1, 8, 4, 13] has cost 46.


Decide in level 6 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 27 with phase True at level 6

After decision at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]


New level: 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, 0), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 29, 31}

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, 0), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]


Solution : [0, 15, 1, 8, 4, 13, 27] has cost 56.


Decide in level 7 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 6, 9, 17, 19, 28, 30, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


New level: 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {9, 17, 19, 28, 30}

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Solution : [0, 15, 1, 8, 4, 13, 27, 6] has cost 62.


Decide in level 8 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]


New level: 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {2, 3, 7, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]


Solution : [0, 15, 1, 8, 4, 13, 27, 6, 11] has cost 68.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]

After backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Solution : [0, 15, 1, 8, 4, 13, 27, 6] has cost 62.


Decide in level 9 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {2, 3, 7, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]


Solution : [0, 15, 1, 8, 4, 13, 27, 6, 10] has cost 75.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Solution : [0, 15, 1, 8, 4, 13, 27, 6] has cost 62.


Decide in level 10 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]


New level: 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]


Solution : [0, 15, 1, 8, 4, 13, 27, 6, 7] has cost 68.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]

After backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Solution : [0, 15, 1, 8, 4, 13, 27, 6] has cost 62.


Decide in level 11 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {2, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]


Solution : [0, 15, 1, 8, 4, 13, 27, 6, 3] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]

After backtrack at level 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 2]


Solution : [0, 15, 1, 8, 4, 13, 27, 6, 2] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 6, 2]

After backtrack at level 12
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

After backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

After backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

After backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Before backtrack at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]

After backtrack at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 9, 17, 19, 28, 30, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 9, 17, 19, 28, 30, 11]
 solution : [0, 15, 1, 8, 4, 13, 27]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 9, 17, 19, 28, 30, 11]
 solution : [0, 15, 1, 8, 4, 13, 27]

Essensial at level 8 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {17, 19, 28, 30}

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Solution : [0, 15, 1, 8, 4, 13, 27, 9] has cost 62.


Decide in level 8 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 7, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]


New level: 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]


Solution : [0, 15, 1, 8, 4, 13, 27, 9, 7] has cost 68.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]

After backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Solution : [0, 15, 1, 8, 4, 13, 27, 9] has cost 62.


Decide in level 9 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]


New level: 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]


Solution : [0, 15, 1, 8, 4, 13, 27, 9, 10] has cost 75.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]

After backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Solution : [0, 15, 1, 8, 4, 13, 27, 9] has cost 62.


Decide in level 10 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3, 11]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]


New level: 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]


Solution : [0, 15, 1, 8, 4, 13, 27, 9, 11] has cost 68.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]

After backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Solution : [0, 15, 1, 8, 4, 13, 27, 9] has cost 62.


Decide in level 11 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 3]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {3, 16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]


Solution : [0, 15, 1, 8, 4, 13, 27, 9, 2] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]

After backtrack at level 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 3]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

Essensial at level 12 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 18, 20, 21, 22, 23, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 3]


Solution : [0, 15, 1, 8, 4, 13, 27, 9, 3] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 27, 9, 3]

After backtrack at level 12
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

After backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

After backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]


Before backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 27, 9]

After backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]


Before backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13, 27]

After backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13, 27]


Invert decision for 27 at level 6


New level: 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13]


Solution : [0, 15, 1, 8, 4, 13] has cost 46.


Decide in level 7 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 9, 17, 19, 28, 30, 7, 29, 31, 33, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13, 9]


New level: 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 17, 19, 28, 30, 7, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {6, 17, 19, 28, 30}

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Solution : [0, 15, 1, 8, 4, 13, 9] has cost 52.


Decide in level 8 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 11, 10, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 11]


New level: 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 11]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 7, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 11]


Solution : [0, 15, 1, 8, 4, 13, 9, 11] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 9, 11]

After backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Solution : [0, 15, 1, 8, 4, 13, 9] has cost 52.


Decide in level 9 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 10, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 10]


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 10]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 7, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 10]


Solution : [0, 15, 1, 8, 4, 13, 9, 10] has cost 65.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 9, 10]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Solution : [0, 15, 1, 8, 4, 13, 9] has cost 52.


Decide in level 10 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 7]


New level: 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 7]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 7]


Solution : [0, 15, 1, 8, 4, 13, 9, 7] has cost 58.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 9, 7]

After backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Solution : [0, 15, 1, 8, 4, 13, 9] has cost 52.


Decide in level 11 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 3]


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 3]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 3]


Solution : [0, 15, 1, 8, 4, 13, 9, 3] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 9, 3]

After backtrack at level 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 2, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

Essensial at level 12 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 9, 2]


Solution : [0, 15, 1, 8, 4, 13, 9, 2] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 9, 2]

After backtrack at level 12
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 9]

After backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 9]

After backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7]
 solution : [0, 15, 1, 8, 4, 13, 9]

After backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10]
 solution : [0, 15, 1, 8, 4, 13, 9]


Before backtrack at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10]
 solution : [0, 15, 1, 8, 4, 13, 9]

After backtrack at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 17, 19, 28, 30, 6, 11]
 solution : [0, 15, 1, 8, 4, 13, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 17, 19, 28, 30, 6, 11]
 solution : [0, 15, 1, 8, 4, 13]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 17, 19, 28, 30, 6, 11]
 solution : [0, 15, 1, 8, 4, 13]

Essensial at level 8 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {17, 19, 28, 30}

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Solution : [0, 15, 1, 8, 4, 13, 6] has cost 52.


Decide in level 8 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 7, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 7]


New level: 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 7]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 7]


Solution : [0, 15, 1, 8, 4, 13, 6, 7] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 6, 7]

After backtrack at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Solution : [0, 15, 1, 8, 4, 13, 6] has cost 52.


Decide in level 9 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 10]


New level: 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 10]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 10]


Solution : [0, 15, 1, 8, 4, 13, 6, 10] has cost 65.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 6, 10]

After backtrack at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Solution : [0, 15, 1, 8, 4, 13, 6] has cost 52.


Decide in level 10 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 11]


New level: 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 11]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 11]


Solution : [0, 15, 1, 8, 4, 13, 6, 11] has cost 58.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 6, 11]

After backtrack at level 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6]


Solution : [0, 15, 1, 8, 4, 13, 6] has cost 52.


Decide in level 11 among pending : [2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 2 with phase True at level 11

After decision at level 11
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 2]


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 2]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 2]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 2]


Solution : [0, 15, 1, 8, 4, 13, 6, 2] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 6, 2]

After backtrack at level 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6, 2]


Invert decision for 2 at level 11


New level: 12
 pending : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before reduction : 
 pending  : [16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 13, 6]

Essensial at level 12 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 13, 6, 3]


Solution : [0, 15, 1, 8, 4, 13, 6, 3] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 13, 6, 3]

After backtrack at level 12
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33]
 solution : [0, 15, 1, 8, 4, 13, 6]

After backtrack at level 11
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 13, 6]

After backtrack at level 10
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11]
 solution : [0, 15, 1, 8, 4, 13, 6]

After backtrack at level 9
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 6]


Before backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10]
 solution : [0, 15, 1, 8, 4, 13, 6]

After backtrack at level 8
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13]


Before backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7]
 solution : [0, 15, 1, 8, 4, 13]

After backtrack at level 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9]
 solution : [0, 15, 1, 8, 4, 13]


Before backtrack at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9]
 solution : [0, 15, 1, 8, 4, 13]

After backtrack at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27]
 solution : [0, 15, 1, 8, 4, 13]


Before backtrack at level 5
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27]
 solution : [0, 15, 1, 8, 4, 13]

After backtrack at level 5
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 5 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 29, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 29 with phase True at level 5

After decision at level 5
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]


New level: 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 27, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, 0), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {27}

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, 0), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29]


Solution : [0, 15, 1, 8, 4, 29] has cost 51.


Decide in level 6 among pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 11, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


New level: 7
 pending : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before reduction : 
 pending  : [3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 7, 9, 12, 14, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 2, 3, 7, 10, 12, 14, 16, 18, 26, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 6, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 6, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 6, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Solution : [0, 15, 1, 8, 4, 29, 11] has cost 57.


Decide in level 7 among pending : [20, 21, 22, 23, 24, 25, 6, 17, 19, 28, 30, 9, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 6]


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {5, 9, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 6]


Solution : [0, 15, 1, 8, 4, 29, 11, 6] has cost 63.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 11, 6]

After backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Solution : [0, 15, 1, 8, 4, 29, 11] has cost 57.


Decide in level 8 among pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 9]


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {5, 17, 19, 20, 21, 22, 23, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 9]


Solution : [0, 15, 1, 8, 4, 29, 11, 9] has cost 63.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 11, 9]

After backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 5]
 solution : [0, 15, 1, 8, 4, 29, 11]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {17, 19, 20, 21, 22, 23, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 11, 5]


Solution : [0, 15, 1, 8, 4, 29, 11, 5] has cost 70.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 11, 5]

After backtrack at level 9
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before backtrack at level 8
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 29, 11]

After backtrack at level 8
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 29, 11]


Before backtrack at level 7
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 29, 11]

After backtrack at level 7
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29]


Solution : [0, 15, 1, 8, 4, 29] has cost 51.


Decide in level 7 among pending : [5, 20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29, 5]


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29, 5]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 6]
 solution : [0, 15, 1, 8, 4, 29, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, 0), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {6, 9, 17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 5]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, 0), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 5]


Solution : [0, 15, 1, 8, 4, 29, 5] has cost 64.


Before backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 5]

After backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29]


Solution : [0, 15, 1, 8, 4, 29] has cost 51.


Decide in level 8 among pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 10, 7, 12, 14, 17, 19, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 8

After decision at level 8
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 7, 12, 14, 16, 18, 26, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]


Solution : [0, 15, 1, 8, 4, 29, 10] has cost 64.


Before backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 29, 10]

After backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 10]


Invert decision for 10 at level 8


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29]


Solution : [0, 15, 1, 8, 4, 29] has cost 51.


Decide in level 9 among pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


New level: 10
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : {6, 17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Solution : [0, 15, 1, 8, 4, 29, 9] has cost 57.


Decide in level 10 among pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 7, 12, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 7]


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 7]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 12, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 7]


Solution : [0, 15, 1, 8, 4, 29, 9, 7] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 9, 7]

After backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Solution : [0, 15, 1, 8, 4, 29, 9] has cost 57.


Decide in level 11 among pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 12, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 31, 33, 2, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 14, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]


Solution : [0, 15, 1, 8, 4, 29, 9, 12] has cost 62.


Before backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]

After backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Solution : [0, 15, 1, 8, 4, 29, 9] has cost 57.


Decide in level 12 among pending : [20, 21, 22, 23, 24, 25, 3, 16, 18, 26, 2, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 12

After decision at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 3]


New level: 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 3]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 3]


Solution : [0, 15, 1, 8, 4, 29, 9, 3] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 9, 3]

After backtrack at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9, 3]


Invert decision for 3 at level 12


New level: 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

Essensial at level 13 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 9, 2]


Solution : [0, 15, 1, 8, 4, 29, 9, 2] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 9, 2]

After backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before backtrack at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 9]

After backtrack at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before backtrack at level 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 29, 9]

After backtrack at level 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12]
 solution : [0, 15, 1, 8, 4, 29, 9]


Before backtrack at level 10
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12]
 solution : [0, 15, 1, 8, 4, 29, 9]

After backtrack at level 10
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 17, 19, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 4, 29, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 17, 19, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 4, 29]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 17, 19, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 4, 29]

Essensial at level 10 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : {17, 19, 28, 30}

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 7]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 7]
 solution : [0, 15, 1, 8, 4, 29, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 7]
 solution : [0, 15, 1, 8, 4, 29, 6]


Solution : [0, 15, 1, 8, 4, 29, 6] has cost 57.


Decide in level 10 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 12, 7]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]


New level: 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 14, 31}

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]


Solution : [0, 15, 1, 8, 4, 29, 6, 12] has cost 62.


Before backtrack at level 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]

After backtrack at level 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Solution : [0, 15, 1, 8, 4, 29, 6] has cost 57.


Decide in level 11 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 7, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 7]


New level: 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 7]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 3, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 7]


Solution : [0, 15, 1, 8, 4, 29, 6, 7] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 6, 7]

After backtrack at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Solution : [0, 15, 1, 8, 4, 29, 6] has cost 57.


Decide in level 12 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 2 with phase True at level 12

After decision at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 2]


New level: 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 2]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 3, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 2]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 2]


Solution : [0, 15, 1, 8, 4, 29, 6, 2] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 6, 2]

After backtrack at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6, 2]


Invert decision for 2 at level 12


New level: 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]

Essensial at level 13 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 29, 6, 3]


Solution : [0, 15, 1, 8, 4, 29, 6, 3] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 29, 6, 3]

After backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 29, 6]

After backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 29, 6]

After backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7]
 solution : [0, 15, 1, 8, 4, 29, 6]


Before backtrack at level 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7]
 solution : [0, 15, 1, 8, 4, 29, 6]

After backtrack at level 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12]
 solution : [0, 15, 1, 8, 4, 29]


Before backtrack at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12]
 solution : [0, 15, 1, 8, 4, 29]

After backtrack at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9]
 solution : [0, 15, 1, 8, 4, 29]


Before backtrack at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9]
 solution : [0, 15, 1, 8, 4, 29]

After backtrack at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10]
 solution : [0, 15, 1, 8, 4, 29]


Before backtrack at level 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10]
 solution : [0, 15, 1, 8, 4, 29]

After backtrack at level 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5]
 solution : [0, 15, 1, 8, 4, 29]


Before backtrack at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5]
 solution : [0, 15, 1, 8, 4, 29]

After backtrack at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4, 29]


Invert decision for 29 at level 5


New level: 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 6 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 7, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4, 7]


New level: 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4, 7]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 6, 17, 19, 28, 30, 12, 9, 10, 5, 27, 11]
 solution : [0, 15, 1, 8, 4, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 128), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 7 : {33, 2, 3, 10, 11, 12, 14, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 128), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]


Solution : [0, 15, 1, 8, 4, 7] has cost 47.


Decide in level 7 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9, 5, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 6]


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {5, 9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 6]


Solution : [0, 15, 1, 8, 4, 7, 6] has cost 53.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 8, 4, 7, 6]

After backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]


Solution : [0, 15, 1, 8, 4, 7] has cost 47.


Decide in level 8 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9, 5, 27]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 9]


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {5, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 9]


Solution : [0, 15, 1, 8, 4, 7, 9] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 7, 9]

After backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 5, 27]
 solution : [0, 15, 1, 8, 4, 7]

Essensial at level 9 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 7, 5]


Solution : [0, 15, 1, 8, 4, 7, 5] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 4, 7, 5]

After backtrack at level 9
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27]
 solution : [0, 15, 1, 8, 4, 7]


Before backtrack at level 8
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27]
 solution : [0, 15, 1, 8, 4, 7]

After backtrack at level 8
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9]
 solution : [0, 15, 1, 8, 4, 7]


Before backtrack at level 7
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9]
 solution : [0, 15, 1, 8, 4, 7]

After backtrack at level 7
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 7 : set()

After reduction : 
 pending  : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 7 among pending : [5, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4, 5]


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4, 5]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 27, 9, 3, 31, 33, 14, 2, 12, 10, 11, 6]
 solution : [0, 15, 1, 8, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : {6, 9, 17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11]
 solution : [0, 15, 1, 8, 4, 5]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11]
 solution : [0, 15, 1, 8, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11]
 solution : [0, 15, 1, 8, 4, 5]


Solution : [0, 15, 1, 8, 4, 5] has cost 54.


Before backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11]
 solution : [0, 15, 1, 8, 4, 5]

After backtrack at level 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 8 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 27, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 27 with phase True at level 8

After decision at level 8
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27]


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, 128), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27]


Solution : [0, 15, 1, 8, 4, 27] has cost 51.


Decide in level 9 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 12, 10, 11, 17, 19, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]


New level: 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 31, 33, 14, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 14, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]


Solution : [0, 15, 1, 8, 4, 27, 12] has cost 56.


Before backtrack at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 12]

After backtrack at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]


Solution : [0, 15, 1, 8, 4, 27] has cost 51.


Decide in level 10 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 10, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 10]


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 10]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 17, 19, 28, 30, 9, 6, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 11, 14, 16, 18, 26, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 10]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, 0), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 3), (18, 0), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 10]


Solution : [0, 15, 1, 8, 4, 27, 10] has cost 64.


Before backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 4, 27, 10]

After backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 3), (18, -1), (19, 3), (20, 2), (21, 2), (22, 2), (23, 2), (24, 2), (25, 2), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27]


Solution : [0, 15, 1, 8, 4, 27] has cost 51.


Decide in level 11 among pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 9, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 17, 19, 28, 30, 6, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 3), (18, 2), (19, 3), (20, 16), (21, 16), (22, 16), (23, 16), (24, 10), (25, 10), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {6, 17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]


Solution : [0, 15, 1, 8, 4, 27, 9] has cost 57.


Before backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 9]

After backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 17, 19, 28, 30, 6]
 solution : [0, 15, 1, 8, 4, 27, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 17, 19, 28, 30, 6]
 solution : [0, 15, 1, 8, 4, 27]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 17, 19, 28, 30, 6]
 solution : [0, 15, 1, 8, 4, 27]

Essensial at level 12 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 6]


Solution : [0, 15, 1, 8, 4, 27, 6] has cost 57.


Before backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 27, 6]

After backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 27]


Before backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 27]

After backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 27]


Before backtrack at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 27]

After backtrack at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 4, 27]


Before backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 4, 27]

After backtrack at level 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4, 27]


Invert decision for 27 at level 8


New level: 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 4), (21, 4), (22, 4), (23, 4), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 9 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 11, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 11 with phase True at level 9

After decision at level 9
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4, 11]


New level: 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 6, 17, 19, 28, 30, 9, 10, 12]
 solution : [0, 15, 1, 8, 4, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, -1), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 10, 12, 14, 31}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, -1), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11]


Solution : [0, 15, 1, 8, 4, 11] has cost 47.


Decide in level 10 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 6, 17, 19, 28, 30, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11, 6]


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 12), (18, 2), (19, 12), (20, 6), (21, 6), (22, 6), (23, 6), (24, 6), (25, 6), (26, 2), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {9, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 6]


Solution : [0, 15, 1, 8, 4, 11, 6] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 11, 6]

After backtrack at level 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 9]
 solution : [0, 15, 1, 8, 4, 11]

Essensial at level 11 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 11, 9]


Solution : [0, 15, 1, 8, 4, 11, 9] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 4, 11, 9]

After backtrack at level 11
 pending : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 11]


Before backtrack at level 10
 pending : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30]
 solution : [0, 15, 1, 8, 4, 11]

After backtrack at level 10
 pending : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4, 11]


Invert decision for 11 at level 9


New level: 10
 pending : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 10 : set()

After reduction : 
 pending  : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4]


Solution : [0, 15, 1, 8, 4] has cost 41.


Decide in level 10 among pending : [9, 20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4, 9]


New level: 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 17, 19, 28, 30, 3, 2, 31, 33, 14, 10, 12, 6]
 solution : [0, 15, 1, 8, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 8), (17, 12), (18, 8), (19, 12), (20, 21), (21, 21), (22, 21), (23, 21), (24, 24), (25, 24), (26, 8), (27, -1), (28, 32), (29, -1), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : {6, 17, 19, 28, 30}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 10, 12]
 solution : [0, 15, 1, 8, 4, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 10, 12]
 solution : [0, 15, 1, 8, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 10, 12]
 solution : [0, 15, 1, 8, 4, 9]


Solution : [0, 15, 1, 8, 4, 9] has cost 47.


Decide in level 11 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 10, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9, 10]


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9, 10]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 3, 12, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 10]


Solution : [0, 15, 1, 8, 4, 9, 10] has cost 60.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 4, 9, 10]

After backtrack at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]
 solution : [0, 15, 1, 8, 4, 9]


Solution : [0, 15, 1, 8, 4, 9] has cost 47.


Decide in level 12 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 9, 12]


New level: 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 9, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 9, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : {14}

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]


Solution : [0, 15, 1, 8, 4, 9, 12] has cost 52.


Decide in level 13 among pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 3, 2, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12, 3]


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12, 3]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 3]


Solution : [0, 15, 1, 8, 4, 9, 12, 3] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 9, 12, 3]

After backtrack at level 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 2, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 12, 2]


Solution : [0, 15, 1, 8, 4, 9, 12, 2] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 9, 12, 2]

After backtrack at level 14
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]


Before backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 4, 9, 12]

After backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9]


Solution : [0, 15, 1, 8, 4, 9] has cost 47.


Decide in level 13 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9, 2]


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9, 2]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 3, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 2]


Solution : [0, 15, 1, 8, 4, 9, 2] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 9, 2]

After backtrack at level 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 3]
 solution : [0, 15, 1, 8, 4, 9]

Essensial at level 14 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 9, 3]


Solution : [0, 15, 1, 8, 4, 9, 3] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 9, 3]

After backtrack at level 14
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 9]


Before backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 9]

After backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 9]


Before backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 9]

After backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12]
 solution : [0, 15, 1, 8, 4, 9]


Before backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12]
 solution : [0, 15, 1, 8, 4, 9]

After backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 17, 19, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 4, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 17, 19, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 4]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 17, 19, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 4]

Essensial at level 11 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : {17, 19, 28, 30}

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 10]
 solution : [0, 15, 1, 8, 4, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 10]
 solution : [0, 15, 1, 8, 4, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, 0), (18, 2), (19, 0), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 10]
 solution : [0, 15, 1, 8, 4, 6]


Solution : [0, 15, 1, 8, 4, 6] has cost 47.


Decide in level 11 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 12, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]


New level: 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : {14}

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]


Solution : [0, 15, 1, 8, 4, 6, 12] has cost 52.


Decide in level 12 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 10]


New level: 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 10]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 10]


Solution : [0, 15, 1, 8, 4, 6, 12, 10] has cost 65.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 12, 10]

After backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12]


Solution : [0, 15, 1, 8, 4, 6, 12] has cost 52.


Decide in level 13 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 3]


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 3]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 3]


Solution : [0, 15, 1, 8, 4, 6, 12, 3] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 12, 3]

After backtrack at level 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2]
 solution : [0, 15, 1, 8, 4, 6, 12]

Essensial at level 14 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 12, 2]


Solution : [0, 15, 1, 8, 4, 6, 12, 2] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 12, 2]

After backtrack at level 14
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 4, 6, 12]

After backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 6, 12]


Before backtrack at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3]
 solution : [0, 15, 1, 8, 4, 6, 12]

After backtrack at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14, 10]
 solution : [0, 15, 1, 8, 4, 6, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14, 10]
 solution : [0, 15, 1, 8, 4, 6]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14, 10]
 solution : [0, 15, 1, 8, 4, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 12 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14, 10]
 solution : [0, 15, 1, 8, 4, 6]


Solution : [0, 15, 1, 8, 4, 6] has cost 47.


Decide in level 12 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 10]


New level: 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 10]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 3, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 10]


Solution : [0, 15, 1, 8, 4, 6, 10] has cost 60.


Before backtrack at level 13
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 10]

After backtrack at level 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6]


Before reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 13 : set()

After reduction : 
 pending  : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6]


Solution : [0, 15, 1, 8, 4, 6] has cost 47.


Decide in level 13 among pending : [2, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 2 with phase True at level 13

After decision at level 13
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 2]


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 2]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, 2), (17, -1), (18, 2), (19, -1), (20, 5), (21, 5), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 3, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 2]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 2]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 2]


Solution : [0, 15, 1, 8, 4, 6, 2] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 2]

After backtrack at level 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6, 2]


Invert decision for 2 at level 13


New level: 14
 pending : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6]


Before reduction : 
 pending  : [20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 3, 14]
 solution : [0, 15, 1, 8, 4, 6]

Essensial at level 14 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 4, 6, 3]


Solution : [0, 15, 1, 8, 4, 6, 3] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 4, 6, 3]

After backtrack at level 14
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 6]


Before backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 4, 6]

After backtrack at level 13
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 6]


Before backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2]
 solution : [0, 15, 1, 8, 4, 6]

After backtrack at level 12
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10]
 solution : [0, 15, 1, 8, 4, 6]


Before backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10]
 solution : [0, 15, 1, 8, 4, 6]

After backtrack at level 11
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 5
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 5
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 4]


Before backtrack at level 4
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 4]

After backtrack at level 4
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29, 13]
 solution : [0, 15, 1, 8, 4]


Invert decision for 4 at level 3


New level: 4
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29, 13]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29, 13]
 solution : [0, 15, 1, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29, 13]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 4 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29, 13]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 13 with phase True at level 4

After decision at level 4
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]


New level: 5
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 14, 2, 10, 6, 17, 19, 28, 30, 12, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, 0), (13, -1), (14, 0), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 5 : {12, 14}

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, 0), (13, -1), (14, 0), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 5 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 17, 19, 28, 30, 9, 11, 27, 5, 7, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 17 with phase True at level 5

After decision at level 5
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]


New level: 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 19, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, 0), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : {19}

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, 0), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17]


Solution : [0, 15, 1, 8, 13, 17] has cost 41.


Decide in level 6 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 6, 28, 30, 9, 11, 27, 5, 7, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 6 with phase True at level 6

After decision at level 6
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


New level: 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 28, 30, 9, 11, 27, 5, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : {9, 28, 5, 30}

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 7 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 10, 11, 27, 7, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 10]


New level: 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 10]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 8 : {33, 2, 3, 7, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 10]


Solution : [0, 15, 1, 8, 13, 17, 6, 10] has cost 60.


Before backtrack at level 8
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 6, 10]

After backtrack at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 8 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 11, 27, 7, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 8

After decision at level 8
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 11]


New level: 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 11]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 7, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 11]


Solution : [0, 15, 1, 8, 13, 17, 6, 11] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 6, 11]

After backtrack at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 11]


Invert decision for 11 at level 8


New level: 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 9 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 7, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 7]


New level: 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 7]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 6, 7]


Solution : [0, 15, 1, 8, 13, 17, 6, 7] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 6, 7]

After backtrack at level 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 10 among pending : [3, 20, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 20 with phase True at level 10

After decision at level 10
 pending : [3, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]


New level: 11
 pending : [3, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]


Before reduction : 
 pending  : [3, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 2, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]


Solution : [0, 15, 1, 8, 13, 17, 6, 20] has cost 81.


Before backtrack at level 11
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]

After backtrack at level 11
 pending : [3, 2, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 20]


Invert decision for 20 at level 10


New level: 11
 pending : [3, 2, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 2, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 11 among pending : [3, 2, 21, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 21 with phase True at level 11

After decision at level 11
 pending : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]


New level: 12
 pending : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]


Before reduction : 
 pending  : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 16, 18, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]


Solution : [0, 15, 1, 8, 13, 17, 6, 21] has cost 81.


Before backtrack at level 12
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]

After backtrack at level 12
 pending : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 21]


Invert decision for 21 at level 11


New level: 12
 pending : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Solution : [0, 15, 1, 8, 13, 17, 6] has cost 47.


Decide in level 12 among pending : [3, 2, 22, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 12

After decision at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]


New level: 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 16, 18, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]


Solution : [0, 15, 1, 8, 13, 17, 6, 22] has cost 81.


Before backtrack at level 13
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]

After backtrack at level 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6, 22]


Invert decision for 22 at level 12


New level: 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

Essensial at level 13 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 16, 18, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 23]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 23]


Solution : [0, 15, 1, 8, 13, 17, 6, 23] has cost 81.


Before backtrack at level 13
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 6, 23]

After backtrack at level 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 8
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 8
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11]
 solution : [0, 15, 1, 8, 13, 17, 6]


Before backtrack at level 7
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11]
 solution : [0, 15, 1, 8, 13, 17, 6]

After backtrack at level 7
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 17, 6]


Invert decision for 6 at level 6


New level: 7
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 17]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 17]


Solution : [0, 15, 1, 8, 13, 17] has cost 41.


Decide in level 7 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 9, 5, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


New level: 8
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {28, 5, 30}

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 8 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 8

After decision at level 8
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 7]


New level: 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 7]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 7]


Solution : [0, 15, 1, 8, 13, 17, 9, 7] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 9, 7]

After backtrack at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 7]


Invert decision for 7 at level 8


New level: 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 9 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 9

After decision at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 11]


New level: 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 11]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 11]


Solution : [0, 15, 1, 8, 13, 17, 9, 11] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 9, 11]

After backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9, 11]


Invert decision for 11 at level 9


New level: 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 10 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 10

After decision at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 10]


New level: 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 10]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 10]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 17, 9, 10]


Solution : [0, 15, 1, 8, 13, 17, 9, 10] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 13, 17, 9, 10]

After backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 10]


Invert decision for 10 at level 10


New level: 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 11 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 23 with phase True at level 11

After decision at level 11
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]


New level: 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]


Solution : [0, 15, 1, 8, 13, 17, 9, 23] has cost 81.


Before backtrack at level 12
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]

After backtrack at level 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 23]


Invert decision for 23 at level 11


New level: 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 12 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 12

After decision at level 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 16, 18, 20, 21, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]


Solution : [0, 15, 1, 8, 13, 17, 9, 22] has cost 81.


Before backtrack at level 13
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]

After backtrack at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 22]


Invert decision for 22 at level 12


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Solution : [0, 15, 1, 8, 13, 17, 9] has cost 47.


Decide in level 13 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 20, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]


Solution : [0, 15, 1, 8, 13, 17, 9, 21] has cost 81.


Before backtrack at level 14
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]

After backtrack at level 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 17, 9]

Essensial at level 14 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 20]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 20]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 20]


Solution : [0, 15, 1, 8, 13, 17, 9, 20] has cost 81.


Before backtrack at level 14
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 17, 9, 20]

After backtrack at level 14
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 13
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 13
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11]
 solution : [0, 15, 1, 8, 13, 17, 9]


Before backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11]
 solution : [0, 15, 1, 8, 13, 17, 9]

After backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 17, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 17]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 17]

Essensial at level 8 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {28, 30}

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 17, 5]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 17, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 17, 5]


Solution : [0, 15, 1, 8, 13, 17, 5] has cost 54.


Before backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 17, 5]

After backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30]
 solution : [0, 15, 1, 8, 13, 17]


Before backtrack at level 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30]
 solution : [0, 15, 1, 8, 13, 17]

After backtrack at level 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9]
 solution : [0, 15, 1, 8, 13, 17]


Before backtrack at level 6
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9]
 solution : [0, 15, 1, 8, 13, 17]

After backtrack at level 6
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 19, 6]
 solution : [0, 15, 1, 8, 13, 17]


Invert decision for 17 at level 5


New level: 6
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 19, 6]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 19, 6]
 solution : [0, 15, 1, 8, 13]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 19, 6]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 6 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 19, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 19 with phase True at level 6

After decision at level 6
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]


New level: 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, 192), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]


Solution : [0, 15, 1, 8, 13, 19] has cost 44.


Decide in level 7 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 5, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19, 5]


New level: 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19, 5]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {9, 28, 30, 6}

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 5]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 5]


Solution : [0, 15, 1, 8, 13, 19, 5] has cost 57.


Before backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 5]

After backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 13, 19]


Solution : [0, 15, 1, 8, 13, 19] has cost 44.


Decide in level 8 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 6]
 solution : [0, 15, 1, 8, 13, 19, 9]


New level: 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 6]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7, 28, 30, 6]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 101), (21, 101), (22, 101), (23, 101), (24, 18), (25, 18), (26, 2), (27, 32), (28, 8), (29, 32), (30, 8), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : {28, 30, 6}

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 9 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 10]


New level: 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 10]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 7, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 10]


Solution : [0, 15, 1, 8, 13, 19, 9, 10] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 9, 10]

After backtrack at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 10 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 11]


New level: 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 11]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 7, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 11]


Solution : [0, 15, 1, 8, 13, 19, 9, 11] has cost 56.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 9, 11]

After backtrack at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 11 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 11

After decision at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 7]


New level: 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 7]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 9, 7]


Solution : [0, 15, 1, 8, 13, 19, 9, 7] has cost 56.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 9, 7]

After backtrack at level 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 7]


Invert decision for 7 at level 11


New level: 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 12 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 20 with phase True at level 12

After decision at level 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 16, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]


Solution : [0, 15, 1, 8, 13, 19, 9, 20] has cost 84.


Before backtrack at level 13
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]

After backtrack at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 20]


Invert decision for 20 at level 12


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 13 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 21 with phase True at level 13

After decision at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]


Solution : [0, 15, 1, 8, 13, 19, 9, 21] has cost 84.


Before backtrack at level 14
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]

After backtrack at level 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 21]


Invert decision for 21 at level 13


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Solution : [0, 15, 1, 8, 13, 19, 9] has cost 50.


Decide in level 14 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 23]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 14

After decision at level 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]


New level: 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, -1), (21, -1), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 16, 18, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]


Solution : [0, 15, 1, 8, 13, 19, 9, 22] has cost 84.


Before backtrack at level 15
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]

After backtrack at level 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9, 22]


Invert decision for 22 at level 14


New level: 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 23]
 solution : [0, 15, 1, 8, 13, 19, 9]

Essensial at level 15 : {23}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 16, 18, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 23]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 23]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 23]


Solution : [0, 15, 1, 8, 13, 19, 9, 23] has cost 84.


Before backtrack at level 15
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 9, 23]

After backtrack at level 15
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 14
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 14
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 13
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11]
 solution : [0, 15, 1, 8, 13, 19, 9]


Before backtrack at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11]
 solution : [0, 15, 1, 8, 13, 19, 9]

After backtrack at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 13, 19, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 13, 19]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 13, 19]

Essensial at level 9 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : {28, 30}

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, 0), (29, 1), (30, 0), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 9 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 7, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 7 with phase True at level 9

After decision at level 9
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 7]


New level: 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 7]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 10, 11, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 7]


Solution : [0, 15, 1, 8, 13, 19, 6, 7] has cost 56.


Before backtrack at level 10
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 6, 7]

After backtrack at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 7]


Invert decision for 7 at level 9


New level: 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 10 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 11 with phase True at level 10

After decision at level 10
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 11]


New level: 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 11]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 2, 3, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 11]


Solution : [0, 15, 1, 8, 13, 19, 6, 11] has cost 56.


Before backtrack at level 11
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 6, 11]

After backtrack at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6, 11]


Invert decision for 11 at level 10


New level: 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 11 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 10]


New level: 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 10]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 2, 3, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 19, 6, 10]


Solution : [0, 15, 1, 8, 13, 19, 6, 10] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 15, 1, 8, 13, 19, 6, 10]

After backtrack at level 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 12 among pending : [3, 2, 23, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 23 with phase True at level 12

After decision at level 12
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 16, 18, 20, 21, 22, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]


Solution : [0, 15, 1, 8, 13, 19, 6, 23] has cost 84.


Before backtrack at level 13
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]

After backtrack at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 23]


Invert decision for 23 at level 12


New level: 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 13 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 22, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 22 with phase True at level 13

After decision at level 13
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, 19), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 16, 18, 20, 21, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]


Solution : [0, 15, 1, 8, 13, 19, 6, 22] has cost 84.


Before backtrack at level 14
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]

After backtrack at level 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 22]


Invert decision for 22 at level 13


New level: 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Solution : [0, 15, 1, 8, 13, 19, 6] has cost 50.


Decide in level 14 among pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 20]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Decide 21 with phase True at level 14

After decision at level 14
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]


New level: 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 11), (17, -1), (18, 9), (19, -1), (20, 19), (21, 19), (22, -1), (23, -1), (24, 6), (25, 6), (26, 2), (27, 1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 16, 18, 20, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 0), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]


Solution : [0, 15, 1, 8, 13, 19, 6, 21] has cost 84.


Before backtrack at level 15
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]

After backtrack at level 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6, 21]


Invert decision for 21 at level 14


New level: 15
 pending : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before reduction : 
 pending  : [3, 2, 24, 25, 16, 18, 26, 31, 33, 27, 29, 20]
 solution : [0, 15, 1, 8, 13, 19, 6]

Essensial at level 15 : {20}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 16, 18, 24, 25, 26, 27, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 20]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 20]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 20]


Solution : [0, 15, 1, 8, 13, 19, 6, 20] has cost 84.


Before backtrack at level 15
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 19, 6, 20]

After backtrack at level 15
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 14
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 14
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 13
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 13
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 12
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 11
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 10
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11]
 solution : [0, 15, 1, 8, 13, 19, 6]


Before backtrack at level 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11]
 solution : [0, 15, 1, 8, 13, 19, 6]

After backtrack at level 9
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7]
 solution : [0, 15, 1, 8, 13, 19]


Before backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7]
 solution : [0, 15, 1, 8, 13, 19]

After backtrack at level 8
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9]
 solution : [0, 15, 1, 8, 13, 19]


Before backtrack at level 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9]
 solution : [0, 15, 1, 8, 13, 19]

After backtrack at level 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 19]


Invert decision for 19 at level 6


New level: 7
 pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 7 among pending : [3, 2, 20, 24, 25, 16, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [3, 2, 20, 24, 25, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]


New level: 8
 pending : [3, 2, 20, 24, 25, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 18, 26, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 37), (21, 37), (22, 37), (23, 37), (24, 16), (25, 16), (26, 0), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : {18, 26}

After reduction : 
 pending  : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 37), (21, 37), (22, 37), (23, 37), (24, 16), (25, 16), (26, 0), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 37), (21, 37), (22, 37), (23, 37), (24, 16), (25, 16), (26, -1), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]


Solution : [0, 15, 1, 8, 13, 16] has cost 59.


Before backtrack at level 8
 pending : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 16]

After backtrack at level 8
 pending : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 37), (21, 37), (22, 37), (23, 37), (24, 16), (25, 16), (26, -1), (27, 128), (28, 32), (29, 128), (30, 32), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 8 : set()

After reduction : 
 pending  : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 8 among pending : [3, 2, 20, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 20 with phase True at level 8

After decision at level 8
 pending : [3, 2, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13, 20]


New level: 9
 pending : [3, 2, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13, 20]


Before reduction : 
 pending  : [3, 2, 24, 25, 31, 33, 27, 29, 21, 22, 23, 10, 11, 6, 28, 30, 7, 9, 5, 18, 26]
 solution : [0, 15, 1, 8, 13, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 129), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 1), (28, 32), (29, 1), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 9 : {33, 18, 21, 22, 23, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 20]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 1), (28, 32), (29, 1), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 32), (29, 1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 20]


Solution : [0, 15, 1, 8, 13, 20] has cost 59.


Before backtrack at level 9
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 20]

After backtrack at level 9
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 22, 23, 18, 26]
 solution : [0, 15, 1, 8, 13, 20]


Invert decision for 20 at level 8


New level: 9
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 22, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 22, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 32), (29, 1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 22, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 9 among pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 22, 23, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13, 22]


New level: 10
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13, 22]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 128), (28, 16), (29, 128), (30, 16), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 18, 21, 23, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 22]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, 0), (26, 0), (27, 128), (28, 16), (29, 128), (30, 16), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 16), (29, 1), (30, 16), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 22]


Solution : [0, 15, 1, 8, 13, 22] has cost 59.


Before backtrack at level 10
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 22]

After backtrack at level 10
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 16), (29, 1), (30, 16), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 10 among pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 23, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 23 with phase True at level 10

After decision at level 10
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 23]


New level: 11
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 23]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 1), (28, 16), (29, 1), (30, 16), (31, 0), (32, -1), (33, 0)]

Covered at level 11 : {33, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 23]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 23]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 1), (28, 16), (29, 1), (30, 16), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 16), (29, 1), (30, 16), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 23]


Solution : [0, 15, 1, 8, 13, 23] has cost 59.


Before backtrack at level 11
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5]
 solution : [0, 15, 1, 8, 13, 23]

After backtrack at level 11
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 23]


Invert decision for 23 at level 10


New level: 11
 pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, 128), (6, 128), (7, 1), (8, -1), (9, 128), (10, 1), (11, 1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, 1), (28, 16), (29, 1), (30, 16), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 11 among pending : [3, 2, 27, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 27 with phase True at level 11

After decision at level 11
 pending : [3, 2, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]


New level: 12
 pending : [3, 2, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]


Before reduction : 
 pending  : [3, 2, 29, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 31, 33, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, 0), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 12 : {33, 29, 31}

After reduction : 
 pending  : [3, 2, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]


Before reduction : 
 pending  : [3, 2, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, 0), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27]


Solution : [0, 15, 1, 8, 13, 27] has cost 35.


Decide in level 12 among pending : [3, 2, 10, 11, 6, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [3, 2, 10, 11, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


New level: 13
 pending : [3, 2, 10, 11, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before reduction : 
 pending  : [3, 2, 10, 11, 28, 30, 7, 9, 5, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {9, 28, 5, 30}

After reduction : 
 pending  : [3, 2, 10, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before reduction : 
 pending  : [3, 2, 10, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 10, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Solution : [0, 15, 1, 8, 13, 27, 6] has cost 41.


Decide in level 13 among pending : [3, 2, 10, 11, 7, 24, 25, 21, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 10]


New level: 14
 pending : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 10]


Before reduction : 
 pending  : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {2, 3, 7, 11, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 10]


Solution : [0, 15, 1, 8, 13, 27, 6, 10] has cost 54.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 6, 10]

After backtrack at level 14
 pending : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before reduction : 
 pending  : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 11, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Solution : [0, 15, 1, 8, 13, 27, 6] has cost 41.


Decide in level 14 among pending : [3, 2, 11, 7, 24, 25, 21, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 14

After decision at level 14
 pending : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 11]


New level: 15
 pending : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 11]


Before reduction : 
 pending  : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 3, 7, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 11]


Solution : [0, 15, 1, 8, 13, 27, 6, 11] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 6, 11]

After backtrack at level 15
 pending : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 11]


Invert decision for 11 at level 14


New level: 15
 pending : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before reduction : 
 pending  : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 7, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Solution : [0, 15, 1, 8, 13, 27, 6] has cost 41.


Decide in level 15 among pending : [3, 2, 7, 24, 25, 21, 18, 26]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 7]


New level: 16
 pending : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 7]


Before reduction : 
 pending  : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 3, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 6, 7]


Solution : [0, 15, 1, 8, 13, 27, 6, 7] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 6, 7]

After backtrack at level 16
 pending : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before reduction : 
 pending  : [3, 2, 24, 25, 21, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

Essensial at level 16 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {24, 25, 18, 26}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 6, 21]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 6, 21]


Solution : [0, 15, 1, 8, 13, 27, 6, 21] has cost 75.


Before backtrack at level 16
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 6, 21]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 6]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 18, 26, 7]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 7]
 solution : [0, 15, 1, 8, 13, 27, 6]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11]
 solution : [0, 15, 1, 8, 13, 27, 6]


Before backtrack at level 13
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11]
 solution : [0, 15, 1, 8, 13, 27, 6]

After backtrack at level 13
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 27, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 27]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 27]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 9, 5, 10]
 solution : [0, 15, 1, 8, 13, 27]


Solution : [0, 15, 1, 8, 13, 27] has cost 35.


Decide in level 13 among pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 9, 5, 10]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


New level: 14
 pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 28, 30, 5, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 128), (6, -1), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 21), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {28, 5, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, 0), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Solution : [0, 15, 1, 8, 13, 27, 9] has cost 41.


Decide in level 14 among pending : [3, 2, 21, 24, 25, 18, 26, 7, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 14

After decision at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 7]


New level: 15
 pending : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {2, 3, 10, 11, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 7]


Solution : [0, 15, 1, 8, 13, 27, 9, 7] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 9, 7]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 7]


Invert decision for 7 at level 14


New level: 15
 pending : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 11, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Solution : [0, 15, 1, 8, 13, 27, 9] has cost 41.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 18, 26, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 11]


New level: 16
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 3, 10, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 11]


Solution : [0, 15, 1, 8, 13, 27, 9, 11] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 9, 11]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9, 11]


Invert decision for 11 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Solution : [0, 15, 1, 8, 13, 27, 9] has cost 41.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 18, 26, 10]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9, 10]


New level: 17
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {2, 3, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 27, 9, 10]


Solution : [0, 15, 1, 8, 13, 27, 9, 10] has cost 54.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 13, 27, 9, 10]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9]

Essensial at level 17 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {24, 25, 18, 26}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 9, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 9, 21]


Solution : [0, 15, 1, 8, 13, 27, 9, 21] has cost 75.


Before backtrack at level 17
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 27, 9, 21]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 18, 26]
 solution : [0, 15, 1, 8, 13, 27, 9]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 18, 26, 10]
 solution : [0, 15, 1, 8, 13, 27, 9]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11]
 solution : [0, 15, 1, 8, 13, 27, 9]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11]
 solution : [0, 15, 1, 8, 13, 27, 9]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 27, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 27]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 28, 30, 5, 7]
 solution : [0, 15, 1, 8, 13, 27]

Essensial at level 14 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {28, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 27, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 27, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 27, 5]


Solution : [0, 15, 1, 8, 13, 27, 5] has cost 48.


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 27, 5]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30]
 solution : [0, 15, 1, 8, 13, 27]


Before backtrack at level 13
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30]
 solution : [0, 15, 1, 8, 13, 27]

After backtrack at level 13
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9]
 solution : [0, 15, 1, 8, 13, 27]


Before backtrack at level 12
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9]
 solution : [0, 15, 1, 8, 13, 27]

After backtrack at level 12
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13, 27]


Invert decision for 27 at level 11


New level: 12
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 12 among pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 5, 28, 30, 9, 29, 31, 33, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13, 5]


New level: 13
 pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 28, 30, 9, 29, 31, 33, 6]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, 8), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : {9, 28, 30, 6}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, 8), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Solution : [0, 15, 1, 8, 13, 5] has cost 38.


Decide in level 13 among pending : [3, 2, 21, 24, 25, 18, 26, 10, 11, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [3, 2, 21, 24, 25, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]


New level: 14
 pending : [3, 2, 21, 24, 25, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : {26}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]


Solution : [0, 15, 1, 8, 13, 5, 18] has cost 72.


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 18]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 5, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, 1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 5]


Solution : [0, 15, 1, 8, 13, 5] has cost 38.


Decide in level 14 among pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 14

After decision at level 14
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]


New level: 15
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]


Solution : [0, 15, 1, 8, 13, 5, 26] has cost 48.


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 26]


Invert decision for 26 at level 14


New level: 15
 pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, 4), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Solution : [0, 15, 1, 8, 13, 5] has cost 38.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 10, 11, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 10]


New level: 16
 pending : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 3, 7, 11, 21, 24, 25, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 10]


Solution : [0, 15, 1, 8, 13, 5, 10] has cost 51.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 13, 5, 10]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 10]


Invert decision for 10 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Solution : [0, 15, 1, 8, 13, 5] has cost 38.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 11, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 11]


New level: 17
 pending : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 3, 7, 21, 24, 25, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 11]


Solution : [0, 15, 1, 8, 13, 5, 11] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 13, 5, 11]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Solution : [0, 15, 1, 8, 13, 5] has cost 38.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 7, 29, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 7]


New level: 18
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 3, 21, 24, 25, 29, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 5, 7]


Solution : [0, 15, 1, 8, 13, 5, 7] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 5, 7]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

Essensial at level 18 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 24, 25, 29, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 5, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 5, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, 0), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 5, 21]


Solution : [0, 15, 1, 8, 13, 5, 21] has cost 72.


Before backtrack at level 18
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 5, 21]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 29, 31, 33]
 solution : [0, 15, 1, 8, 13, 5]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 5]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 5]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11]
 solution : [0, 15, 1, 8, 13, 5]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11]
 solution : [0, 15, 1, 8, 13, 5]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 5]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 5]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 5]


Before backtrack at level 13
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 5]

After backtrack at level 13
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 13 among pending : [3, 2, 21, 24, 25, 29, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]


New level: 14
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, 128), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 31}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 9, 6, 18]
 solution : [0, 15, 1, 8, 13, 29]


Solution : [0, 15, 1, 8, 13, 29] has cost 35.


Decide in level 14 among pending : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 9, 6, 18]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


New level: 15
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {28, 30, 6}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Solution : [0, 15, 1, 8, 13, 29, 9] has cost 41.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 7, 11, 10, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 7]


New level: 16
 pending : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 3, 10, 11, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 7]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 7]


Solution : [0, 15, 1, 8, 13, 29, 9, 7] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 9, 7]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 7]


Invert decision for 7 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Solution : [0, 15, 1, 8, 13, 29, 9] has cost 41.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 11, 10, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 11]


New level: 17
 pending : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {2, 3, 10, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 11]


Solution : [0, 15, 1, 8, 13, 29, 9, 11] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 9, 11]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Solution : [0, 15, 1, 8, 13, 29, 9] has cost 41.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 10, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 10]


New level: 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {2, 3, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 9, 10]


Solution : [0, 15, 1, 8, 13, 29, 9, 10] has cost 54.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 9, 10]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9, 10]


Invert decision for 10 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

Essensial at level 18 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {24, 25, 26, 18}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 9, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 9, 21]


Solution : [0, 15, 1, 8, 13, 29, 9, 21] has cost 75.


Before backtrack at level 18
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 9, 21]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 9]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 26, 18, 10]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 10]
 solution : [0, 15, 1, 8, 13, 29, 9]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 10, 11]
 solution : [0, 15, 1, 8, 13, 29, 9]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 26, 18, 10, 11]
 solution : [0, 15, 1, 8, 13, 29, 9]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 26, 18, 10, 11, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 13, 29, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [3, 2, 21, 24, 25, 26, 18, 10, 11, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 13, 29]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 10, 11, 28, 30, 6, 7]
 solution : [0, 15, 1, 8, 13, 29]

Essensial at level 15 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Solution : [0, 15, 1, 8, 13, 29, 6] has cost 41.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 26, 18, 10, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 10]


New level: 16
 pending : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {2, 3, 7, 11, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 10]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 10]


Solution : [0, 15, 1, 8, 13, 29, 6, 10] has cost 54.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 6, 10]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 10]


Invert decision for 10 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 11, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Solution : [0, 15, 1, 8, 13, 29, 6] has cost 41.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 26, 18, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 11]


New level: 17
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {2, 3, 7, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 11]


Solution : [0, 15, 1, 8, 13, 29, 6, 11] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 6, 11]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Solution : [0, 15, 1, 8, 13, 29, 6] has cost 41.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 26, 18, 7]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6, 7]


New level: 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {2, 3, 18, 21, 24, 25, 26}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 29, 6, 7]


Solution : [0, 15, 1, 8, 13, 29, 6, 7] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 29, 6, 7]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6]

Essensial at level 18 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {24, 25, 26, 18}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 6, 21]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 6, 21]


Solution : [0, 15, 1, 8, 13, 29, 6, 21] has cost 75.


Before backtrack at level 18
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 29, 6, 21]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 26, 18]
 solution : [0, 15, 1, 8, 13, 29, 6]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 7]
 solution : [0, 15, 1, 8, 13, 29, 6]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11]
 solution : [0, 15, 1, 8, 13, 29, 6]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11]
 solution : [0, 15, 1, 8, 13, 29, 6]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10]
 solution : [0, 15, 1, 8, 13, 29]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10]
 solution : [0, 15, 1, 8, 13, 29]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13]


Solution : [0, 15, 1, 8, 13] has cost 25.


Decide in level 14 among pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 6, 28, 30, 10, 31, 33, 9]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13, 6]


New level: 15
 pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 28, 30, 10, 31, 33, 9]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : {9, 28, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 18, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]


Solution : [0, 15, 1, 8, 13, 6] has cost 31.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 26, 18, 7, 11, 10, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 18 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 26, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]


New level: 16
 pending : [3, 2, 21, 24, 25, 26, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 26, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 16 : {26}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]


Solution : [0, 15, 1, 8, 13, 6, 18] has cost 65.


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 18]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 6, 18]


Invert decision for 18 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33, 26]
 solution : [0, 15, 1, 8, 13, 6]


Solution : [0, 15, 1, 8, 13, 6] has cost 31.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


New level: 17
 pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Solution : [0, 15, 1, 8, 13, 6, 26] has cost 41.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 7, 11, 10, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 7]


New level: 18
 pending : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 3, 10, 11, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 7]


Solution : [0, 15, 1, 8, 13, 6, 26, 7] has cost 47.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 26, 7]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Solution : [0, 15, 1, 8, 13, 6, 26] has cost 41.


Decide in level 18 among pending : [3, 2, 21, 24, 25, 11, 10, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 11 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 11]


New level: 19
 pending : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 10, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 11]


Solution : [0, 15, 1, 8, 13, 6, 26, 11] has cost 47.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 26, 11]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 11]


Invert decision for 11 at level 18


New level: 19
 pending : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Solution : [0, 15, 1, 8, 13, 6, 26] has cost 41.


Decide in level 19 among pending : [3, 2, 21, 24, 25, 10, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Decide 10 with phase True at level 19

After decision at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 10]


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 3, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 26, 10]


Solution : [0, 15, 1, 8, 13, 6, 26, 10] has cost 54.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 26, 10]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26, 10]


Invert decision for 10 at level 19


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]

Essensial at level 20 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {24, 25, 33, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 26, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 26, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 26, 21]


Solution : [0, 15, 1, 8, 13, 6, 26, 21] has cost 75.


Before backtrack at level 20
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 26, 21]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 26]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 6, 26]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 13, 6, 26]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 13, 6, 26]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 6, 26]


Invert decision for 26 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]


Solution : [0, 15, 1, 8, 13, 6] has cost 31.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6, 10]


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 3, 7, 11, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 10]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 10]


Solution : [0, 15, 1, 8, 13, 6, 10] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 10]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6, 10]


Invert decision for 10 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 7]
 solution : [0, 15, 1, 8, 13, 6]


Solution : [0, 15, 1, 8, 13, 6] has cost 31.


Decide in level 18 among pending : [3, 2, 21, 24, 25, 31, 33, 11, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6, 11]


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 7, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 11]


Solution : [0, 15, 1, 8, 13, 6, 11] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 11]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6, 11]


Invert decision for 11 at level 18


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6]


Solution : [0, 15, 1, 8, 13, 6] has cost 31.


Decide in level 19 among pending : [3, 2, 21, 24, 25, 31, 33, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 19

After decision at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 7]


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 3, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 7]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 6, 7]


Solution : [0, 15, 1, 8, 13, 6, 7] has cost 37.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 8, 13, 6, 7]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6, 7]


Invert decision for 7 at level 19


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]

Essensial at level 20 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {24, 25, 33, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 21]


Solution : [0, 15, 1, 8, 13, 6, 21] has cost 65.


Before backtrack at level 20
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 6, 21]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]


Before backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 6]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6]


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 13, 6]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11]
 solution : [0, 15, 1, 8, 13, 6]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11]
 solution : [0, 15, 1, 8, 13, 6]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 6]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 6]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 6]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 6]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 18]
 solution : [0, 15, 1, 8, 13, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 18]
 solution : [0, 15, 1, 8, 13]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 28, 30, 9, 18]
 solution : [0, 15, 1, 8, 13]

Essensial at level 15 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : {28, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 18]
 solution : [0, 15, 1, 8, 13, 9]


Solution : [0, 15, 1, 8, 13, 9] has cost 31.


Decide in level 15 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 18 with phase True at level 15

After decision at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9, 18]


New level: 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 16 : {26}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 18]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 18]


Solution : [0, 15, 1, 8, 13, 9, 18] has cost 65.


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 18]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9, 18]


Invert decision for 18 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]
 solution : [0, 15, 1, 8, 13, 9]


Solution : [0, 15, 1, 8, 13, 9] has cost 31.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]


New level: 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]


Solution : [0, 15, 1, 8, 13, 9, 26] has cost 41.


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 26]


Invert decision for 26 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]


Solution : [0, 15, 1, 8, 13, 9] has cost 31.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 7]


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 18 : {33, 2, 3, 10, 11, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 7]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 7]


Solution : [0, 15, 1, 8, 13, 9, 7] has cost 37.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 13, 9, 7]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9, 7]


Invert decision for 7 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 13, 9]


Solution : [0, 15, 1, 8, 13, 9] has cost 31.


Decide in level 18 among pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9, 11]


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 10, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 11]


Solution : [0, 15, 1, 8, 13, 9, 11] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 13, 9, 11]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9, 11]


Invert decision for 11 at level 18


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9]


Solution : [0, 15, 1, 8, 13, 9] has cost 31.


Decide in level 19 among pending : [3, 2, 21, 24, 25, 31, 33, 10]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 19

After decision at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9, 10]


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 3, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 13, 9, 10]


Solution : [0, 15, 1, 8, 13, 9, 10] has cost 44.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 8, 13, 9, 10]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9, 10]


Invert decision for 10 at level 19


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9]

Essensial at level 20 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {24, 25, 33, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 9, 21]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 13, 9, 21]


Solution : [0, 15, 1, 8, 13, 9, 21] has cost 65.


Before backtrack at level 20
 pending : [3, 2]
 solution : [0, 15, 1, 8, 13, 9, 21]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9]


Before backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 13, 9]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9]


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10]
 solution : [0, 15, 1, 8, 13, 9]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 13, 9]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 13, 9]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 9]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7]
 solution : [0, 15, 1, 8, 13, 9]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26]
 solution : [0, 15, 1, 8, 13, 9]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26]
 solution : [0, 15, 1, 8, 13, 9]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 12
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 12
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 11
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 11
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 10
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 10
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 9
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 9
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 8
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 8
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 7
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 7
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19]
 solution : [0, 15, 1, 8, 13]


Before backtrack at level 5
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19]
 solution : [0, 15, 1, 8, 13]

After backtrack at level 5
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19, 14, 12, 17]
 solution : [0, 15, 1, 8, 13]


Invert decision for 13 at level 4


New level: 5
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19, 14, 12, 17]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19, 14, 12, 17]
 solution : [0, 15, 1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19, 14, 12, 17]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 5 among pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 19, 14, 12, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 19 with phase True at level 5

After decision at level 5
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8, 19]


New level: 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8, 19]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, 192), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, 0), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 6 : {17}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 19]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 19]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, 0), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 19]


Solution : [0, 15, 1, 8, 19] has cost 39.


Before backtrack at level 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 19]

After backtrack at level 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8, 19]


Invert decision for 19 at level 5


New level: 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 6 among pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12, 17]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 17 with phase True at level 6

After decision at level 6
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


New level: 7
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, 192), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Solution : [0, 15, 1, 8, 17] has cost 36.


Decide in level 7 among pending : [3, 2, 21, 24, 25, 31, 33, 10, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Decide 10 with phase True at level 7

After decision at level 7
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 10]


New level: 8
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 7, 26, 9, 28, 30, 18, 6, 29, 5, 27, 23, 22, 20, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, 0), (27, 32), (28, 8), (29, 32), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 8 : {33, 2, 3, 7, 11, 12, 14, 16, 18, 26, 31}

After reduction : 
 pending  : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 17, 10]


Before reduction : 
 pending  : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 17, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, 0), (27, 32), (28, 8), (29, 32), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, -1), (27, 32), (28, 8), (29, 32), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 17, 10]


Solution : [0, 15, 1, 8, 17, 10] has cost 49.


Before backtrack at level 8
 pending : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20]
 solution : [0, 15, 1, 8, 17, 10]

After backtrack at level 8
 pending : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 10]


Invert decision for 10 at level 7


New level: 8
 pending : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Before reduction : 
 pending  : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, -1), (27, 32), (28, 8), (29, 32), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Solution : [0, 15, 1, 8, 17] has cost 36.


Decide in level 8 among pending : [21, 24, 25, 9, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [21, 24, 25, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]


New level: 9
 pending : [21, 24, 25, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]


Before reduction : 
 pending  : [21, 24, 25, 28, 30, 6, 29, 5, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : {28, 5, 30, 6}

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]


Solution : [0, 15, 1, 8, 17, 9] has cost 42.


Before backtrack at level 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 9]

After backtrack at level 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17]


Solution : [0, 15, 1, 8, 17] has cost 36.


Decide in level 9 among pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 11, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Decide 11 with phase True at level 9

After decision at level 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]


New level: 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, 0), (27, 32), (28, 8), (29, 32), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 10 : {33, 2, 3, 7, 12, 14, 16, 18, 26, 31}

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, 0), (27, 32), (28, 8), (29, 32), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, -1), (27, 32), (28, 8), (29, 32), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]


Solution : [0, 15, 1, 8, 17, 11] has cost 42.


Before backtrack at level 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 17, 11]

After backtrack at level 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 11]


Invert decision for 11 at level 9


New level: 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 8), (21, 8), (22, 8), (23, 8), (24, 4), (25, 4), (26, -1), (27, 32), (28, 8), (29, 32), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17]


Solution : [0, 15, 1, 8, 17] has cost 36.


Decide in level 10 among pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 6, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]


New level: 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 28, 30, 5, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 101), (21, 85), (22, 101), (23, 101), (24, 18), (25, 18), (26, 16), (27, 32), (28, 8), (29, 32), (30, 8), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : {28, 5, 30}

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]


Solution : [0, 15, 1, 8, 17, 6] has cost 42.


Before backtrack at level 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 6]

After backtrack at level 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 5]
 solution : [0, 15, 1, 8, 17, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 5]
 solution : [0, 15, 1, 8, 17]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 28, 30, 5]
 solution : [0, 15, 1, 8, 17]

Essensial at level 11 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : {28, 30}

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 5]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, 0), (29, 1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 5]


Solution : [0, 15, 1, 8, 17, 5] has cost 49.


Before backtrack at level 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12]
 solution : [0, 15, 1, 8, 17, 5]

After backtrack at level 11
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30]
 solution : [0, 15, 1, 8, 17]


Before backtrack at level 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30]
 solution : [0, 15, 1, 8, 17]

After backtrack at level 10
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6]
 solution : [0, 15, 1, 8, 17]


Before backtrack at level 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6]
 solution : [0, 15, 1, 8, 17]

After backtrack at level 9
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11]
 solution : [0, 15, 1, 8, 17]


Before backtrack at level 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11]
 solution : [0, 15, 1, 8, 17]

After backtrack at level 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9]
 solution : [0, 15, 1, 8, 17]


Before backtrack at level 7
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9]
 solution : [0, 15, 1, 8, 17]

After backtrack at level 7
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 17]


Invert decision for 17 at level 6


New level: 7
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, 36), (17, -1), (18, 22), (19, -1), (20, 19), (21, 19), (22, 19), (23, 19), (24, 6), (25, 6), (26, 16), (27, 1), (28, -1), (29, 1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 7 among pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 16, 14, 12, 5, 28, 30, 6, 11, 9, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 16 with phase True at level 7

After decision at level 7
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]


New level: 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 26, 18, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, 168), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 37), (21, 29), (22, 37), (23, 37), (24, 16), (25, 16), (26, 0), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : {26, 18}

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, 37), (21, 29), (22, 37), (23, 37), (24, 16), (25, 16), (26, 0), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 37), (21, 29), (22, 37), (23, 37), (24, 16), (25, 16), (26, -1), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]


Solution : [0, 15, 1, 8, 16] has cost 54.


Before backtrack at level 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10]
 solution : [0, 15, 1, 8, 16]

After backtrack at level 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 16]


Invert decision for 16 at level 7


New level: 8
 pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 37), (21, 29), (22, 37), (23, 37), (24, 16), (25, 16), (26, -1), (27, 128), (28, 32), (29, 128), (30, 32), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 8 among pending : [21, 24, 25, 29, 27, 23, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [21, 24, 25, 29, 27, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]


New level: 9
 pending : [21, 24, 25, 29, 27, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]


Before reduction : 
 pending  : [21, 24, 25, 29, 27, 22, 20, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, 129), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : {20, 21, 22, 24, 25}

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, 0), (21, 0), (22, 0), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

Covered at level 9 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]


Solution : [0, 15, 1, 8, 23] has cost 54.


Before backtrack at level 9
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 23]

After backtrack at level 9
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 22, 20]
 solution : [0, 15, 1, 8, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 22, 20]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 22, 20]
 solution : [0, 15, 1, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 22, 20]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 9 among pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 22, 20]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 22 with phase True at level 9

After decision at level 9
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8, 22]


New level: 10
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8, 22]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, 129), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : {24, 25, 20, 21}

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 22]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 22]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, 0), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

Covered at level 10 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 22]


Solution : [0, 15, 1, 8, 22] has cost 54.


Before backtrack at level 10
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 22]

After backtrack at level 10
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8, 22]


Invert decision for 22 at level 9


New level: 10
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 16), (29, 1), (30, 16), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 10 among pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25, 20]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 20 with phase True at level 10

After decision at level 10
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 20]


New level: 11
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 20]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, 129), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 32), (29, 1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : {24, 25, 21}

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 20]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, 1), (28, 32), (29, 1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 32), (29, 1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 20]


Solution : [0, 15, 1, 8, 20] has cost 54.


Before backtrack at level 11
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18]
 solution : [0, 15, 1, 8, 20]

After backtrack at level 11
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 20]


Invert decision for 20 at level 10


New level: 11
 pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, 1), (28, 32), (29, 1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 11 : set()

After reduction : 
 pending  : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 11 among pending : [29, 27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 29 with phase True at level 11

After decision at level 11
 pending : [27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]


New level: 12
 pending : [27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [27, 3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, 128), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, 0), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : {27}

After reduction : 
 pending  : [3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, 0), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 12 : set()

After reduction : 
 pending  : [3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29]


Solution : [0, 15, 1, 8, 29] has cost 30.


Decide in level 12 among pending : [3, 2, 31, 33, 7, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 12

After decision at level 12
 pending : [3, 2, 31, 33, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


New level: 13
 pending : [3, 2, 31, 33, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Before reduction : 
 pending  : [3, 2, 31, 33, 14, 12, 5, 28, 30, 6, 11, 9, 10, 26, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 13 : {33, 2, 3, 10, 11, 12, 14, 26, 31}

After reduction : 
 pending  : [5, 28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Before reduction : 
 pending  : [5, 28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [5, 28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Solution : [0, 15, 1, 8, 29, 7] has cost 36.


Decide in level 13 among pending : [5, 28, 30, 6, 9, 18, 21, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 5]


New level: 14
 pending : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 5]


Before reduction : 
 pending  : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {6, 9, 18, 21, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 5]


Solution : [0, 15, 1, 8, 29, 7, 5] has cost 49.


Before backtrack at level 14
 pending : []
 solution : [0, 15, 1, 8, 29, 7, 5]

After backtrack at level 14
 pending : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Before reduction : 
 pending  : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [28, 30, 6, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Solution : [0, 15, 1, 8, 29, 7] has cost 36.


Decide in level 14 among pending : [28, 30, 6, 9, 18, 21, 24, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 6]


New level: 15
 pending : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 6]


Before reduction : 
 pending  : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {9, 18, 21, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 6]


Solution : [0, 15, 1, 8, 29, 7, 6] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 8, 29, 7, 6]

After backtrack at level 15
 pending : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Before reduction : 
 pending  : [28, 30, 9, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]

Essensial at level 15 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {18, 21, 24, 25, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 7, 9]


Solution : [0, 15, 1, 8, 29, 7, 9] has cost 42.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 8, 29, 7, 9]

After backtrack at level 15
 pending : [9, 28, 30, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]


Before backtrack at level 14
 pending : [9, 28, 30, 18, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 7]

After backtrack at level 14
 pending : [9, 28, 30, 18, 21, 24, 25, 6]
 solution : [0, 15, 1, 8, 29, 7]


Before backtrack at level 13
 pending : [9, 28, 30, 18, 21, 24, 25, 6]
 solution : [0, 15, 1, 8, 29, 7]

After backtrack at level 13
 pending : [9, 28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29, 7]


Invert decision for 7 at level 12


New level: 13
 pending : [9, 28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [9, 28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [9, 28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29]


Solution : [0, 15, 1, 8, 29] has cost 30.


Decide in level 13 among pending : [9, 28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29, 9]


New level: 14
 pending : [28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29, 9]


Before reduction : 
 pending  : [28, 30, 18, 21, 24, 25, 6, 3, 2, 31, 33, 14, 12, 11, 10, 26, 5]
 solution : [0, 15, 1, 8, 29, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : {28, 5, 30, 6}

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 31, 33, 14, 12, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 31, 33, 14, 12, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 31, 33, 14, 12, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9]


Solution : [0, 15, 1, 8, 29, 9] has cost 36.


Decide in level 14 among pending : [18, 21, 24, 25, 3, 2, 31, 33, 14, 12, 11, 10, 26]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [18, 21, 24, 25, 3, 2, 31, 33, 14, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]


New level: 15
 pending : [18, 21, 24, 25, 3, 2, 31, 33, 14, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 31, 33, 14, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 14, 31}

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]


Solution : [0, 15, 1, 8, 29, 9, 12] has cost 41.


Before backtrack at level 15
 pending : [18, 21, 24, 25, 3, 2, 11, 10, 26]
 solution : [0, 15, 1, 8, 29, 9, 12]

After backtrack at level 15
 pending : [18, 21, 24, 25, 3, 2, 11, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [18, 21, 24, 25, 3, 2, 11, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 11, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 11, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]


Solution : [0, 15, 1, 8, 29, 9] has cost 36.


Decide in level 15 among pending : [18, 21, 24, 25, 3, 2, 11, 10, 26, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 15

After decision at level 15
 pending : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 11]


New level: 16
 pending : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 11]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 16 : {33, 2, 3, 10, 14, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 11]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 11]


Solution : [0, 15, 1, 8, 29, 9, 11] has cost 42.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 29, 9, 11]

After backtrack at level 16
 pending : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 11]


Invert decision for 11 at level 15


New level: 16
 pending : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]


Solution : [0, 15, 1, 8, 29, 9] has cost 36.


Decide in level 16 among pending : [18, 21, 24, 25, 3, 2, 10, 26, 31, 33, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 10]


New level: 17
 pending : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 10]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 3, 14, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 9, 10]


Solution : [0, 15, 1, 8, 29, 9, 10] has cost 49.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 29, 9, 10]

After backtrack at level 17
 pending : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]


Before reduction : 
 pending  : [18, 21, 24, 25, 3, 2, 26, 31, 33, 14]
 solution : [0, 15, 1, 8, 29, 9]

Essensial at level 17 : {21, 14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 18, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 29, 9, 21, 14]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 29, 9, 21, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 29, 9, 21, 14]


Solution : [0, 15, 1, 8, 29, 9, 21, 14] has cost 72.


Before backtrack at level 17
 pending : [3, 2]
 solution : [0, 15, 1, 8, 29, 9, 21, 14]

After backtrack at level 17
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33]
 solution : [0, 15, 1, 8, 29, 9]


Before backtrack at level 16
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33]
 solution : [0, 15, 1, 8, 29, 9]

After backtrack at level 16
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10]
 solution : [0, 15, 1, 8, 29, 9]


Before backtrack at level 15
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10]
 solution : [0, 15, 1, 8, 29, 9]

After backtrack at level 15
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 29, 9]


Before backtrack at level 14
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 29, 9]

After backtrack at level 14
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29]


Solution : [0, 15, 1, 8, 29] has cost 30.


Decide in level 14 among pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 10, 11, 28, 30, 6, 5, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 14

After decision at level 14
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29, 10]


New level: 15
 pending : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29, 10]


Before reduction : 
 pending  : [3, 2, 21, 14, 18, 24, 25, 26, 31, 33, 11, 28, 30, 6, 5, 12]
 solution : [0, 15, 1, 8, 29, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 2, 3, 11, 12, 14, 26, 31}

After reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 29, 10]


Before reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 29, 10]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 29, 10]


Solution : [0, 15, 1, 8, 29, 10] has cost 43.


Before backtrack at level 15
 pending : [21, 18, 24, 25, 28, 30, 6, 5]
 solution : [0, 15, 1, 8, 29, 10]

After backtrack at level 15
 pending : [21, 18, 24, 25, 28, 30, 6, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 10]


Invert decision for 10 at level 14


New level: 15
 pending : [21, 18, 24, 25, 28, 30, 6, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 6, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 6, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29]


Solution : [0, 15, 1, 8, 29] has cost 30.


Decide in level 15 among pending : [21, 18, 24, 25, 28, 30, 6, 5, 3, 2, 14, 26, 31, 33, 11, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [21, 18, 24, 25, 28, 30, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]


New level: 16
 pending : [21, 18, 24, 25, 28, 30, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]


Before reduction : 
 pending  : [21, 18, 24, 25, 28, 30, 5, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {28, 5, 30}

After reduction : 
 pending  : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]


Before reduction : 
 pending  : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 11, 12]
 solution : [0, 15, 1, 8, 29, 6]


Solution : [0, 15, 1, 8, 29, 6] has cost 36.


Decide in level 16 among pending : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 11, 12]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 16

After decision at level 16
 pending : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 11]


New level: 17
 pending : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 11]


Before reduction : 
 pending  : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 3, 12, 14, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 6, 11]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 29, 6, 11]


Solution : [0, 15, 1, 8, 29, 6, 11] has cost 42.


Before backtrack at level 17
 pending : []
 solution : [0, 15, 1, 8, 29, 6, 11]

After backtrack at level 17
 pending : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 11]


Invert decision for 11 at level 16


New level: 17
 pending : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6]


Before reduction : 
 pending  : [21, 18, 24, 25, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6]

Essensial at level 17 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : {24, 25}

After reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 21]


Before reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 21]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 21]


Solution : [0, 15, 1, 8, 29, 6, 21] has cost 70.


Before backtrack at level 17
 pending : [18, 3, 2, 14, 26, 31, 33, 12]
 solution : [0, 15, 1, 8, 29, 6, 21]

After backtrack at level 17
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 6]


Before backtrack at level 16
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25]
 solution : [0, 15, 1, 8, 29, 6]

After backtrack at level 16
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 28, 30, 5, 11]
 solution : [0, 15, 1, 8, 29, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 28, 30, 5, 11]
 solution : [0, 15, 1, 8, 29]


Before reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 28, 30, 5, 11]
 solution : [0, 15, 1, 8, 29]

Essensial at level 16 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 5), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {28, 30}

After reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11]
 solution : [0, 15, 1, 8, 29, 5]


Before reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11]
 solution : [0, 15, 1, 8, 29, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11]
 solution : [0, 15, 1, 8, 29, 5]


Solution : [0, 15, 1, 8, 29, 5] has cost 43.


Before backtrack at level 16
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11]
 solution : [0, 15, 1, 8, 29, 5]

After backtrack at level 16
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30]
 solution : [0, 15, 1, 8, 29]


Before backtrack at level 15
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30]
 solution : [0, 15, 1, 8, 29]

After backtrack at level 15
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6]
 solution : [0, 15, 1, 8, 29]


Before backtrack at level 14
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6]
 solution : [0, 15, 1, 8, 29]

After backtrack at level 14
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 29]


Before backtrack at level 13
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 29]

After backtrack at level 13
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9]
 solution : [0, 15, 1, 8, 29]


Before backtrack at level 12
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9]
 solution : [0, 15, 1, 8, 29]

After backtrack at level 12
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 29]


Invert decision for 29 at level 11


New level: 12
 pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 12 : set()

After reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 12 among pending : [18, 3, 2, 14, 26, 31, 33, 12, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [18, 3, 2, 14, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]


New level: 13
 pending : [18, 3, 2, 14, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]


Before reduction : 
 pending  : [18, 3, 2, 14, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, 128), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : {14}

After reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]


Before reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 13 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12]


Solution : [0, 15, 1, 8, 12] has cost 25.


Decide in level 13 among pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 5, 28, 30, 6, 10, 9, 27, 7]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]


New level: 14
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]


Before reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 28, 30, 6, 10, 9, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, 128), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : {9, 28, 30, 6}

After reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]


Before reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]


Solution : [0, 15, 1, 8, 12, 5] has cost 38.


Before backtrack at level 14
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7]
 solution : [0, 15, 1, 8, 12, 5]

After backtrack at level 14
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12]


Before reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 14 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12]


Solution : [0, 15, 1, 8, 12] has cost 25.


Decide in level 14 among pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 27, 7, 28, 30, 6, 9]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 27 with phase True at level 14

After decision at level 14
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]


New level: 15
 pending : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]


Before reduction : 
 pending  : [18, 3, 2, 26, 31, 33, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 15 : {33, 31}

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]
 solution : [0, 15, 1, 8, 12, 27]


Solution : [0, 15, 1, 8, 12, 27] has cost 35.


Decide in level 15 among pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 6, 9]

Coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27, 6]


New level: 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27, 6]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 2), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {9, 28, 30}

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 6]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, 0), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 6]


Solution : [0, 15, 1, 8, 12, 27, 6] has cost 41.


Before backtrack at level 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 6]

After backtrack at level 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 9]
 solution : [0, 15, 1, 8, 12, 27]

Essensial at level 16 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {28, 30}

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 9]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 69), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 9]


Solution : [0, 15, 1, 8, 12, 27, 9] has cost 41.


Before backtrack at level 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 27, 9]

After backtrack at level 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30]
 solution : [0, 15, 1, 8, 12, 27]


Before backtrack at level 15
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30]
 solution : [0, 15, 1, 8, 12, 27]

After backtrack at level 15
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12, 27]


Invert decision for 27 at level 14


New level: 15
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 8), (3, 8), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 9), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Covered at level 15 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12]


Solution : [0, 15, 1, 8, 12] has cost 25.


Decide in level 15 among pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 9, 28, 30, 31, 33, 6]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12, 9]


New level: 16
 pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 28, 30, 31, 33, 6]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 128), (7, 32), (8, -1), (9, 128), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {28, 30, 6}

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, 0), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Solution : [0, 15, 1, 8, 12, 9] has cost 31.


Decide in level 16 among pending : [18, 3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 18 with phase True at level 16

After decision at level 16
 pending : [3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]


New level: 17
 pending : [3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]


Before reduction : 
 pending  : [3, 2, 26, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 17 : {26}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]


Solution : [0, 15, 1, 8, 12, 9, 18] has cost 65.


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 18]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33, 26]
 solution : [0, 15, 1, 8, 12, 9, 18]


Invert decision for 18 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33, 26]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33, 26]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33, 26]
 solution : [0, 15, 1, 8, 12, 9]


Solution : [0, 15, 1, 8, 12, 9] has cost 31.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]


New level: 18
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]


Solution : [0, 15, 1, 8, 12, 9, 26] has cost 41.


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 26]


Invert decision for 26 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Solution : [0, 15, 1, 8, 12, 9] has cost 31.


Decide in level 18 among pending : [3, 2, 21, 24, 25, 11, 10, 7, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 11]


New level: 19
 pending : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 7, 10, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 11]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 11]


Solution : [0, 15, 1, 8, 12, 9, 11] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 12, 9, 11]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 11]


Invert decision for 11 at level 18


New level: 19
 pending : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 10, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Solution : [0, 15, 1, 8, 12, 9] has cost 31.


Decide in level 19 among pending : [3, 2, 21, 24, 25, 10, 7, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 19

After decision at level 19
 pending : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 10]


New level: 20
 pending : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 3, 7, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 10]


Solution : [0, 15, 1, 8, 12, 9, 10] has cost 44.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 8, 12, 9, 10]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 10]


Invert decision for 10 at level 19


New level: 20
 pending : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 7, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Solution : [0, 15, 1, 8, 12, 9] has cost 31.


Decide in level 20 among pending : [3, 2, 21, 24, 25, 7, 31, 33]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 20

After decision at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 7]


New level: 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 7]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 2, 3, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 7]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 9, 7]


Solution : [0, 15, 1, 8, 12, 9, 7] has cost 37.


Before backtrack at level 21
 pending : []
 solution : [0, 15, 1, 8, 12, 9, 7]

After backtrack at level 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9, 7]


Invert decision for 7 at level 20


New level: 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

Essensial at level 21 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {24, 25, 33, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 9, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 9, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 9, 21]


Solution : [0, 15, 1, 8, 12, 9, 21] has cost 65.


Before backtrack at level 21
 pending : [3, 2]
 solution : [0, 15, 1, 8, 12, 9, 21]

After backtrack at level 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]


Before backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 9]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 12, 9]


Before backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7]
 solution : [0, 15, 1, 8, 12, 9]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10]
 solution : [0, 15, 1, 8, 12, 9]


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10]
 solution : [0, 15, 1, 8, 12, 9]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 9]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 9]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 9]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 9]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 12, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 12]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 28, 30, 6, 18]
 solution : [0, 15, 1, 8, 12]

Essensial at level 16 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : {28, 30}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 18]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 18]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 18]
 solution : [0, 15, 1, 8, 12, 6]


Solution : [0, 15, 1, 8, 12, 6] has cost 31.


Decide in level 16 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26, 18]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 18 with phase True at level 16

After decision at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6, 18]


New level: 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 17 : {26}

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 18]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 18]


Solution : [0, 15, 1, 8, 12, 6, 18] has cost 65.


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 18]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6, 18]


Invert decision for 18 at level 16


New level: 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 6), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]
 solution : [0, 15, 1, 8, 12, 6]


Solution : [0, 15, 1, 8, 12, 6] has cost 31.


Decide in level 17 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11, 26]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 26 with phase True at level 17

After decision at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]


Solution : [0, 15, 1, 8, 12, 6, 26] has cost 41.


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 26]


Invert decision for 26 at level 17


New level: 18
 pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 19), (22, -1), (23, -1), (24, 8), (25, 8), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 4), (32, -1), (33, 4)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]


Solution : [0, 15, 1, 8, 12, 6] has cost 31.


Decide in level 18 among pending : [3, 2, 21, 24, 25, 31, 33, 7, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 7 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 7]


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 7]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, 32), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 10, 11, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 7]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 7]


Solution : [0, 15, 1, 8, 12, 6, 7] has cost 37.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 12, 6, 7]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6, 7]


Invert decision for 7 at level 18


New level: 19
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 11]
 solution : [0, 15, 1, 8, 12, 6]


Solution : [0, 15, 1, 8, 12, 6] has cost 31.


Decide in level 19 among pending : [3, 2, 21, 24, 25, 31, 33, 10, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 19

After decision at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6, 10]


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6, 10]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 20 : {33, 2, 3, 11, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 10]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 10]


Solution : [0, 15, 1, 8, 12, 6, 10] has cost 44.


Before backtrack at level 20
 pending : []
 solution : [0, 15, 1, 8, 12, 6, 10]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6, 10]


Invert decision for 10 at level 19


New level: 20
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 20 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6]


Solution : [0, 15, 1, 8, 12, 6] has cost 31.


Decide in level 20 among pending : [3, 2, 21, 24, 25, 31, 33, 11]

Coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Decide 11 with phase True at level 20

After decision at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6, 11]


New level: 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6, 11]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 16), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {33, 2, 3, 21, 24, 25, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 11]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 11]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 12, 6, 11]


Solution : [0, 15, 1, 8, 12, 6, 11] has cost 37.


Before backtrack at level 21
 pending : []
 solution : [0, 15, 1, 8, 12, 6, 11]

After backtrack at level 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6, 11]


Invert decision for 11 at level 20


New level: 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6]

Essensial at level 21 : {21}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 21 : {24, 25, 33, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 6, 21]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 6, 21]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 12, 6, 21]


Solution : [0, 15, 1, 8, 12, 6, 21] has cost 65.


Before backtrack at level 21
 pending : [3, 2]
 solution : [0, 15, 1, 8, 12, 6, 21]

After backtrack at level 21
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6]


Before backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33]
 solution : [0, 15, 1, 8, 12, 6]

After backtrack at level 20
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6]


Before backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 11]
 solution : [0, 15, 1, 8, 12, 6]

After backtrack at level 19
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 12, 6]


Before backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10]
 solution : [0, 15, 1, 8, 12, 6]

After backtrack at level 18
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 6]


Before backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7]
 solution : [0, 15, 1, 8, 12, 6]

After backtrack at level 17
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26]
 solution : [0, 15, 1, 8, 12, 6]


Before backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26]
 solution : [0, 15, 1, 8, 12, 6]

After backtrack at level 16
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18]
 solution : [0, 15, 1, 8, 12]


Before backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18]
 solution : [0, 15, 1, 8, 12]

After backtrack at level 15
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9]
 solution : [0, 15, 1, 8, 12]


Before backtrack at level 14
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9]
 solution : [0, 15, 1, 8, 12]

After backtrack at level 14
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27]
 solution : [0, 15, 1, 8, 12]


Before backtrack at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27]
 solution : [0, 15, 1, 8, 12]

After backtrack at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, 1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 13 : set()

After reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 13 among pending : [3, 2, 21, 24, 25, 31, 33, 11, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 11 with phase True at level 13

After decision at level 13
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8, 11]


New level: 14
 pending : [3, 2, 21, 24, 25, 31, 33, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8, 11]


Before reduction : 
 pending  : [3, 2, 21, 24, 25, 31, 33, 10, 7, 26, 6, 28, 30, 18, 9, 27, 14, 5]
 solution : [0, 15, 1, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, 128), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 128), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 14 : {33, 2, 3, 7, 10, 14, 31}

After reduction : 
 pending  : [21, 24, 25, 26, 6, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]


Before reduction : 
 pending  : [21, 24, 25, 26, 6, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 128), (6, 128), (7, 0), (8, -1), (9, 128), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 128), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [21, 24, 25, 26, 6, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]


Solution : [0, 15, 1, 8, 11] has cost 26.


Decide in level 14 among pending : [21, 24, 25, 26, 6, 28, 30, 18, 9, 27, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11, 6]


New level: 15
 pending : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11, 6]


Before reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 128), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {5, 9, 18, 21, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 6]


Solution : [0, 15, 1, 8, 11, 6] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 15, 1, 8, 11, 6]

After backtrack at level 15
 pending : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]


Before reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]
 solution : [0, 15, 1, 8, 11]


Solution : [0, 15, 1, 8, 11] has cost 26.


Decide in level 15 among pending : [21, 24, 25, 26, 28, 30, 18, 9, 27, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11, 9]


New level: 16
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11, 9]


Before reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, 32), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {5, 18, 21, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 9]


Solution : [0, 15, 1, 8, 11, 9] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 11, 9]

After backtrack at level 16
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11]


Before reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 27, 5]
 solution : [0, 15, 1, 8, 11]

Essensial at level 16 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {18, 21, 24, 25, 26, 27, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 11, 5]


Solution : [0, 15, 1, 8, 11, 5] has cost 39.


Before backtrack at level 16
 pending : []
 solution : [0, 15, 1, 8, 11, 5]

After backtrack at level 16
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27]
 solution : [0, 15, 1, 8, 11]


Before backtrack at level 15
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27]
 solution : [0, 15, 1, 8, 11]

After backtrack at level 15
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9]
 solution : [0, 15, 1, 8, 11]


Before backtrack at level 14
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9]
 solution : [0, 15, 1, 8, 11]

After backtrack at level 14
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8, 11]


Invert decision for 11 at level 13


New level: 14
 pending : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 14 : set()

After reduction : 
 pending  : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 14 among pending : [5, 21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8, 5]


New level: 15
 pending : [21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8, 5]


Before reduction : 
 pending  : [21, 24, 25, 26, 28, 30, 18, 27, 9, 3, 2, 31, 33, 10, 7, 14, 6]
 solution : [0, 15, 1, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, 128), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, 0), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : {9, 28, 30, 6}

After reduction : 
 pending  : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14]
 solution : [0, 15, 1, 8, 5]


Before reduction : 
 pending  : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14]
 solution : [0, 15, 1, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, 0), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14]
 solution : [0, 15, 1, 8, 5]


Solution : [0, 15, 1, 8, 5] has cost 33.


Before backtrack at level 15
 pending : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14]
 solution : [0, 15, 1, 8, 5]

After backtrack at level 15
 pending : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, 8), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 15 : set()

After reduction : 
 pending  : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 15 among pending : [21, 24, 25, 26, 18, 27, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 27 with phase True at level 15

After decision at level 15
 pending : [21, 24, 25, 26, 18, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27]


New level: 16
 pending : [21, 24, 25, 26, 18, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27]


Before reduction : 
 pending  : [21, 24, 25, 26, 18, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, 128), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 24, 25, 26, 18, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27]


Solution : [0, 15, 1, 8, 27] has cost 30.


Decide in level 16 among pending : [21, 24, 25, 26, 18, 3, 2, 31, 33, 10, 7, 14, 28, 30, 9, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [21, 24, 25, 26, 18, 3, 2, 31, 33, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]


New level: 17
 pending : [21, 24, 25, 26, 18, 3, 2, 31, 33, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]


Before reduction : 
 pending  : [21, 24, 25, 26, 18, 3, 2, 31, 33, 7, 14, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 3, 7, 14, 26, 31}

After reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]


Before reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, 0), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, 0), (27, -1), (28, 8), (29, -1), (30, 8), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]


Solution : [0, 15, 1, 8, 27, 10] has cost 43.


Before backtrack at level 17
 pending : [21, 24, 25, 18, 28, 30, 9, 6]
 solution : [0, 15, 1, 8, 27, 10]

After backtrack at level 17
 pending : [21, 24, 25, 18, 28, 30, 9, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [21, 24, 25, 18, 28, 30, 9, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27]


Before reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 9, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 2), (19, -1), (20, -1), (21, 10), (22, -1), (23, -1), (24, 4), (25, 4), (26, -1), (27, -1), (28, 8), (29, -1), (30, 8), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 9, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27]


Solution : [0, 15, 1, 8, 27] has cost 30.


Decide in level 17 among pending : [21, 24, 25, 18, 28, 30, 9, 6, 26, 3, 2, 31, 33, 7, 14]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

Decide 9 with phase True at level 17

After decision at level 17
 pending : [21, 24, 25, 18, 28, 30, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]


New level: 18
 pending : [21, 24, 25, 18, 28, 30, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 28, 30, 6, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 70), (19, -1), (20, -1), (21, 80), (22, -1), (23, -1), (24, 18), (25, 18), (26, 16), (27, -1), (28, 8), (29, -1), (30, 8), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : {28, 30, 6}

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]


Solution : [0, 15, 1, 8, 27, 9] has cost 36.


Before backtrack at level 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 9]

After backtrack at level 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 28, 30, 6]
 solution : [0, 15, 1, 8, 27, 9]


Invert decision for 9 at level 17


New level: 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 28, 30, 6]
 solution : [0, 15, 1, 8, 27]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 28, 30, 6]
 solution : [0, 15, 1, 8, 27]

Essensial at level 18 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : {28, 30}

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 6]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, 0), (29, -1), (30, 0), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 6]


Solution : [0, 15, 1, 8, 27, 6] has cost 36.


Before backtrack at level 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14]
 solution : [0, 15, 1, 8, 27, 6]

After backtrack at level 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30]
 solution : [0, 15, 1, 8, 27]


Before backtrack at level 17
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30]
 solution : [0, 15, 1, 8, 27]

After backtrack at level 17
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9]
 solution : [0, 15, 1, 8, 27]


Before backtrack at level 16
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9]
 solution : [0, 15, 1, 8, 27]

After backtrack at level 16
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 27]


Invert decision for 27 at level 15


New level: 16
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 22), (19, -1), (20, -1), (21, 18), (22, -1), (23, -1), (24, 4), (25, 4), (26, 16), (27, -1), (28, -1), (29, -1), (30, -1), (31, 8), (32, -1), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 16 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 16 among pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 7, 14, 6, 28, 30, 9, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 7 with phase True at level 16

After decision at level 16
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 7]


New level: 17
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 7]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 6, 28, 30, 9, 10]
 solution : [0, 15, 1, 8, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, 128), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, -1), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

Covered at level 17 : {33, 2, 3, 10, 14, 31}

After reduction : 
 pending  : [21, 24, 25, 18, 26, 6, 28, 30, 9]
 solution : [0, 15, 1, 8, 7]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 6, 28, 30, 9]
 solution : [0, 15, 1, 8, 7]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, -1), (28, 32), (29, -1), (30, 32), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 6, 28, 30, 9]
 solution : [0, 15, 1, 8, 7]


Solution : [0, 15, 1, 8, 7] has cost 26.


Decide in level 17 among pending : [21, 24, 25, 18, 26, 6, 28, 30, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 17

After decision at level 17
 pending : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7, 6]


New level: 18
 pending : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7, 6]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 13), (19, -1), (20, -1), (21, 25), (22, -1), (23, -1), (24, 16), (25, 16), (26, 4), (27, -1), (28, 32), (29, -1), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {9, 18, 21, 24, 25, 26, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 6]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 6]


Solution : [0, 15, 1, 8, 7, 6] has cost 32.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 7, 6]

After backtrack at level 18
 pending : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7, 6]


Invert decision for 6 at level 17


New level: 18
 pending : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 28, 30, 9]
 solution : [0, 15, 1, 8, 7]

Essensial at level 18 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {18, 21, 24, 25, 26, 28, 30}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 7, 9]


Solution : [0, 15, 1, 8, 7, 9] has cost 32.


Before backtrack at level 18
 pending : []
 solution : [0, 15, 1, 8, 7, 9]

After backtrack at level 18
 pending : [9, 21, 24, 25, 18, 26, 28, 30]
 solution : [0, 15, 1, 8, 7]


Before backtrack at level 17
 pending : [9, 21, 24, 25, 18, 26, 28, 30]
 solution : [0, 15, 1, 8, 7]

After backtrack at level 17
 pending : [9, 21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8, 7]


Invert decision for 7 at level 16


New level: 17
 pending : [9, 21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [9, 21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Covered at level 17 : set()

After reduction : 
 pending  : [9, 21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8]


Solution : [0, 15, 1, 8] has cost 20.


Decide in level 17 among pending : [9, 21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

Decide 9 with phase True at level 17

After decision at level 17
 pending : [21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8, 9]


New level: 18
 pending : [21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 28, 30, 3, 2, 31, 33, 14, 10, 6]
 solution : [0, 15, 1, 8, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 112), (19, -1), (20, -1), (21, 113), (22, -1), (23, -1), (24, 52), (25, 52), (26, 64), (27, -1), (28, 32), (29, -1), (30, 32), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : {28, 30, 6}

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 10]
 solution : [0, 15, 1, 8, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 10]
 solution : [0, 15, 1, 8, 9]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 10]
 solution : [0, 15, 1, 8, 9]


Solution : [0, 15, 1, 8, 9] has cost 26.


Decide in level 18 among pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 10 with phase True at level 18

After decision at level 18
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9, 10]


New level: 19
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9, 10]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 14, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 9, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 9, 10]


Solution : [0, 15, 1, 8, 9, 10] has cost 39.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 9, 10]

After backtrack at level 19
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9, 10]


Invert decision for 10 at level 18


New level: 19
 pending : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 3, 2, 31, 33, 14]
 solution : [0, 15, 1, 8, 9]

Essensial at level 19 : {21, 14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 18, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 9, 21, 14]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 9, 21, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 9, 21, 14]


Solution : [0, 15, 1, 8, 9, 21, 14] has cost 62.


Before backtrack at level 19
 pending : [3, 2]
 solution : [0, 15, 1, 8, 9, 21, 14]

After backtrack at level 19
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 9]


Before backtrack at level 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 9]

After backtrack at level 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 28, 30, 6, 10]
 solution : [0, 15, 1, 8, 9]


Invert decision for 9 at level 17


New level: 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 28, 30, 6, 10]
 solution : [0, 15, 1, 8]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 28, 30, 6, 10]
 solution : [0, 15, 1, 8]

Essensial at level 18 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : {28, 30}

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10]
 solution : [0, 15, 1, 8, 6]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10]
 solution : [0, 15, 1, 8, 6]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, 0), (29, -1), (30, 0), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Covered at level 18 : set()

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10]
 solution : [0, 15, 1, 8, 6]


Solution : [0, 15, 1, 8, 6] has cost 26.


Decide in level 18 among pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10]

Coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

Decide 10 with phase True at level 18

After decision at level 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6, 10]


New level: 19
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6, 10]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 128), (11, -1), (12, -1), (13, -1), (14, 64), (15, -1), (16, -1), (17, -1), (18, 85), (19, -1), (20, -1), (21, 26), (22, -1), (23, -1), (24, 12), (25, 12), (26, 64), (27, -1), (28, -1), (29, -1), (30, -1), (31, 32), (32, -1), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 2, 3, 14, 18, 21, 24, 25, 26, 31}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 6, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 6, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 8, 6, 10]


Solution : [0, 15, 1, 8, 6, 10] has cost 39.


Before backtrack at level 19
 pending : []
 solution : [0, 15, 1, 8, 6, 10]

After backtrack at level 19
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6, 10]


Invert decision for 10 at level 18


New level: 19
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6]

Essensial at level 19 : {21, 14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

Covered at level 19 : {33, 18, 24, 25, 26, 31}

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 6, 21, 14]


Before reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 6, 21, 14]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, -1), (28, -1), (29, -1), (30, -1), (31, 0), (32, -1), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [3, 2]
 solution : [0, 15, 1, 8, 6, 21, 14]


Solution : [0, 15, 1, 8, 6, 21, 14] has cost 62.


Before backtrack at level 19
 pending : [3, 2]
 solution : [0, 15, 1, 8, 6, 21, 14]

After backtrack at level 19
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6]


Before backtrack at level 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33]
 solution : [0, 15, 1, 8, 6]

After backtrack at level 18
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10]
 solution : [0, 15, 1, 8]


Before backtrack at level 17
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10]
 solution : [0, 15, 1, 8]

After backtrack at level 17
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9]
 solution : [0, 15, 1, 8]


Before backtrack at level 16
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9]
 solution : [0, 15, 1, 8]

After backtrack at level 16
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7]
 solution : [0, 15, 1, 8]


Before backtrack at level 15
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7]
 solution : [0, 15, 1, 8]

After backtrack at level 15
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27]
 solution : [0, 15, 1, 8]


Before backtrack at level 14
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27]
 solution : [0, 15, 1, 8]

After backtrack at level 14
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5]
 solution : [0, 15, 1, 8]


Before backtrack at level 13
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5]
 solution : [0, 15, 1, 8]

After backtrack at level 13
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11]
 solution : [0, 15, 1, 8]


Before backtrack at level 12
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11]
 solution : [0, 15, 1, 8]

After backtrack at level 12
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12]
 solution : [0, 15, 1, 8]


Before backtrack at level 11
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12]
 solution : [0, 15, 1, 8]

After backtrack at level 11
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29]
 solution : [0, 15, 1, 8]


Before backtrack at level 10
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29]
 solution : [0, 15, 1, 8]

After backtrack at level 10
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20]
 solution : [0, 15, 1, 8]


Before backtrack at level 9
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20]
 solution : [0, 15, 1, 8]

After backtrack at level 9
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22]
 solution : [0, 15, 1, 8]


Before backtrack at level 8
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22]
 solution : [0, 15, 1, 8]

After backtrack at level 8
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23]
 solution : [0, 15, 1, 8]


Before backtrack at level 7
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23]
 solution : [0, 15, 1, 8]

After backtrack at level 7
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16]
 solution : [0, 15, 1, 8]


Before backtrack at level 6
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16]
 solution : [0, 15, 1, 8]

After backtrack at level 6
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17]
 solution : [0, 15, 1, 8]


Before backtrack at level 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17]
 solution : [0, 15, 1, 8]

After backtrack at level 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19]
 solution : [0, 15, 1, 8]


Before backtrack at level 4
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19]
 solution : [0, 15, 1, 8]

After backtrack at level 4
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13]
 solution : [0, 15, 1, 8]


Before backtrack at level 3
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13]
 solution : [0, 15, 1, 8]

After backtrack at level 3
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32, 4]
 solution : [0, 15, 1, 8]


Invert decision for 8 at level 2


New level: 3
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32, 4]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32, 4]
 solution : [0, 15, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, 2), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32, 4]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 3 among pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32, 4]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 4 with phase True at level 3

After decision at level 3
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4]


New level: 4
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, 576), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 16), (17, 48), (18, 64), (19, 24), (20, 68), (21, 136), (22, 22), (23, 44), (24, 26), (25, 48), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4]


Solution : [0, 15, 1, 4] has cost 31.


Decide in level 4 among pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 9, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 16), (17, 48), (18, 64), (19, 24), (20, 68), (21, 136), (22, 22), (23, 44), (24, 26), (25, 48), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4, 9]


New level: 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4, 9]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 6, 28, 30, 10, 7, 27, 5, 11, 12, 29, 20, 22, 23, 16, 17, 19, 13, 32]
 solution : [0, 15, 1, 4, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 16), (17, 48), (18, 64), (19, 24), (20, 68), (21, 136), (22, 22), (23, 44), (24, 26), (25, 48), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 0), (6, 0), (7, 512), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 4), (17, 0), (18, 16), (19, 0), (20, 16), (21, 32), (22, 5), (23, 10), (24, 6), (25, 12), (26, 4), (27, 4), (28, 0), (29, 8), (30, 0), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : {5, 6, 17, 19, 28, 30}

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32]
 solution : [0, 15, 1, 4, 9]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32]
 solution : [0, 15, 1, 4, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 0), (6, 0), (7, 512), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 4), (17, 0), (18, 16), (19, 0), (20, 16), (21, 32), (22, 5), (23, 10), (24, 6), (25, 12), (26, 4), (27, 4), (28, 0), (29, 8), (30, 0), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 4), (17, -1), (18, 16), (19, -1), (20, 16), (21, 32), (22, 5), (23, 10), (24, 6), (25, 12), (26, 4), (27, 4), (28, -1), (29, 8), (30, -1), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32]
 solution : [0, 15, 1, 4, 9]


Solution : [0, 15, 1, 4, 9] has cost 37.


Before backtrack at level 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32]
 solution : [0, 15, 1, 4, 9]

After backtrack at level 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 5, 17, 19]
 solution : [0, 15, 1, 4, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 5, 17, 19]
 solution : [0, 15, 1, 4]


Before reduction : 
 pending  : [3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 7, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 5, 17, 19]
 solution : [0, 15, 1, 4]

Essensial at level 5 : {5, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 4), (17, -1), (18, 16), (19, -1), (20, 16), (21, 32), (22, 5), (23, 10), (24, 6), (25, 12), (26, 4), (27, 4), (28, -1), (29, 8), (30, -1), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 5 : {2, 3, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5, 7]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 4, 5, 7]


Solution : [0, 15, 1, 4, 5, 7] has cost 50.


Before backtrack at level 5
 pending : []
 solution : [0, 15, 1, 4, 5, 7]

After backtrack at level 5
 pending : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 4]


Before backtrack at level 4
 pending : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 4]

After backtrack at level 4
 pending : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 4]


Invert decision for 4 at level 3


New level: 4
 pending : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1]


Solution : [0, 15, 1] has cost 10.


Decide in level 4 among pending : [7, 5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

Decide 7 with phase True at level 4

After decision at level 4
 pending : [5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]


New level: 5
 pending : [5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]


Before reduction : 
 pending  : [5, 3, 2, 21, 14, 24, 25, 18, 26, 31, 33, 10, 27, 11, 12, 29, 20, 22, 23, 16, 13, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 320), (6, 128), (7, 512), (8, -1), (9, 512), (10, 264), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 192), (17, 384), (18, 384), (19, 192), (20, 232), (21, 456), (22, 136), (23, 260), (24, 64), (25, 112), (26, 64), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 288), (6, 128), (7, -1), (8, -1), (9, 512), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 43), (17, 384), (18, 96), (19, 192), (20, 54), (21, 100), (22, 25), (23, 50), (24, 28), (25, 28), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 8), (32, 32), (33, 2)]

Covered at level 5 : {2, 3, 10, 11, 12, 13, 14}

After reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]


Before reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, 288), (6, 128), (7, -1), (8, -1), (9, 512), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 43), (17, 384), (18, 96), (19, 192), (20, 54), (21, 100), (22, 25), (23, 50), (24, 28), (25, 28), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 8), (32, 32), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 288), (6, 128), (7, -1), (8, -1), (9, 512), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 43), (17, 384), (18, 96), (19, 192), (20, 54), (21, 100), (22, 25), (23, 50), (24, 28), (25, 28), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 8), (32, 32), (33, 2)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 9]
 solution : [0, 15, 1, 7]


Solution : [0, 15, 1, 7] has cost 16.


Decide in level 5 among pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 288), (6, 128), (7, -1), (8, -1), (9, 512), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 43), (17, 384), (18, 96), (19, 192), (20, 54), (21, 100), (22, 25), (23, 50), (24, 28), (25, 28), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 8), (32, 32), (33, 2)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7, 9]


New level: 6
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7, 9]


Before reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 288), (6, 128), (7, -1), (8, -1), (9, 512), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 43), (17, 384), (18, 96), (19, 192), (20, 54), (21, 100), (22, 25), (23, 50), (24, 28), (25, 28), (26, 16), (27, 128), (28, 64), (29, 256), (30, 128), (31, 8), (32, 32), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {5, 6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 9]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 9]


Solution : [0, 15, 1, 7, 9] has cost 22.


Before backtrack at level 6
 pending : []
 solution : [0, 15, 1, 7, 9]

After backtrack at level 6
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7]


Before reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7]

Essensial at level 6 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {6, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 5]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 7, 5]


Solution : [0, 15, 1, 7, 5] has cost 29.


Before backtrack at level 6
 pending : []
 solution : [0, 15, 1, 7, 5]

After backtrack at level 6
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7]


Before backtrack at level 5
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19]
 solution : [0, 15, 1, 7]

After backtrack at level 5
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 3, 2, 14, 10, 11, 12, 13, 9]
 solution : [0, 15, 1, 7]


Invert decision for 7 at level 4


New level: 5
 pending : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 3, 2, 14, 10, 11, 12, 13, 9]
 solution : [0, 15, 1]


Before reduction : 
 pending  : [5, 21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 6, 28, 30, 17, 19, 3, 2, 14, 10, 11, 12, 13, 9]
 solution : [0, 15, 1]

Essensial at level 5 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, 330), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, 0), (29, 32), (30, 0), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : {28, 5, 6, 30}

After reduction : 
 pending  : [21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, 330), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, 0), (29, 32), (30, 0), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, 330), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9]


Solution : [0, 15, 1, 9] has cost 16.


Decide in level 5 among pending : [21, 24, 25, 18, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, 330), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

Decide 18 with phase True at level 5

After decision at level 5
 pending : [21, 24, 25, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]


New level: 6
 pending : [21, 24, 25, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]


Before reduction : 
 pending  : [21, 24, 25, 26, 31, 33, 27, 29, 20, 22, 23, 16, 32, 17, 19, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, 330), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 257), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 12), (21, 24), (22, 6), (23, 12), (24, 4), (25, 8), (26, 0), (27, 2), (28, -1), (29, 4), (30, -1), (31, 64), (32, 8), (33, 16)]

Covered at level 6 : {16, 17, 26, 19}

After reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]


Before reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 257), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 12), (21, 24), (22, 6), (23, 12), (24, 4), (25, 8), (26, 0), (27, 2), (28, -1), (29, 4), (30, -1), (31, 64), (32, 8), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 257), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 12), (21, 24), (22, 6), (23, 12), (24, 4), (25, 8), (26, -1), (27, 2), (28, -1), (29, 4), (30, -1), (31, 64), (32, 8), (33, 16)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]


Solution : [0, 15, 1, 9, 18] has cost 50.


Before backtrack at level 6
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13]
 solution : [0, 15, 1, 9, 18]

After backtrack at level 6
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9, 18]


Invert decision for 18 at level 5


New level: 6
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 257), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 12), (21, 24), (22, 6), (23, 12), (24, 4), (25, 8), (26, -1), (27, 2), (28, -1), (29, 4), (30, -1), (31, 64), (32, 8), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, -1), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9]


Solution : [0, 15, 1, 9] has cost 16.


Decide in level 6 among pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 10, 11, 12, 13, 26, 16, 17, 19]

Coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, -1), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

Decide 10 with phase True at level 6

After decision at level 6
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9, 10]


New level: 7
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9, 10]


Before reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 64), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 258), (11, 128), (12, 128), (13, 256), (14, 64), (15, -1), (16, 150), (17, 12), (18, -1), (19, 6), (20, 48), (21, 104), (22, 26), (23, 52), (24, 12), (25, 24), (26, 64), (27, 16), (28, -1), (29, 32), (30, -1), (31, 256), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 7 : {2, 3, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 10]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 1, 9, 10]


Solution : [0, 15, 1, 9, 10] has cost 29.


Before backtrack at level 7
 pending : []
 solution : [0, 15, 1, 9, 10]

After backtrack at level 7
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9, 10]


Invert decision for 10 at level 6


New level: 7
 pending : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9]


Before reduction : 
 pending  : [21, 24, 25, 31, 33, 27, 29, 20, 22, 23, 32, 3, 2, 14, 11, 12, 13, 26, 16, 17, 19]
 solution : [0, 15, 1, 9]

Essensial at level 7 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 8), (13, 64), (14, 1), (15, -1), (16, 10), (17, 0), (18, -1), (19, 0), (20, 34), (21, 66), (22, 8), (23, 16), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 16), (32, 16), (33, 2)]

Covered at level 7 : {3, 17, 19, 24, 25, 26, 27, 29}

After reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16]
 solution : [0, 15, 1, 9, 2]


Before reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16]
 solution : [0, 15, 1, 9, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 8), (13, 64), (14, 1), (15, -1), (16, 10), (17, 0), (18, -1), (19, 0), (20, 34), (21, 66), (22, 8), (23, 16), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, -1), (31, 16), (32, 16), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 8), (13, 64), (14, 1), (15, -1), (16, 10), (17, -1), (18, -1), (19, -1), (20, 34), (21, 66), (22, 8), (23, 16), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 16), (32, 16), (33, 2)]

Covered at level 7 : set()

After reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16]
 solution : [0, 15, 1, 9, 2]


Solution : [0, 15, 1, 9, 2] has cost 25.


Before backtrack at level 7
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16]
 solution : [0, 15, 1, 9, 2]

After backtrack at level 7
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19]
 solution : [0, 15, 1, 9]


Before backtrack at level 6
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19]
 solution : [0, 15, 1, 9]

After backtrack at level 6
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10]
 solution : [0, 15, 1, 9]


Before backtrack at level 5
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10]
 solution : [0, 15, 1, 9]

After backtrack at level 5
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18]
 solution : [0, 15, 1]


Before backtrack at level 4
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18]
 solution : [0, 15, 1]

After backtrack at level 4
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7]
 solution : [0, 15, 1]


Before backtrack at level 3
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7]
 solution : [0, 15, 1]

After backtrack at level 3
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4]
 solution : [0, 15, 1]


Before backtrack at level 2
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4]
 solution : [0, 15, 1]

After backtrack at level 2
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15]


Before reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, 32), (12, 8), (13, 64), (14, 1), (15, -1), (16, 10), (17, -1), (18, -1), (19, -1), (20, 34), (21, 66), (22, 8), (23, 16), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 16), (32, 16), (33, 2)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 464), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 2 : set()

After reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15]


Solution : [0, 15] has cost 7.


Decide in level 2 among pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 5, 6, 28, 30, 18, 7, 4, 8]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 464), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Decide 5 with phase True at level 2

After decision at level 2
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]


New level: 3
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 28, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, 768), (6, 512), (7, 512), (8, 640), (9, 512), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 448), (19, 384), (20, 464), (21, 520), (22, 544), (23, 520), (24, 256), (25, 224), (26, 128), (27, 256), (28, 128), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, 0), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 3 : {28}

After reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, 0), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 3 among pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 10, 9, 6, 30, 18, 7, 4, 8]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 10 with phase True at level 3

After decision at level 3
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]


New level: 4
 pending : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]


Before reduction : 
 pending  : [21, 31, 33, 20, 22, 23, 32, 14, 11, 12, 13, 16, 2, 24, 25, 27, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, 576), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 64), (4, 576), (5, -1), (6, 128), (7, 64), (8, 64), (9, 64), (10, -1), (11, 128), (12, 1), (13, 0), (14, 256), (15, -1), (16, 5), (17, 40), (18, 24), (19, 5), (20, 0), (21, 21), (22, 20), (23, 0), (24, 9), (25, 0), (26, 2), (27, 0), (28, -1), (29, 16), (30, 16), (31, 128), (32, 16), (33, 0)]

Covered at level 4 : {33, 2, 13, 20, 23, 25, 27}

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]


Before reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 64), (4, 576), (5, -1), (6, 128), (7, 64), (8, 64), (9, 64), (10, -1), (11, 128), (12, 1), (13, 0), (14, 256), (15, -1), (16, 5), (17, 40), (18, 24), (19, 5), (20, 0), (21, 21), (22, 20), (23, 0), (24, 9), (25, 0), (26, 2), (27, 0), (28, -1), (29, 16), (30, 16), (31, 128), (32, 16), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 576), (5, -1), (6, 128), (7, 64), (8, 64), (9, 64), (10, -1), (11, 128), (12, 1), (13, -1), (14, 128), (15, -1), (16, 5), (17, 40), (18, 24), (19, 5), (20, -1), (21, 21), (22, 20), (23, -1), (24, 9), (25, -1), (26, 2), (27, -1), (28, -1), (29, 16), (30, 16), (31, 16), (32, 16), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]


Solution : [0, 15, 5, 10] has cost 33.


Before backtrack at level 4
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8]
 solution : [0, 15, 5, 10]

After backtrack at level 4
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 10]


Invert decision for 10 at level 3


New level: 4
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 64), (4, 576), (5, -1), (6, 128), (7, 64), (8, 64), (9, 64), (10, -1), (11, 128), (12, 1), (13, -1), (14, 128), (15, -1), (16, 5), (17, 40), (18, 24), (19, 5), (20, -1), (21, 21), (22, 20), (23, -1), (24, 9), (25, -1), (26, 2), (27, -1), (28, -1), (29, 16), (30, 16), (31, 16), (32, 16), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 4 among pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 4, 8, 33, 20, 23, 13, 2, 25, 27]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]


New level: 5
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]


Before reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 19, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 264), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 6), (18, 28), (19, 0), (20, 64), (21, 66), (22, 40), (23, 41), (24, 36), (25, 48), (26, 16), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : {19}

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]


Before reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 264), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 6), (18, 28), (19, 0), (20, 64), (21, 66), (22, 40), (23, 41), (24, 36), (25, 48), (26, 16), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 264), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 6), (18, 28), (19, -1), (20, 64), (21, 66), (22, 40), (23, 41), (24, 36), (25, 48), (26, 16), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]


Solution : [0, 15, 5, 4] has cost 41.


Before backtrack at level 5
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27]
 solution : [0, 15, 5, 4]

After backtrack at level 5
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 264), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 6), (18, 28), (19, -1), (20, 64), (21, 66), (22, 40), (23, 41), (24, 36), (25, 48), (26, 16), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 5 among pending : [21, 31, 22, 32, 14, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 14 with phase True at level 5

After decision at level 5
 pending : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14]


New level: 6
 pending : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, 512), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 6), (20, 224), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14]


Solution : [0, 15, 5, 14] has cost 22.


Decide in level 6 among pending : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 7, 8, 33, 20, 23, 13, 2, 25, 27, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, 512), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 6), (20, 224), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 7 with phase True at level 6

After decision at level 6
 pending : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14, 7]


New level: 7
 pending : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14, 7]


Before reduction : 
 pending  : [21, 31, 22, 32, 11, 12, 16, 24, 29, 3, 26, 17, 9, 6, 30, 18, 8, 33, 20, 23, 13, 2, 25, 27, 19]
 solution : [0, 15, 5, 14, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, 512), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 6), (20, 224), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, 256), (12, 256), (13, 64), (14, -1), (15, -1), (16, 257), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 1)]

Covered at level 7 : {32, 8, 9, 17, 18, 19, 20, 21, 27, 29, 30, 31}

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25]
 solution : [0, 15, 5, 14, 7]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25]
 solution : [0, 15, 5, 14, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, 256), (12, 256), (13, 64), (14, -1), (15, -1), (16, 257), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 64), (13, 64), (14, -1), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25]
 solution : [0, 15, 5, 14, 7]


Solution : [0, 15, 5, 14, 7] has cost 28.


Before backtrack at level 7
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25]
 solution : [0, 15, 5, 14, 7]

After backtrack at level 7
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 7]


Invert decision for 7 at level 6


New level: 7
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 16), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 64), (13, 64), (14, -1), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, 5), (23, 5), (24, 6), (25, 6), (26, 2), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]


Solution : [0, 15, 5, 14] has cost 22.


Decide in level 7 among pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 13, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 13 with phase True at level 7

After decision at level 7
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]


New level: 8
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 130), (9, 64), (10, -1), (11, 256), (12, 1), (13, -1), (14, -1), (15, -1), (16, 292), (17, 96), (18, 330), (19, 6), (20, 48), (21, 209), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 16), (28, -1), (29, 128), (30, 16), (31, 128), (32, 32), (33, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]


Solution : [0, 15, 5, 14, 13] has cost 27.


Before backtrack at level 8
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]

After backtrack at level 8
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 13]


Invert decision for 13 at level 7


New level: 8
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 130), (9, 64), (10, -1), (11, 256), (12, 1), (13, -1), (14, -1), (15, -1), (16, 292), (17, 96), (18, 330), (19, 6), (20, 48), (21, 209), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 16), (28, -1), (29, 128), (30, 16), (31, 128), (32, 32), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]
 solution : [0, 15, 5, 14]


Solution : [0, 15, 5, 14] has cost 22.


Decide in level 8 among pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 18, 8, 20, 27, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 18 with phase True at level 8

After decision at level 8
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 18]


New level: 9
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 18]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 17, 9, 30, 8, 20, 27, 19]
 solution : [0, 15, 5, 14, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 328), (17, 96), (18, 338), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 260), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, -1), (19, 0), (20, 24), (21, 50), (22, 38), (23, 153), (24, 10), (25, 34), (26, 2), (27, 4), (28, -1), (29, 32), (30, 8), (31, 64), (32, 16), (33, 32)]

Covered at level 9 : {17, 19}

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27]
 solution : [0, 15, 5, 14, 18]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27]
 solution : [0, 15, 5, 14, 18]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 260), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 2), (17, 0), (18, -1), (19, 0), (20, 24), (21, 50), (22, 38), (23, 153), (24, 10), (25, 34), (26, 2), (27, 4), (28, -1), (29, 32), (30, 8), (31, 64), (32, 16), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 260), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, 24), (21, 50), (22, 38), (23, 153), (24, 10), (25, 34), (26, 2), (27, 4), (28, -1), (29, 32), (30, 8), (31, 64), (32, 16), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27]
 solution : [0, 15, 5, 14, 18]


Solution : [0, 15, 5, 14, 18] has cost 56.


Before backtrack at level 9
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27]
 solution : [0, 15, 5, 14, 18]

After backtrack at level 9
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14, 18]


Invert decision for 18 at level 8


New level: 9
 pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 260), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 2), (17, -1), (18, -1), (19, -1), (20, 24), (21, 50), (22, 38), (23, 153), (24, 10), (25, 34), (26, 2), (27, 4), (28, -1), (29, 32), (30, 8), (31, 64), (32, 16), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 312), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 9 : set()

After reduction : 
 pending  : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14]


Solution : [0, 15, 5, 14] has cost 22.


Decide in level 9 among pending : [22, 11, 12, 16, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 312), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 16 with phase True at level 9

After decision at level 9
 pending : [22, 11, 12, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14, 16]


New level: 10
 pending : [22, 11, 12, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14, 16]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 26, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 19]
 solution : [0, 15, 5, 14, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, 312), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 264), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, -1), (19, 0), (20, 80), (21, 210), (22, 12), (23, 73), (24, 8), (25, 32), (26, 0), (27, 8), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 32)]

Covered at level 10 : {26, 19}

After reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17]
 solution : [0, 15, 5, 14, 16]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17]
 solution : [0, 15, 5, 14, 16]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 264), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, -1), (19, 0), (20, 80), (21, 210), (22, 12), (23, 73), (24, 8), (25, 32), (26, 0), (27, 8), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 264), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, -1), (19, -1), (20, 80), (21, 210), (22, 12), (23, 73), (24, 8), (25, 32), (26, -1), (27, 8), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 32)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17]
 solution : [0, 15, 5, 14, 16]


Solution : [0, 15, 5, 14, 16] has cost 56.


Before backtrack at level 10
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17]
 solution : [0, 15, 5, 14, 16]

After backtrack at level 10
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 16]


Invert decision for 16 at level 9


New level: 10
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 264), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 10), (18, -1), (19, -1), (20, 80), (21, 210), (22, 12), (23, 73), (24, 8), (25, 32), (26, -1), (27, 8), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 10 : set()

After reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14]


Solution : [0, 15, 5, 14] has cost 22.


Decide in level 10 among pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 8, 20, 27, 17, 26, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]


New level: 11
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 32, 29, 9, 30, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, 272), (9, 128), (10, -1), (11, 256), (12, 256), (13, -1), (14, -1), (15, -1), (16, -1), (17, 96), (18, -1), (19, 6), (20, 96), (21, 210), (22, 52), (23, 257), (24, 24), (25, 100), (26, 128), (27, 32), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, 0), (10, -1), (11, 256), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, -1), (19, 6), (20, 22), (21, 26), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 8), (28, -1), (29, 8), (30, 0), (31, 8), (32, 0), (33, 16)]

Covered at level 11 : {32, 9, 30}

After reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, 0), (10, -1), (11, 256), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, -1), (19, 6), (20, 22), (21, 26), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 8), (28, -1), (29, 8), (30, 0), (31, 8), (32, 0), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, -1), (19, 6), (20, 22), (21, 26), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 8), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 16)]

Covered at level 11 : set()

After reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]


Solution : [0, 15, 5, 14, 8] has cost 32.


Before backtrack at level 11
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19]
 solution : [0, 15, 5, 14, 8]

After backtrack at level 11
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19, 32, 9, 30]
 solution : [0, 15, 5, 14, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19, 32, 9, 30]
 solution : [0, 15, 5, 14]


Before reduction : 
 pending  : [22, 11, 12, 24, 3, 6, 33, 23, 2, 25, 21, 31, 29, 20, 27, 17, 26, 19, 32, 9, 30]
 solution : [0, 15, 5, 14]

Essensial at level 11 : {9, 2, 21}

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 128), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 256), (12, 4), (13, -1), (14, -1), (15, -1), (16, -1), (17, 6), (18, -1), (19, 6), (20, 22), (21, 26), (22, 52), (23, 52), (24, 24), (25, 24), (26, 128), (27, 8), (28, -1), (29, 8), (30, -1), (31, 8), (32, -1), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31}

After reduction : 
 pending  : [11, 12, 3, 6]
 solution : [0, 15, 5, 14, 9, 2, 21]


Before reduction : 
 pending  : [11, 12, 3, 6]
 solution : [0, 15, 5, 14, 9, 2, 21]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [11, 12, 3, 6]
 solution : [0, 15, 5, 14, 9, 2, 21]


Solution : [0, 15, 5, 14, 9, 2, 21] has cost 71.


Before backtrack at level 11
 pending : [11, 12, 3, 6]
 solution : [0, 15, 5, 14, 9, 2, 21]

After backtrack at level 11
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30]
 solution : [0, 15, 5, 14]


Before backtrack at level 10
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30]
 solution : [0, 15, 5, 14]

After backtrack at level 10
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8]
 solution : [0, 15, 5, 14]


Before backtrack at level 9
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8]
 solution : [0, 15, 5, 14]

After backtrack at level 9
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16]
 solution : [0, 15, 5, 14]


Before backtrack at level 8
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16]
 solution : [0, 15, 5, 14]

After backtrack at level 8
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18]
 solution : [0, 15, 5, 14]


Before backtrack at level 7
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18]
 solution : [0, 15, 5, 14]

After backtrack at level 7
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13]
 solution : [0, 15, 5, 14]


Before backtrack at level 6
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13]
 solution : [0, 15, 5, 14]

After backtrack at level 6
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 14]


Invert decision for 14 at level 5


New level: 6
 pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 2), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, 2), (12, 1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 6 : set()

After reduction : 
 pending  : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 6 among pending : [11, 12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 11 with phase True at level 6

After decision at level 6
 pending : [12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]


New level: 7
 pending : [12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]


Before reduction : 
 pending  : [12, 3, 6, 2, 21, 9, 22, 24, 33, 23, 25, 31, 29, 20, 27, 17, 26, 19, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, 512), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 0), (4, -1), (5, -1), (6, 0), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, 4), (13, 512), (14, -1), (15, -1), (16, 39), (17, 96), (18, 290), (19, 0), (20, 8), (21, 210), (22, 0), (23, 25), (24, 0), (25, 16), (26, 4), (27, 2), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 64)]

Covered at level 7 : {3, 6, 19, 22, 24}

After reduction : 
 pending  : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]


Before reduction : 
 pending  : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, 0), (4, -1), (5, -1), (6, 0), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, 4), (13, 512), (14, -1), (15, -1), (16, 39), (17, 96), (18, 290), (19, 0), (20, 8), (21, 210), (22, 0), (23, 25), (24, 0), (25, 16), (26, 4), (27, 2), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, 4), (13, 512), (14, -1), (15, -1), (16, 39), (17, 80), (18, 290), (19, -1), (20, 8), (21, 210), (22, -1), (23, 25), (24, -1), (25, 16), (26, 4), (27, 2), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]


Solution : [0, 15, 5, 11] has cost 26.


Before backtrack at level 7
 pending : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7]
 solution : [0, 15, 5, 11]

After backtrack at level 7
 pending : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 11]


Invert decision for 11 at level 6


New level: 7
 pending : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 64), (3, -1), (4, -1), (5, -1), (6, -1), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, 4), (13, 512), (14, -1), (15, -1), (16, 39), (17, 80), (18, 290), (19, -1), (20, 8), (21, 210), (22, -1), (23, 25), (24, -1), (25, 16), (26, 4), (27, 2), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 7 : set()

After reduction : 
 pending  : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 7 among pending : [12, 2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 12 with phase True at level 7

After decision at level 7
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]


New level: 8
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]


Before reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, 512), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, 64), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 328), (17, 96), (18, 330), (19, 48), (20, 48), (21, 210), (22, 196), (23, 257), (24, 96), (25, 100), (26, 128), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 128)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]


Solution : [0, 15, 5, 12] has cost 25.


Before backtrack at level 8
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]

After backtrack at level 8
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 12]


Invert decision for 12 at level 7


New level: 8
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 128), (4, -1), (5, -1), (6, 64), (7, 512), (8, 258), (9, 128), (10, -1), (11, -1), (12, -1), (13, 128), (14, -1), (15, -1), (16, 328), (17, 96), (18, 330), (19, 48), (20, 48), (21, 210), (22, 196), (23, 257), (24, 96), (25, 100), (26, 128), (27, 16), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Covered at level 8 : set()

After reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]


Solution : [0, 15, 5] has cost 20.


Decide in level 8 among pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 13, 7, 3, 6, 22, 24, 19]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

Decide 13 with phase True at level 8

After decision at level 8
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]


New level: 9
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]


Before reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, 128), (7, 512), (8, 272), (9, 128), (10, -1), (11, -1), (12, -1), (13, 512), (14, -1), (15, -1), (16, 328), (17, 96), (18, 384), (19, 48), (20, 224), (21, 210), (22, 208), (23, 257), (24, 96), (25, 100), (26, 128), (27, 64), (28, -1), (29, 128), (30, 32), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, -1), (5, -1), (6, 128), (7, 256), (8, 130), (9, 64), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 292), (17, 96), (18, 384), (19, 48), (20, 224), (21, 209), (22, 208), (23, 52), (24, 96), (25, 24), (26, 128), (27, 64), (28, -1), (29, 128), (30, 16), (31, 128), (32, 32), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]


Solution : [0, 15, 5, 13] has cost 25.


Before backtrack at level 9
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]

After backtrack at level 9
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5, 13]


Invert decision for 13 at level 8


New level: 9
 pending : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]


Before reduction : 
 pending  : [2, 21, 9, 33, 23, 25, 31, 29, 20, 27, 17, 26, 32, 30, 8, 16, 18, 7, 3, 6, 22, 24, 19]
 solution : [0, 15, 5]

Essensial at level 9 : {3, 7}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, -1), (5, -1), (6, 128), (7, 256), (8, 130), (9, 64), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 292), (17, 96), (18, 384), (19, 48), (20, 224), (21, 209), (22, 208), (23, 52), (24, 96), (25, 24), (26, 128), (27, 64), (28, -1), (29, 128), (30, 16), (31, 128), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 1), (21, 0), (22, 4), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 9 : {32, 33, 2, 8, 9, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31}

After reduction : 
 pending  : [20, 6, 22]
 solution : [0, 15, 5, 3, 7]


Before reduction : 
 pending  : [20, 6, 22]
 solution : [0, 15, 5, 3, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 0), (9, 0), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 1), (21, 0), (22, 4), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [20, 6, 22]
 solution : [0, 15, 5, 3, 7]


Solution : [0, 15, 5, 3, 7] has cost 35.


Before backtrack at level 9
 pending : [20, 6, 22]
 solution : [0, 15, 5, 3, 7]

After backtrack at level 9
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19]
 solution : [0, 15, 5]


Before backtrack at level 8
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19]
 solution : [0, 15, 5]

After backtrack at level 8
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13]
 solution : [0, 15, 5]


Before backtrack at level 7
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13]
 solution : [0, 15, 5]

After backtrack at level 7
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12]
 solution : [0, 15, 5]


Before backtrack at level 6
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12]
 solution : [0, 15, 5]

After backtrack at level 6
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11]
 solution : [0, 15, 5]


Before backtrack at level 5
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11]
 solution : [0, 15, 5]

After backtrack at level 5
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14]
 solution : [0, 15, 5]


Before backtrack at level 4
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14]
 solution : [0, 15, 5]

After backtrack at level 4
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4]
 solution : [0, 15, 5]


Before backtrack at level 3
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4]
 solution : [0, 15, 5]

After backtrack at level 3
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 5]


Invert decision for 5 at level 2


New level: 3
 pending : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15]


Before reduction : 
 pending  : [20, 6, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15]

Essensial at level 3 : {6}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, 1), (21, -1), (22, 4), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, 640), (9, 512), (10, 520), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 356), (19, 96), (20, 196), (21, 520), (22, 272), (23, 520), (24, 112), (25, 224), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, 640), (9, 512), (10, 520), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 356), (19, 96), (20, 196), (21, 520), (22, 272), (23, 520), (24, 112), (25, 224), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, 640), (9, 512), (10, 520), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 356), (19, 96), (20, 196), (21, 520), (22, 272), (23, 520), (24, 112), (25, 224), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Covered at level 3 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6]


Solution : [0, 15, 6] has cost 13.


Decide in level 3 among pending : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 8, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, 640), (9, 512), (10, 520), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 356), (19, 96), (20, 196), (21, 520), (22, 272), (23, 520), (24, 112), (25, 224), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6, 8]


New level: 4
 pending : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6, 8]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 9, 33, 23, 25, 31, 29, 27, 17, 26, 32, 30, 16, 18, 24, 19, 13, 12, 11, 14, 4, 28, 10]
 solution : [0, 15, 6, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, 640), (9, 512), (10, 520), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 384), (17, 384), (18, 356), (19, 96), (20, 196), (21, 520), (22, 272), (23, 520), (24, 112), (25, 224), (26, 128), (27, 128), (28, 64), (29, 256), (30, 128), (31, 256), (32, 128), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 576), (5, -1), (6, -1), (7, 128), (8, -1), (9, 0), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 292), (17, 6), (18, 89), (19, 12), (20, 44), (21, 26), (22, 104), (23, 52), (24, 48), (25, 24), (26, 128), (27, 16), (28, 0), (29, 8), (30, 0), (31, 32), (32, 0), (33, 64)]

Covered at level 4 : {32, 9, 28, 30}

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10]
 solution : [0, 15, 6, 8]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10]
 solution : [0, 15, 6, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 576), (5, -1), (6, -1), (7, 128), (8, -1), (9, 0), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 292), (17, 6), (18, 89), (19, 12), (20, 44), (21, 26), (22, 104), (23, 52), (24, 48), (25, 24), (26, 128), (27, 16), (28, 0), (29, 8), (30, 0), (31, 32), (32, 0), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 576), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 292), (17, 6), (18, 89), (19, 12), (20, 44), (21, 26), (22, 104), (23, 52), (24, 48), (25, 24), (26, 128), (27, 16), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10]
 solution : [0, 15, 6, 8]


Solution : [0, 15, 6, 8] has cost 23.


Before backtrack at level 4
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10]
 solution : [0, 15, 6, 8]

After backtrack at level 4
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 9, 32, 30, 28]
 solution : [0, 15, 6, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 9, 32, 30, 28]
 solution : [0, 15, 6]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 9, 32, 30, 28]
 solution : [0, 15, 6]

Essensial at level 4 : {9}

Before removed
 coverage : [(0, -1), (1, -1), (2, 128), (3, 256), (4, 576), (5, -1), (6, -1), (7, 128), (8, -1), (9, -1), (10, 256), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 292), (17, 6), (18, 89), (19, 12), (20, 44), (21, 26), (22, 104), (23, 52), (24, 48), (25, 24), (26, 128), (27, 16), (28, -1), (29, 8), (30, -1), (31, 32), (32, -1), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, 0), (31, 256), (32, 64), (33, 256)]

Covered at level 4 : {30}

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 32, 28]
 solution : [0, 15, 6, 9]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 32, 28]
 solution : [0, 15, 6, 9]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, 0), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

Covered at level 4 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 32, 28]
 solution : [0, 15, 6, 9]


Solution : [0, 15, 6, 9] has cost 19.


Decide in level 4 among pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 4, 10, 32, 28]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]


New level: 5
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 17, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, 576), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 0), (18, 28), (19, 6), (20, 65), (21, 64), (22, 42), (23, 40), (24, 38), (25, 48), (26, 16), (27, 128), (28, 32), (29, 16), (30, -1), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : {17}

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, 0), (18, 28), (19, 6), (20, 65), (21, 64), (22, 42), (23, 40), (24, 38), (25, 48), (26, 16), (27, 128), (28, 32), (29, 16), (30, -1), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, -1), (18, 28), (19, 6), (20, 65), (21, 64), (22, 42), (23, 40), (24, 38), (25, 48), (26, 16), (27, 128), (28, 32), (29, 16), (30, -1), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]


Solution : [0, 15, 6, 9, 4] has cost 40.


Before backtrack at level 5
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28]
 solution : [0, 15, 6, 9, 4]

After backtrack at level 5
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28, 17]
 solution : [0, 15, 6, 9, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28, 17]
 solution : [0, 15, 6, 9]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28, 17]
 solution : [0, 15, 6, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 16), (17, -1), (18, 28), (19, 6), (20, 65), (21, 64), (22, 42), (23, 40), (24, 38), (25, 48), (26, 16), (27, 128), (28, 32), (29, 16), (30, -1), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

Covered at level 5 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28, 17]
 solution : [0, 15, 6, 9]


Solution : [0, 15, 6, 9] has cost 19.


Decide in level 5 among pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 10, 32, 28, 17]

Coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

Decide 10 with phase True at level 5

After decision at level 5
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 10]


New level: 6
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 10]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 256), (3, 256), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, 514), (11, 512), (12, 512), (13, 512), (14, 512), (15, -1), (16, 312), (17, 48), (18, 354), (19, 96), (20, 193), (21, 256), (22, 264), (23, 208), (24, 104), (25, 96), (26, 128), (27, 128), (28, 32), (29, 64), (30, -1), (31, 256), (32, 64), (33, 256)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {2, 3, 7, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 15, 6, 9, 10]


Before reduction : 
 pending  : []
 solution : [0, 15, 6, 9, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, 0), (4, -1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, -1), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 15, 6, 9, 10]


Solution : [0, 15, 6, 9, 10] has cost 32.


Before backtrack at level 6
 pending : []
 solution : [0, 15, 6, 9, 10]

After backtrack at level 6
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 10]


Invert decision for 10 at level 5


New level: 6
 pending : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9]


Before reduction : 
 pending  : [20, 22, 7, 3, 2, 21, 33, 23, 25, 31, 29, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9]

Essensial at level 6 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 512), (12, 128), (13, 128), (14, 512), (15, -1), (16, 258), (17, 2), (18, 265), (19, 16), (20, 136), (21, 130), (22, 36), (23, 128), (24, 4), (25, 4), (26, 2), (27, 16), (28, 8), (29, 0), (30, -1), (31, 32), (32, 32), (33, 128)]

Covered at level 6 : {29}

After reduction : 
 pending  : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 2]


Before reduction : 
 pending  : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 512), (12, 128), (13, 128), (14, 512), (15, -1), (16, 258), (17, 2), (18, 265), (19, 16), (20, 136), (21, 130), (22, 36), (23, 128), (24, 4), (25, 4), (26, 2), (27, 16), (28, 8), (29, 0), (30, -1), (31, 32), (32, 32), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 8), (4, -1), (5, -1), (6, -1), (7, 512), (8, -1), (9, -1), (10, -1), (11, 512), (12, 128), (13, 128), (14, 512), (15, -1), (16, 258), (17, 2), (18, 265), (19, 16), (20, 136), (21, 130), (22, 36), (23, 128), (24, 4), (25, 4), (26, 2), (27, 16), (28, 8), (29, -1), (30, -1), (31, 32), (32, 32), (33, 128)]

Covered at level 6 : set()

After reduction : 
 pending  : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 2]


Solution : [0, 15, 6, 9, 2] has cost 28.


Before backtrack at level 6
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17]
 solution : [0, 15, 6, 9, 2]

After backtrack at level 6
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29]
 solution : [0, 15, 6, 9]


Before backtrack at level 5
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29]
 solution : [0, 15, 6, 9]

After backtrack at level 5
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10]
 solution : [0, 15, 6, 9]


Before backtrack at level 4
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10]
 solution : [0, 15, 6, 9]

After backtrack at level 4
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4]
 solution : [0, 15, 6]


Before backtrack at level 3
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4]
 solution : [0, 15, 6]

After backtrack at level 3
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4, 6, 8]
 solution : [0, 15]


Before backtrack at level 2
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4, 6, 8]
 solution : [0, 15]

After backtrack at level 2
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4, 6, 8, 5]
 solution : [0, 15]


Before backtrack at level 1
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4, 6, 8, 5]
 solution : [0, 15]

After backtrack at level 1
 pending : [20, 22, 7, 3, 21, 33, 23, 25, 31, 27, 26, 16, 18, 24, 19, 13, 12, 11, 14, 32, 28, 17, 2, 29, 10, 9, 30, 4, 6, 8, 5, 1]
 solution : [0, 15]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 15, 1, 7, 9]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_15] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_7] forall NODE1,NODE0. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1 # qcost: 6

invariant [invar_9] forall NODE1,NODE0. allowed_in(NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 13.811 seconds

[QRM NOTE]: Time elapsed since last: 2.397 seconds

[QRM NOTE]: Peak memory: 2389280 bytes


=============================================

	[IVY_CHECK] Ivy Check for Rmin

=============================================


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_7 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


==================================================================================================

	[MUS]: Extract strengthening assertion for [ivybench/sym/ivy/firewall.node_3.0.ivy]

==================================================================================================

[MUS NOTE]: number of strengthening assertions: 2

[MUS NOTE]: min mus: {1, 3}

invariant [invar_15] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_7] forall NODE1,NODE0. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1 # qcost: 6


========================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.assert.ivy]

========================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.assert.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 34: safety ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 38: invar_15 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 39: invar_7 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.assert.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS

[ASSERT_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 33.332 seconds

[QRM NOTE]: Time elapsed since last: 19.521 seconds

[QRM NOTE]: Peak memory: 2417814 bytes


********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************

[QRM RESULT]: PASS

