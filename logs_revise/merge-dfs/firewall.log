
********************************************************

	[QRM]: ivybench/sym/ivy/firewall.ivy

********************************************************


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=1]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=1 -f 1 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


====================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=1]

====================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 3

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 1

[FW NOTE]: number of branching actions: 2

ivy_to_cpp target=qrm firewall.node_1.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_1.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_1.finite.cpp firewall.node_1.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_1.finite.o firewall.node_1.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.132 seconds

[QRM NOTE]: Time elapsed since last: 7.132 seconds

[QRM NOTE]: Peak memory: 1174448 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 0

[FW NOTE]: number of total reachable states:        2

[FW NOTE]: number of dfs representative states:     2

[FW NOTE]: number of dfs non-representative states: 0


===========================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.ivy: node=1]

===========================================================================================

sort: node=['node0']
predicate: internal('node',)
predicate: allowed_in('node',)
predicate: sent('node', 'node')
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'internal(node0)', 'sent(node0,node0)']
representative states : 0, 2


=== State Orbit 0 =====================
size : 1
repr state: 000
lex min decimal: 0
states:
000




=== State Orbit 1 =====================
size : 1
repr state: 010
lex min decimal: 2
states:
010



[QRM NOTE]: Time elapsed since start: 7.217 seconds

[QRM NOTE]: Time elapsed since last: 0.085 seconds

[QRM NOTE]: Peak memory: 1199097 bytes


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 7.220 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 150014 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=1]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=1]

======================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 2

[PRIME NOTE]: number of orbits before merging: 2

[PRIME NOTE]: number of primes: 2

[QRM NOTE]: Time elapsed since start: 7.231 seconds

[QRM NOTE]: Time elapsed since last: 0.011 seconds

[QRM NOTE]: Peak memory: 1205001 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=1]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1]
 solution : []


Before reduction : 
 pending  : [0, 1]
 solution : []

Essensial at level 0 : {0, 1}

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 0 : set()

After reduction : 
 pending  : []
 solution : [0, 1]

[QRM NOTE]: Time elapsed since start: 7.232 seconds

[QRM NOTE]: Time elapsed since last: 0.001 seconds

[QRM NOTE]: Peak memory: 157384 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=1]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0',))), Const('node0', EnumeratedSort('node', ('node0',))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0',))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0',)), EnumeratedSort('node', ('node0',)))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0',))), Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0',))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0',))): [node$0$allowed_in$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0',)))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0',)), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0',)),)}

sign_func_name2count:  {'0$allowed_in': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0',)): [node$0$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0',)): node$0$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0',)))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0',)))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=1]

==============================================================================================


=== Prime Orbit 0 =====================
size : 1
num_suborbits: 1
0 (*) : --1
0     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 1 =====================
size : 1
num_suborbits: 1
1 (*) : 1--
1     : ['allowed_in(node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~allowed_in(NODE0)
qcost : 2



[QRM NOTE]: Time elapsed since start: 7.309 seconds

[QRM NOTE]: Time elapsed since last: 0.078 seconds

[QRM NOTE]: Peak memory: 1876482 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=1]

=============================================================================


New level: 1
 pending : []
 solution : [0, 1]


Before reduction : 
 pending  : []
 solution : [0, 1]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, -1)]

After removed
 coverage : [(0, -1), (1, -1)]

Covered at level 1 : set()

After reduction : 
 pending  : []
 solution : [0, 1]


Solution : [0, 1] has cost 4.


Before backtrack at level 1
 pending : []
 solution : [0, 1]

After backtrack at level 1
 pending : []
 solution : [0, 1]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=1]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 4

[MIN NOTE]: maximum branch and bound depth: 1

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 1]

[MIN NOTE]: solution length: 2

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) # qcost: 2

[MIN NOTE]: number of total invariants: 2

[MIN NOTE]: total qCost: 4




[QRM NOTE]: Time elapsed since start: 7.350 seconds

[QRM NOTE]: Time elapsed since last: 0.040 seconds

[QRM NOTE]: Peak memory: 1868157 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=1]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_1.0.ivy -s node=2 -f 2 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_1.0.ivy: node=2]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 8

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 2

[FW NOTE]: number of branching actions: 8

ivy_to_cpp target=qrm firewall.node_2.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_2.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_2.finite.cpp firewall.node_2.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_2.finite.o firewall.node_2.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.343 seconds

[QRM NOTE]: Time elapsed since last: 7.343 seconds

[QRM NOTE]: Peak memory: 1177362 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 2

[FW NOTE]: number of total reachable states:        8

[FW NOTE]: number of dfs representative states:     5

[FW NOTE]: number of dfs non-representative states: 3


====================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.node_1.0.ivy: node=2]

====================================================================================================

sort: node=['node0', 'node1']
predicate: sent('node', 'node')
predicate: internal('node',)
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'internal(node0)', 'internal(node1)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node1,node0)', 'sent(node1,node1)']
representative states : 0, 48, 16, 100, 102


=== State Orbit 0 =====================
size : 1
repr state: 00000000
lex min decimal: 0
states:
00000000




=== State Orbit 1 =====================
size : 1
repr state: 00110000
lex min decimal: 48
states:
00110000




=== State Orbit 2 =====================
size : 2
repr state: 00100000
lex min decimal: 16
states:
00100000
00010000




=== State Orbit 3 =====================
size : 2
repr state: 01100100
lex min decimal: 100
states:
01100100
10010010




=== State Orbit 4 =====================
size : 2
repr state: 01100110
lex min decimal: 102
states:
10010110
01100110



[QRM NOTE]: Time elapsed since start: 7.423 seconds

[QRM NOTE]: Time elapsed since last: 0.080 seconds

[QRM NOTE]: Peak memory: 1205838 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_1.0.ivy: node=2]

=========================================================================================================================

Found a representative state in Rmin not in reachability: decimal: 54, binary: 00110110

Found a representative state in Rmin not in reachability: decimal: 50, binary: 00110010

Found a representative state in Rmin not in reachability: decimal: 2, binary: 00000010

Found a representative state in Rmin not in reachability: decimal: 22, binary: 00010110

Found a representative state in Rmin not in reachability: decimal: 6, binary: 00000110

Found a representative state in Rmin not in reachability: decimal: 20, binary: 00010100

Found a representative state in Rmin not in reachability: decimal: 18, binary: 00010010

Representatitive states in reachability not in Rmin

{100, 102}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 7.431 seconds

[QRM NOTE]: Time elapsed since last: 0.009 seconds

[QRM NOTE]: Peak memory: 158499 bytes

next size: node=2


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=2]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=2 -f 1 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.015 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 2296 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=2]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=2]

======================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1--0----
4     : ['allowed_in(node0)', '~internal(node1)']
5     : -10-----
5     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : 1-----0-
6     : ['allowed_in(node0)', '~sent(node1,node0)']
7     : -1---0--
7     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
8 (*) : 11------
8     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : --11--1-
9     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
10     : --11-1--
10     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0--1--1-
11     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
12     : -01--1--
12     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
13 (*) : 0--1-1--
13     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
14     : -01---1-
14     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
15 (*) : ---1-10-
15     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
16     : --1--01-
16     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
17 (*) : 00---1--
17     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
18     : 00----1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 4
num_suborbits: 2
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
25 (*) : -0-0-1--
25     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
26     : 0-0---1-
26     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
21 (*) : -0---10-
21     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
22     : 0----01-
22     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
23 (*) : --0--10-
23     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
24     : ---0-01-
24     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --00-1--
27     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
28     : --00--1-
28     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 13

[PRIME NOTE]: number of orbits before merging: 15

[PRIME NOTE]: number of primes: 29

[QRM NOTE]: Time elapsed since start: 0.030 seconds

[QRM NOTE]: Time elapsed since last: 0.015 seconds

[QRM NOTE]: Peak memory: 1102289 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=2]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : []

Essensial at level 0 : {0, 3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]


Before reduction : 
 pending  : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]

[QRM NOTE]: Time elapsed since start: 0.033 seconds

[QRM NOTE]: Time elapsed since last: 0.003 seconds

[QRM NOTE]: Peak memory: 53274 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=2]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node0)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node0)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : 1-----0-
6     : ['allowed_in(node0)', '~sent(node1,node0)']
7     : -1---0--
7     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', 'internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', 'internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)


=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1--0----
4     : ['allowed_in(node0)', '~internal(node1)']
5     : -10-----
5     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
8 (*) : 11------
8     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$allowed_in$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),)}

sign_func_name2count:  {'0$allowed_in': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : --11--1-
9     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
10     : --11-1--
10     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$1, node$0$sent$0$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$internal$0$1; node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$internal$0$1; node$0$sent$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1': [node$0$internal$0$0; node$0$sent$1$0], 'node$0$internal$0; node$0$sent$0': [node$0$internal$0$1; node$0$sent$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1': node$0$internal$0$0; node$0$sent$1$0, 'node$0$internal$0; node$0$sent$0': node$0$internal$0$1; node$0$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', 'internal(NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0--1--1-
11     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
12     : -01--1--
12     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
13 (*) : 0--1-1--
13     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
14     : -01---1-
14     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'internal(node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE2)', '~allowed_in(NODE3)', 'internal(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE3,NODE0,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE3) | ~internal(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
15 (*) : ---1-10-
15     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
16     : --1--01-
16     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE0)', '~sent(NODE0,NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
17 (*) : 00---1--
17     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
18     : 00----1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node1)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE1)', '~allowed_in(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 4
num_suborbits: 2
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
25 (*) : -0-0-1--
25     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
26     : 0-0---1-
26     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', '~allowed_in(NODE2)', 'sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE2,NODE0,NODE1. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
21 (*) : -0---10-
21     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
22     : 0----01-
22     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~allowed_in(NODE1)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
23 (*) : --0--10-
23     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
24     : ---0-01-
24     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1'))), Const('node0', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$0$sent$1$0, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --00-1--
27     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
28     : --00--1-
28     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1'))), Const('node1', EnumeratedSort('node', ('node0', 'node1'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$1$internal$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node1)', 'sent(node0,node1)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1')),), 'sent': (EnumeratedSort('node', ('node0', 'node1')), EnumeratedSort('node', ('node0', 'node1')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'sent(NODE0,NODE1)', '~internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=2]

==============================================================================================


=== Prime Orbit 0 =====================
size : 2
num_suborbits: 1
0 (*) : ----1---
0     : ['sent(node0,node0)']
1     : -------1
1     : ['sent(node1,node1)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 3 =====================
size : 2
num_suborbits: 1
6 (*) : 1-----0-
6     : ['allowed_in(node0)', '~sent(node1,node0)']
7     : -1---0--
7     : ['allowed_in(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 1 =====================
size : 2
num_suborbits: 1
2 (*) : -1-1----
2     : ['allowed_in(node1)', 'internal(node1)']
3     : 1-1-----
3     : ['allowed_in(node0)', 'internal(node0)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0)
qcost : 3




=== Prime Orbit 2 =====================
size : 2
num_suborbits: 1
4 (*) : 1--0----
4     : ['allowed_in(node0)', '~internal(node1)']
5     : -10-----
5     : ['allowed_in(node1)', '~internal(node0)']
num_forall :   2
num_exists :   0
num_literals : 3
quantified form : forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 5




=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
8 (*) : 11------
8     : ['allowed_in(node0)', 'allowed_in(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 5 =====================
size : 2
num_suborbits: 1
9 (*) : --11--1-
9     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
10     : --11-1--
10     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 6 =====================
size : 4
num_suborbits: 2
11 (*) : 0--1--1-
11     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
12     : -01--1--
12     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
13 (*) : 0--1-1--
13     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
14     : -01---1-
14     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE2,NODE3,NODE0,NODE1. ~sent(NODE1,NODE2) | allowed_in(NODE3) | ~internal(NODE0) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 7 =====================
size : 2
num_suborbits: 1
15 (*) : ---1-10-
15     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
16     : --1--01-
16     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 8 =====================
size : 2
num_suborbits: 1
17 (*) : 00---1--
17     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
18     : 00----1-
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 4
num_suborbits: 2
19 (*) : 0-0--1--
19     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
20     : -0-0--1-
20     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
25 (*) : -0-0-1--
25     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
26     : 0-0---1-
26     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE2,NODE0,NODE1. internal(NODE2) | allowed_in(NODE2) | ~sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 10 =====================
size : 2
num_suborbits: 1
21 (*) : -0---10-
21     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
22     : 0----01-
22     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. sent(NODE1,NODE0) | allowed_in(NODE1) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 11 =====================
size : 2
num_suborbits: 1
23 (*) : --0--10-
23     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
24     : ---0-01-
24     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 12 =====================
size : 2
num_suborbits: 1
27 (*) : --00-1--
27     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
28     : --00--1-
28     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1. internal(NODE1) | ~sent(NODE0,NODE1) | internal(NODE0) | NODE0 = NODE1
qcost : 6



[QRM NOTE]: Time elapsed since start: 0.198 seconds

[QRM NOTE]: Time elapsed since last: 0.165 seconds

[QRM NOTE]: Peak memory: 1836823 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=2]

=============================================================================


New level: 1
 pending : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]


Before reduction : 
 pending  : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]
 solution : [0, 3]


Solution : [0, 3] has cost 7.


Decide in level 1 among pending : [1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12]

Coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Decide 6 with phase True at level 1

After decision at level 1
 pending : [1, 2, 4, 5, 7, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]


New level: 2
 pending : [1, 2, 4, 5, 7, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]


Before reduction : 
 pending  : [1, 2, 4, 5, 7, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, 12), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

After removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, -1), (4, 4), (5, 1), (6, -1), (7, 0), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

Covered at level 2 : {7}

After reduction : 
 pending  : [1, 2, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]


Before reduction : 
 pending  : [1, 2, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, -1), (4, 4), (5, 1), (6, -1), (7, 0), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

After removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

Covered at level 2 : set()

After reduction : 
 pending  : [1, 2, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6]


Solution : [0, 3, 6] has cost 20.


Decide in level 2 among pending : [1, 2, 4, 5, 8, 9, 10, 11, 12]

Coverage : [(0, -1), (1, 2), (2, 8), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

Decide 2 with phase True at level 2

After decision at level 2
 pending : [1, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6, 2]


New level: 3
 pending : [1, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6, 2]


Before reduction : 
 pending  : [1, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6, 2]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, 8), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 1), (11, 1), (12, 2)]

Covered at level 3 : set()

After reduction : 
 pending  : [1, 4, 5, 8, 9, 10, 11, 12]
 solution : [0, 3, 6, 2]


Solution : [0, 3, 6, 2] has cost 25.


Decide in level 3 among pending : [1, 4, 5, 8, 9, 10, 11, 12]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 1), (11, 1), (12, 2)]

Decide 8 with phase True at level 3

After decision at level 3
 pending : [1, 4, 5, 9, 10, 11, 12]
 solution : [0, 3, 6, 2, 8]


New level: 4
 pending : [1, 4, 5, 9, 10, 11, 12]
 solution : [0, 3, 6, 2, 8]


Before reduction : 
 pending  : [1, 4, 5, 9, 10, 11, 12]
 solution : [0, 3, 6, 2, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, 2), (9, 2), (10, 1), (11, 1), (12, 2)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, 0), (12, 0)]

Covered at level 4 : {9, 10, 11, 12}

After reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 2, 8]


Before reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 2, 8]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 2, 8]


Solution : [0, 3, 6, 2, 8] has cost 31.


Decide in level 4 among pending : [1, 4, 5]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 1 with phase True at level 4

After decision at level 4
 pending : [4, 5]
 solution : [0, 3, 6, 2, 8, 1]


New level: 5
 pending : [4, 5]
 solution : [0, 3, 6, 2, 8, 1]


Before reduction : 
 pending  : [4, 5]
 solution : [0, 3, 6, 2, 8, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {4, 5}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 1]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 1]


Solution : [0, 3, 6, 2, 8, 1] has cost 34.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 6, 2, 8, 1]

After backtrack at level 5
 pending : [4, 5]
 solution : [0, 3, 6, 2, 8, 1]


Invert decision for 1 at level 4


New level: 5
 pending : [4, 5]
 solution : [0, 3, 6, 2, 8]


Before reduction : 
 pending  : [4, 5]
 solution : [0, 3, 6, 2, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 5]
 solution : [0, 3, 6, 2, 8]


Solution : [0, 3, 6, 2, 8] has cost 31.


Decide in level 5 among pending : [4, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [5]
 solution : [0, 3, 6, 2, 8, 4]


New level: 6
 pending : [5]
 solution : [0, 3, 6, 2, 8, 4]


Before reduction : 
 pending  : [5]
 solution : [0, 3, 6, 2, 8, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {5}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 4]


Solution : [0, 3, 6, 2, 8, 4] has cost 33.


Before backtrack at level 6
 pending : []
 solution : [0, 3, 6, 2, 8, 4]

After backtrack at level 6
 pending : [5]
 solution : [0, 3, 6, 2, 8, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [5]
 solution : [0, 3, 6, 2, 8]


Before reduction : 
 pending  : [5]
 solution : [0, 3, 6, 2, 8]

Essensial at level 6 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 8, 5]


Solution : [0, 3, 6, 2, 8, 5] has cost 37.


Before backtrack at level 6
 pending : []
 solution : [0, 3, 6, 2, 8, 5]

After backtrack at level 6
 pending : [5]
 solution : [0, 3, 6, 2, 8]


Before backtrack at level 5
 pending : [5]
 solution : [0, 3, 6, 2, 8]

After backtrack at level 5
 pending : [5, 4]
 solution : [0, 3, 6, 2, 8]


Before backtrack at level 4
 pending : [5, 4]
 solution : [0, 3, 6, 2, 8]

After backtrack at level 4
 pending : [5, 4, 9, 10, 11, 12, 1]
 solution : [0, 3, 6, 2, 8]


Invert decision for 8 at level 3


New level: 4
 pending : [5, 4, 9, 10, 11, 12, 1]
 solution : [0, 3, 6, 2]


Before reduction : 
 pending  : [5, 4, 9, 10, 11, 12, 1]
 solution : [0, 3, 6, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 1), (11, 1), (12, 2)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 4, 9, 10, 11, 12, 1]
 solution : [0, 3, 6, 2]


Solution : [0, 3, 6, 2] has cost 25.


Decide in level 4 among pending : [5, 4, 9, 10, 11, 12, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 1), (11, 1), (12, 2)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [5, 4, 10, 11, 12, 1]
 solution : [0, 3, 6, 2, 9]


New level: 5
 pending : [5, 4, 10, 11, 12, 1]
 solution : [0, 3, 6, 2, 9]


Before reduction : 
 pending  : [5, 4, 10, 11, 12, 1]
 solution : [0, 3, 6, 2, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, 2), (10, 1), (11, 1), (12, 2)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0)]

Covered at level 5 : {10, 11, 12}

After reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 9]


Before reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 9]


Solution : [0, 3, 6, 2, 9] has cost 35.


Before backtrack at level 5
 pending : [5, 4, 1]
 solution : [0, 3, 6, 2, 9]

After backtrack at level 5
 pending : [5, 4, 1, 10, 11, 12]
 solution : [0, 3, 6, 2, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [5, 4, 1, 10, 11, 12]
 solution : [0, 3, 6, 2]


Before reduction : 
 pending  : [5, 4, 1, 10, 11, 12]
 solution : [0, 3, 6, 2]

Essensial at level 5 : {12}

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1)]

Covered at level 5 : {10, 11}

After reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 12]


Before reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 12]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [5, 4, 1]
 solution : [0, 3, 6, 2, 12]


Solution : [0, 3, 6, 2, 12] has cost 31.


Decide in level 5 among pending : [5, 4, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 5 with phase True at level 5

After decision at level 5
 pending : [4, 1]
 solution : [0, 3, 6, 2, 12, 5]


New level: 6
 pending : [4, 1]
 solution : [0, 3, 6, 2, 12, 5]


Before reduction : 
 pending  : [4, 1]
 solution : [0, 3, 6, 2, 12, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : {1, 4}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 5]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 5]


Solution : [0, 3, 6, 2, 12, 5] has cost 37.


Before backtrack at level 6
 pending : []
 solution : [0, 3, 6, 2, 12, 5]

After backtrack at level 6
 pending : [4, 1]
 solution : [0, 3, 6, 2, 12, 5]


Invert decision for 5 at level 5


New level: 6
 pending : [4, 1]
 solution : [0, 3, 6, 2, 12]


Before reduction : 
 pending  : [4, 1]
 solution : [0, 3, 6, 2, 12]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [4, 1]
 solution : [0, 3, 6, 2, 12]


Solution : [0, 3, 6, 2, 12] has cost 31.


Decide in level 6 among pending : [4, 1]

Coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 4 with phase True at level 6

After decision at level 6
 pending : [1]
 solution : [0, 3, 6, 2, 12, 4]


New level: 7
 pending : [1]
 solution : [0, 3, 6, 2, 12, 4]


Before reduction : 
 pending  : [1]
 solution : [0, 3, 6, 2, 12, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, 1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {1}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 4]


Solution : [0, 3, 6, 2, 12, 4] has cost 33.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 6, 2, 12, 4]

After backtrack at level 7
 pending : [1]
 solution : [0, 3, 6, 2, 12, 4]


Invert decision for 4 at level 6


New level: 7
 pending : [1]
 solution : [0, 3, 6, 2, 12]


Before reduction : 
 pending  : [1]
 solution : [0, 3, 6, 2, 12]

Essensial at level 7 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 1]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 1]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 2, 12, 1]


Solution : [0, 3, 6, 2, 12, 1] has cost 34.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 6, 2, 12, 1]

After backtrack at level 7
 pending : [1]
 solution : [0, 3, 6, 2, 12]


Before backtrack at level 6
 pending : [1]
 solution : [0, 3, 6, 2, 12]

After backtrack at level 6
 pending : [1, 4]
 solution : [0, 3, 6, 2, 12]


Before backtrack at level 5
 pending : [1, 4]
 solution : [0, 3, 6, 2, 12]

After backtrack at level 5
 pending : [1, 4, 12, 10, 11, 5]
 solution : [0, 3, 6, 2]


Before backtrack at level 4
 pending : [1, 4, 12, 10, 11, 5]
 solution : [0, 3, 6, 2]

After backtrack at level 4
 pending : [1, 4, 12, 10, 11, 5, 9]
 solution : [0, 3, 6, 2]


Before backtrack at level 3
 pending : [1, 4, 12, 10, 11, 5, 9]
 solution : [0, 3, 6, 2]

After backtrack at level 3
 pending : [1, 4, 12, 10, 11, 5, 9, 8]
 solution : [0, 3, 6, 2]


Invert decision for 2 at level 2


New level: 3
 pending : [1, 4, 12, 10, 11, 5, 9, 8]
 solution : [0, 3, 6]


Before reduction : 
 pending  : [1, 4, 12, 10, 11, 5, 9, 8]
 solution : [0, 3, 6]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

Covered at level 3 : set()

After reduction : 
 pending  : [1, 4, 12, 10, 11, 5, 9, 8]
 solution : [0, 3, 6]


Solution : [0, 3, 6] has cost 20.


Decide in level 3 among pending : [1, 4, 12, 10, 11, 5, 9, 8]

Coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

Decide 12 with phase True at level 3

After decision at level 3
 pending : [1, 4, 10, 11, 5, 9, 8]
 solution : [0, 3, 6, 12]


New level: 4
 pending : [1, 4, 10, 11, 5, 9, 8]
 solution : [0, 3, 6, 12]


Before reduction : 
 pending  : [1, 4, 10, 11, 5, 9, 8]
 solution : [0, 3, 6, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 2), (9, 4), (10, 1), (11, 2), (12, 8)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 0), (9, 0), (10, 0), (11, 0), (12, -1)]

Covered at level 4 : {8, 9, 10, 11}

After reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 12]


Before reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, 0), (9, 0), (10, 0), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [1, 4, 5]
 solution : [0, 3, 6, 12]


Solution : [0, 3, 6, 12] has cost 26.


Decide in level 4 among pending : [1, 4, 5]

Coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [1, 5]
 solution : [0, 3, 6, 12, 4]


New level: 5
 pending : [1, 5]
 solution : [0, 3, 6, 12, 4]


Before reduction : 
 pending  : [1, 5]
 solution : [0, 3, 6, 12, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 2), (2, -1), (3, -1), (4, 4), (5, 1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {1, 5}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 4]


Solution : [0, 3, 6, 12, 4] has cost 28.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 6, 12, 4]

After backtrack at level 5
 pending : [1, 5]
 solution : [0, 3, 6, 12, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [1, 5]
 solution : [0, 3, 6, 12]


Before reduction : 
 pending  : [1, 5]
 solution : [0, 3, 6, 12]

Essensial at level 5 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {5}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 1]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 12, 1]


Solution : [0, 3, 6, 12, 1] has cost 29.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 6, 12, 1]

After backtrack at level 5
 pending : [1, 5]
 solution : [0, 3, 6, 12]


Before backtrack at level 4
 pending : [1, 5]
 solution : [0, 3, 6, 12]

After backtrack at level 4
 pending : [1, 5, 10, 11, 9, 8, 4]
 solution : [0, 3, 6, 12]


Invert decision for 12 at level 3


New level: 4
 pending : [1, 5, 10, 11, 9, 8, 4]
 solution : [0, 3, 6]


Before reduction : 
 pending  : [1, 5, 10, 11, 9, 8, 4]
 solution : [0, 3, 6]

Essensial at level 4 : {9, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1)]

Covered at level 4 : {1, 5, 8, 10, 11}

After reduction : 
 pending  : []
 solution : [0, 3, 6, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 6, 9, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 6, 9, 4]


Solution : [0, 3, 6, 9, 4] has cost 32.


Before backtrack at level 4
 pending : []
 solution : [0, 3, 6, 9, 4]

After backtrack at level 4
 pending : [9, 4, 1, 5, 10, 11, 8]
 solution : [0, 3, 6]


Before backtrack at level 3
 pending : [9, 4, 1, 5, 10, 11, 8]
 solution : [0, 3, 6]

After backtrack at level 3
 pending : [9, 4, 1, 5, 10, 11, 8, 12]
 solution : [0, 3, 6]


Before backtrack at level 2
 pending : [9, 4, 1, 5, 10, 11, 8, 12]
 solution : [0, 3, 6]

After backtrack at level 2
 pending : [9, 4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3, 6]


Invert decision for 6 at level 1


New level: 2
 pending : [9, 4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3]


Before reduction : 
 pending  : [9, 4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Covered at level 2 : set()

After reduction : 
 pending  : [9, 4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3]


Solution : [0, 3] has cost 7.


Decide in level 2 among pending : [9, 4, 1, 5, 10, 11, 8, 12, 7, 2]

Coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

Decide 9 with phase True at level 2

After decision at level 2
 pending : [4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3, 9]


New level: 3
 pending : [4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3, 9]


Before reduction : 
 pending  : [4, 1, 5, 10, 11, 8, 12, 7, 2]
 solution : [0, 3, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 4), (8, 8), (9, 9), (10, 4), (11, 4), (12, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, 2), (9, -1), (10, 1), (11, 0), (12, 1)]

Covered at level 3 : {11}

After reduction : 
 pending  : [4, 1, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9]


Before reduction : 
 pending  : [4, 1, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, 2), (9, -1), (10, 1), (11, 0), (12, 1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

Covered at level 3 : set()

After reduction : 
 pending  : [4, 1, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9]


Solution : [0, 3, 9] has cost 17.


Decide in level 3 among pending : [4, 1, 5, 10, 8, 12, 7, 2]

Coverage : [(0, -1), (1, 8), (2, 2), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

Decide 1 with phase True at level 3

After decision at level 3
 pending : [4, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1]


New level: 4
 pending : [4, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1]


Before reduction : 
 pending  : [4, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 2), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, 2), (6, -1), (7, 1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 5, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1]


Solution : [0, 3, 9, 1] has cost 20.


Decide in level 4 among pending : [4, 5, 10, 8, 12, 7, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, 2), (6, -1), (7, 1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

Decide 5 with phase True at level 4

After decision at level 4
 pending : [4, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1, 5]


New level: 5
 pending : [4, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1, 5]


Before reduction : 
 pending  : [4, 10, 8, 12, 7, 2]
 solution : [0, 3, 9, 1, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, 2), (6, -1), (7, 1), (8, 2), (9, -1), (10, 1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, 1)]

Covered at level 5 : {8, 10, 7}

After reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 1, 5]


Before reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 1, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 1, 5]


Solution : [0, 3, 9, 1, 5] has cost 26.


Decide in level 5 among pending : [4, 12, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Decide 4 with phase True at level 5

After decision at level 5
 pending : [12, 2]
 solution : [0, 3, 9, 1, 5, 4]


New level: 6
 pending : [12, 2]
 solution : [0, 3, 9, 1, 5, 4]


Before reduction : 
 pending  : [12, 2]
 solution : [0, 3, 9, 1, 5, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

Covered at level 6 : {2, 12}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 4]


Solution : [0, 3, 9, 1, 5, 4] has cost 28.


Before backtrack at level 6
 pending : []
 solution : [0, 3, 9, 1, 5, 4]

After backtrack at level 6
 pending : [12, 2]
 solution : [0, 3, 9, 1, 5, 4]


Invert decision for 4 at level 5


New level: 6
 pending : [12, 2]
 solution : [0, 3, 9, 1, 5]


Before reduction : 
 pending  : [12, 2]
 solution : [0, 3, 9, 1, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 2]
 solution : [0, 3, 9, 1, 5]


Solution : [0, 3, 9, 1, 5] has cost 26.


Decide in level 6 among pending : [12, 2]

Coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [2]
 solution : [0, 3, 9, 1, 5, 12]


New level: 7
 pending : [2]
 solution : [0, 3, 9, 1, 5, 12]


Before reduction : 
 pending  : [2]
 solution : [0, 3, 9, 1, 5, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {2}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 12]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 12]


Solution : [0, 3, 9, 1, 5, 12] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 9, 1, 5, 12]

After backtrack at level 7
 pending : [2]
 solution : [0, 3, 9, 1, 5, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [2]
 solution : [0, 3, 9, 1, 5]


Before reduction : 
 pending  : [2]
 solution : [0, 3, 9, 1, 5]

Essensial at level 7 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 2]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 2]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 5, 2]


Solution : [0, 3, 9, 1, 5, 2] has cost 31.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 9, 1, 5, 2]

After backtrack at level 7
 pending : [2]
 solution : [0, 3, 9, 1, 5]


Before backtrack at level 6
 pending : [2]
 solution : [0, 3, 9, 1, 5]

After backtrack at level 6
 pending : [2, 12]
 solution : [0, 3, 9, 1, 5]


Before backtrack at level 5
 pending : [2, 12]
 solution : [0, 3, 9, 1, 5]

After backtrack at level 5
 pending : [2, 12, 10, 8, 7, 4]
 solution : [0, 3, 9, 1, 5]


Invert decision for 5 at level 4


New level: 5
 pending : [2, 12, 10, 8, 7, 4]
 solution : [0, 3, 9, 1]


Before reduction : 
 pending  : [2, 12, 10, 8, 7, 4]
 solution : [0, 3, 9, 1]

Essensial at level 5 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 1)]

Covered at level 5 : {10, 7}

After reduction : 
 pending  : [2, 12, 4]
 solution : [0, 3, 9, 1, 8]


Before reduction : 
 pending  : [2, 12, 4]
 solution : [0, 3, 9, 1, 8]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, 0), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Covered at level 5 : set()

After reduction : 
 pending  : [2, 12, 4]
 solution : [0, 3, 9, 1, 8]


Solution : [0, 3, 9, 1, 8] has cost 26.


Decide in level 5 among pending : [2, 12, 4]

Coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Decide 2 with phase True at level 5

After decision at level 5
 pending : [12, 4]
 solution : [0, 3, 9, 1, 8, 2]


New level: 6
 pending : [12, 4]
 solution : [0, 3, 9, 1, 8, 2]


Before reduction : 
 pending  : [12, 4]
 solution : [0, 3, 9, 1, 8, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

Covered at level 6 : {12, 4}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 2]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 2]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 2]


Solution : [0, 3, 9, 1, 8, 2] has cost 31.


Before backtrack at level 6
 pending : []
 solution : [0, 3, 9, 1, 8, 2]

After backtrack at level 6
 pending : [12, 4]
 solution : [0, 3, 9, 1, 8, 2]


Invert decision for 2 at level 5


New level: 6
 pending : [12, 4]
 solution : [0, 3, 9, 1, 8]


Before reduction : 
 pending  : [12, 4]
 solution : [0, 3, 9, 1, 8]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Covered at level 6 : set()

After reduction : 
 pending  : [12, 4]
 solution : [0, 3, 9, 1, 8]


Solution : [0, 3, 9, 1, 8] has cost 26.


Decide in level 6 among pending : [12, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Decide 12 with phase True at level 6

After decision at level 6
 pending : [4]
 solution : [0, 3, 9, 1, 8, 12]


New level: 7
 pending : [4]
 solution : [0, 3, 9, 1, 8, 12]


Before reduction : 
 pending  : [4]
 solution : [0, 3, 9, 1, 8, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : {4}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 12]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 12]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 12]


Solution : [0, 3, 9, 1, 8, 12] has cost 32.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 9, 1, 8, 12]

After backtrack at level 7
 pending : [4]
 solution : [0, 3, 9, 1, 8, 12]


Invert decision for 12 at level 6


New level: 7
 pending : [4]
 solution : [0, 3, 9, 1, 8]


Before reduction : 
 pending  : [4]
 solution : [0, 3, 9, 1, 8]

Essensial at level 7 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 1, 8, 4]


Solution : [0, 3, 9, 1, 8, 4] has cost 28.


Before backtrack at level 7
 pending : []
 solution : [0, 3, 9, 1, 8, 4]

After backtrack at level 7
 pending : [4]
 solution : [0, 3, 9, 1, 8]


Before backtrack at level 6
 pending : [4]
 solution : [0, 3, 9, 1, 8]

After backtrack at level 6
 pending : [4, 12]
 solution : [0, 3, 9, 1, 8]


Before backtrack at level 5
 pending : [4, 12]
 solution : [0, 3, 9, 1, 8]

After backtrack at level 5
 pending : [4, 12, 8, 10, 7, 2]
 solution : [0, 3, 9, 1]


Before backtrack at level 4
 pending : [4, 12, 8, 10, 7, 2]
 solution : [0, 3, 9, 1]

After backtrack at level 4
 pending : [4, 12, 8, 10, 7, 2, 5]
 solution : [0, 3, 9, 1]


Invert decision for 1 at level 3


New level: 4
 pending : [4, 12, 8, 10, 7, 2, 5]
 solution : [0, 3, 9]


Before reduction : 
 pending  : [4, 12, 8, 10, 7, 2, 5]
 solution : [0, 3, 9]

Essensial at level 4 : {5}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, 4), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, 1)]

Covered at level 4 : {8, 10, 7}

After reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 5]


Before reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, 4), (5, -1), (6, -1), (7, 0), (8, 0), (9, -1), (10, 0), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Covered at level 4 : set()

After reduction : 
 pending  : [4, 12, 2]
 solution : [0, 3, 9, 5]


Solution : [0, 3, 9, 5] has cost 23.


Decide in level 4 among pending : [4, 12, 2]

Coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [12, 2]
 solution : [0, 3, 9, 5, 4]


New level: 5
 pending : [12, 2]
 solution : [0, 3, 9, 5, 4]


Before reduction : 
 pending  : [12, 2]
 solution : [0, 3, 9, 5, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 2), (3, -1), (4, 4), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 1)]

After removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

Covered at level 5 : {2, 12}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 4]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, 0), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 4]


Solution : [0, 3, 9, 5, 4] has cost 25.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 9, 5, 4]

After backtrack at level 5
 pending : [12, 2]
 solution : [0, 3, 9, 5, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [12, 2]
 solution : [0, 3, 9, 5]


Before reduction : 
 pending  : [12, 2]
 solution : [0, 3, 9, 5]

Essensial at level 5 : {2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

Covered at level 5 : {12}

After reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 2]


Before reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 2]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 9, 5, 2]


Solution : [0, 3, 9, 5, 2] has cost 28.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 9, 5, 2]

After backtrack at level 5
 pending : [2, 12]
 solution : [0, 3, 9, 5]


Before backtrack at level 4
 pending : [2, 12]
 solution : [0, 3, 9, 5]

After backtrack at level 4
 pending : [2, 12, 5, 8, 10, 7, 4]
 solution : [0, 3, 9]


Before backtrack at level 3
 pending : [2, 12, 5, 8, 10, 7, 4]
 solution : [0, 3, 9]

After backtrack at level 3
 pending : [2, 12, 5, 8, 10, 7, 4, 11, 1]
 solution : [0, 3, 9]


Invert decision for 9 at level 2


New level: 3
 pending : [2, 12, 5, 8, 10, 7, 4, 11, 1]
 solution : [0, 3]


Before reduction : 
 pending  : [2, 12, 5, 8, 10, 7, 4, 11, 1]
 solution : [0, 3]

Essensial at level 3 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, -1), (9, -1), (10, 0), (11, 2), (12, 8)]

Covered at level 3 : {10}

After reduction : 
 pending  : [2, 12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8]


Before reduction : 
 pending  : [2, 12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, -1), (9, -1), (10, 0), (11, 2), (12, 8)]

After removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, 2), (12, 8)]

Covered at level 3 : set()

After reduction : 
 pending  : [2, 12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8]


Solution : [0, 3, 8] has cost 13.


Decide in level 3 among pending : [2, 12, 5, 7, 4, 11, 1]

Coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, 2), (12, 8)]

Decide 2 with phase True at level 3

After decision at level 3
 pending : [12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8, 2]


New level: 4
 pending : [12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8, 2]


Before reduction : 
 pending  : [12, 5, 7, 4, 11, 1]
 solution : [0, 3, 8, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 8), (2, 8), (3, -1), (4, 4), (5, 8), (6, -1), (7, 2), (8, -1), (9, -1), (10, -1), (11, 2), (12, 8)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, 1), (5, 8), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0)]

Covered at level 4 : {11, 12}

After reduction : 
 pending  : [5, 7, 4, 1]
 solution : [0, 3, 8, 2]


Before reduction : 
 pending  : [5, 7, 4, 1]
 solution : [0, 3, 8, 2]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, 1), (5, 8), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, 0), (12, 0)]

After removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, 1), (5, 8), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [5, 7, 4, 1]
 solution : [0, 3, 8, 2]


Solution : [0, 3, 8, 2] has cost 18.


Decide in level 4 among pending : [5, 7, 4, 1]

Coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, 1), (5, 8), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Decide 5 with phase True at level 4

After decision at level 4
 pending : [7, 4, 1]
 solution : [0, 3, 8, 2, 5]


New level: 5
 pending : [7, 4, 1]
 solution : [0, 3, 8, 2, 5]


Before reduction : 
 pending  : [7, 4, 1]
 solution : [0, 3, 8, 2, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 4), (2, -1), (3, -1), (4, 1), (5, 8), (6, -1), (7, 1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {1, 4, 7}

After reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 5]


Before reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 5]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, 0), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 5]


Solution : [0, 3, 8, 2, 5] has cost 24.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 8, 2, 5]

After backtrack at level 5
 pending : [7, 4, 1]
 solution : [0, 3, 8, 2, 5]


Invert decision for 5 at level 4


New level: 5
 pending : [7, 4, 1]
 solution : [0, 3, 8, 2]


Before reduction : 
 pending  : [7, 4, 1]
 solution : [0, 3, 8, 2]

Essensial at level 5 : {1}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : {4, 7}

After reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 1]


Before reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 1]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 8, 2, 1]


Solution : [0, 3, 8, 2, 1] has cost 21.


Before backtrack at level 5
 pending : []
 solution : [0, 3, 8, 2, 1]

After backtrack at level 5
 pending : [1, 7, 4]
 solution : [0, 3, 8, 2]


Before backtrack at level 4
 pending : [1, 7, 4]
 solution : [0, 3, 8, 2]

After backtrack at level 4
 pending : [1, 7, 4, 12, 11, 5]
 solution : [0, 3, 8, 2]


Invert decision for 2 at level 3


New level: 4
 pending : [1, 7, 4, 12, 11, 5]
 solution : [0, 3, 8]


Before reduction : 
 pending  : [1, 7, 4, 12, 11, 5]
 solution : [0, 3, 8]

Essensial at level 4 : {1, 12}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1)]

Covered at level 4 : {11, 4, 5, 7}

After reduction : 
 pending  : []
 solution : [0, 3, 8, 1, 12]


Before reduction : 
 pending  : []
 solution : [0, 3, 8, 1, 12]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 0), (6, -1), (7, 0), (8, -1), (9, -1), (10, -1), (11, 0), (12, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : []
 solution : [0, 3, 8, 1, 12]


Solution : [0, 3, 8, 1, 12] has cost 22.


Before backtrack at level 4
 pending : []
 solution : [0, 3, 8, 1, 12]

After backtrack at level 4
 pending : [1, 12, 7, 4, 11, 5]
 solution : [0, 3, 8]


Before backtrack at level 3
 pending : [1, 12, 7, 4, 11, 5]
 solution : [0, 3, 8]

After backtrack at level 3
 pending : [1, 12, 7, 4, 11, 5, 8, 10, 2]
 solution : [0, 3]


Before backtrack at level 2
 pending : [1, 12, 7, 4, 11, 5, 8, 10, 2]
 solution : [0, 3]

After backtrack at level 2
 pending : [1, 12, 7, 4, 11, 5, 8, 10, 2, 9]
 solution : [0, 3]


Before backtrack at level 1
 pending : [1, 12, 7, 4, 11, 5, 8, 10, 2, 9]
 solution : [0, 3]

After backtrack at level 1
 pending : [1, 12, 7, 4, 11, 5, 8, 10, 2, 9, 6]
 solution : [0, 3]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=2]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 21

[MIN NOTE]: maximum branch and bound depth: 7

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 3, 8, 2, 1]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_3] forall NODE0,NODE1. sent(NODE1,NODE0) | ~allowed_in(NODE0) | NODE0 = NODE1 # qcost: 5

invariant [invar_8] forall NODE0,NODE1. allowed_in(NODE1) | allowed_in(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_2] forall NODE0,NODE1. internal(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1 # qcost: 5

invariant [invar_1] forall NODE0. ~allowed_in(NODE0) | ~internal(NODE0) # qcost: 3

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 21




[QRM NOTE]: Time elapsed since start: 0.314 seconds

[QRM NOTE]: Time elapsed since last: 0.115 seconds

[QRM NOTE]: Peak memory: 1817547 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=2]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_2.0.ivy -s node=3 -f 2 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_2.0.ivy: node=3]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 15

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 6

[FW NOTE]: number of branching actions: 18

ivy_to_cpp target=qrm firewall.node_3.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_3.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_3.finite.cpp firewall.node_3.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_3.finite.o firewall.node_3.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.012 seconds

[QRM NOTE]: Time elapsed since last: 7.012 seconds

[QRM NOTE]: Peak memory: 1180822 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 4

[FW NOTE]: number of total reachable states:        68

[FW NOTE]: number of dfs representative states:     16

[FW NOTE]: number of dfs non-representative states: 52


====================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.node_2.0.ivy: node=3]

====================================================================================================

sort: node=['node0', 'node1', 'node2']
predicate: internal('node',)
predicate: sent('node', 'node')
predicate: allowed_in('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)']
representative states : 0, 3584, 1536, 512, 7176, 7240, 7242, 7246, 7178, 7182, 7180, 5128, 14528, 14532, 14564, 5130


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000
lex min decimal: 0
states:
000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000111000000000
lex min decimal: 3584
states:
000111000000000




=== State Orbit 2 =====================
size : 3
repr state: 000101000000000
lex min decimal: 1536
states:
000110000000000
000101000000000
000011000000000




=== State Orbit 3 =====================
size : 3
repr state: 000100000000000
lex min decimal: 512
states:
000100000000000
000001000000000
000010000000000




=== State Orbit 4 =====================
size : 6
repr state: 010101010000000
lex min decimal: 7176
states:
001110001000000
100011000100000
001110000001000
100011000000100
010101000000010
010101010000000




=== State Orbit 5 =====================
size : 3
repr state: 010101010000010
lex min decimal: 7240
states:
100011000100100
001110001001000
010101010000010




=== State Orbit 6 =====================
size : 6
repr state: 010101010100010
lex min decimal: 7242
states:
100011010100100
010101010001010
001110001001010
001110001001100
010101010100010
100011001100100




=== State Orbit 7 =====================
size : 3
repr state: 010101010101010
lex min decimal: 7246
states:
100011011100100
010101010101010
001110001001110




=== State Orbit 8 =====================
size : 6
repr state: 010101010100000
lex min decimal: 7178
states:
100011001000100
010101010100000
010101000001010
001110000001010
001110001000100
100011010100000




=== State Orbit 9 =====================
size : 6
repr state: 010101010101000
lex min decimal: 7182
states:
001110000001110
100011011000100
001110001000110
010101010101000
100011011100000
010101000101010




=== State Orbit 10 =====================
size : 6
repr state: 010101010001000
lex min decimal: 7180
states:
010101000100010
100011001100000
100011010000100
010101010001000
001110001000010
001110000001100




=== State Orbit 11 =====================
size : 6
repr state: 010100010000000
lex min decimal: 5128
states:
010100010000000
001100001000000
100010000100000
001010000001000
100001000000100
010001000000010




=== State Orbit 12 =====================
size : 3
repr state: 011100011000000
lex min decimal: 14528
states:
011100011000000
101010000101000
110001000000110




=== State Orbit 13 =====================
size : 6
repr state: 011100011100000
lex min decimal: 14532
states:
101010010101000
011100011000100
011100011100000
101010000101010
110001000001110
110001001000110




=== State Orbit 14 =====================
size : 3
repr state: 011100011100100
lex min decimal: 14564
states:
110001001001110
101010010101010
011100011100100




=== State Orbit 15 =====================
size : 6
repr state: 010100010100000
lex min decimal: 5130
states:
010100010100000
100010010100000
001010000001010
001100001000100
100001001000100
010001000001010



[QRM NOTE]: Time elapsed since start: 7.124 seconds

[QRM NOTE]: Time elapsed since last: 0.112 seconds

[QRM NOTE]: Peak memory: 1228722 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_2.0.ivy: node=3]

=========================================================================================================================

Representatitive states in reachability not in Rmin

{14528, 14564, 14532, 7176, 5128, 7178, 5130, 7180, 7182}

[REACH_CHECK RESULT]: FAIL

[QRM NOTE]: Time elapsed since start: 7.158 seconds

[QRM NOTE]: Time elapsed since last: 0.034 seconds

[QRM NOTE]: Peak memory: 196824 bytes

next size: node=3


******************************************************************************

	[Synthesize Rmin]: [ivybench/sym/ivy/firewall.ivy: node=3]

******************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.ivy -s node=3 -f 1 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


---------- Initializing reachability from file ----------

OK


======================================

	Reduce Equivalent Atoms

======================================

[FW NOTE]: equivalent atoms

[FW NOTE]: complement atoms

[FW NOTE]: remove_atom_ids: set()

[QRM NOTE]: Time elapsed since start: 0.018 seconds

[QRM NOTE]: Time elapsed since last: 0.018 seconds

[QRM NOTE]: Peak memory: 19660 bytes


===========================================================================================

	[PRIME]: Prime Orbit Generatation on [ivybench/sym/ivy/firewall.ivy: node=3]

===========================================================================================


======================================================================================

	[PRIME RESULT]: Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

======================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : -1-----0-----0-
6     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
7     : --1-----0--0---
7     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
8     : 1--------0--0--
8     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
9 (*) : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : -0-1---1-------
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
11     : --0-1------1---
11     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
12     : 0---1----1-----
12     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
13     : -0---1-------1-
13     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
14     : 0----1------1--
14     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
39 (*) : 0----1--1------
39     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
40     : 0---1--1-------
40     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
41     : -0---1-----1---
41     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
42     : -0-1-----1-----
42     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
43     : --0-1--------1-
43     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
44     : --01--------1--
44     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 0-0-----1------
15     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
16     : 00-----1-------
16     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
17     : -00--------1---
17     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
18     : 00-------1-----
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
19     : -00----------1-
19     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
20     : 0-0---------1--
20     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
21 (*) : --10----1------
21     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
22     : -1-0---1-------
22     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
23     : --1-0------1---
23     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
24     : 1---0----1-----
24     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
25     : -1---0-------1-
25     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
26     : 1----0------1--
26     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
51 (*) : 1----0--1------
51     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
52     : 1---0--1-------
52     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
53     : -1---0-----1---
53     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
54     : -1-0-----1-----
54     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
55     : --1-0--------1-
55     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
56     : --10--------1--
56     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
27 (*) : 1-1-----1------
27     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
28     : 11-----1-------
28     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
29     : -11--------1---
29     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
30     : 11-------1-----
30     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
31     : -11----------1-
31     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
32     : 1-1---------1--
32     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
33 (*) : 0--0----1------
33     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
34     : 0--0---1-------
34     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
35     : -0--0------1---
35     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
36     : -0--0----1-----
36     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
37     : --0--0-------1-
37     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
38     : --0--0------1--
38     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
63 (*) : --0--0--1------
63     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
64     : -0--0--1-------
64     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
65     : --0--0-----1---
65     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
66     : 0--0-----1-----
66     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
67     : -0--0--------1-
67     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
68     : 0--0--------1--
68     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
45 (*) : ---1-1--1------
45     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
46     : ---11--1-------
46     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
47     : ----11-----1---
47     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
48     : ---11----1-----
48     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
49     : ----11-------1-
49     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
50     : ---1-1------1--
50     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
57 (*) : ---0-0--1------
57     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
58     : ---00--1-------
58     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
59     : ----00-----1---
59     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
60     : ---00----1-----
60     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
61     : ----00-------1-
61     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
62     : ---0-0------1--
62     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
69 (*) : 1---0-------0--
69     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
70     : 1----0---0-----
70     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
71     : -1-0---------0-
71     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
72     : -1---0-0-------
72     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
73     : --10-------0---
73     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
74     : --1-0---0------
74     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
75 (*) : 1---00---------
75     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
76     : -1-0-0---------
76     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
77     : --100----------
77     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
78 (*) : 1-1-0----------
78     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
79     : 11---0---------
79     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
80     : -110-----------
80     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
81 (*) : 11-----------0-
81     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
82     : 1-1--------0---
82     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
83     : 11----------0--
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
84     : -11-----0------
84     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
85     : 1-1------0-----
85     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
86     : -11----0-------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
87 (*) : 111------------
87     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 15 =====================
size : 8
num_suborbits: 2
88 (*) : -------11----1-
88     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
89     : -------11--1---
89     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
90     : ---------1-11--
90     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
91     : --------11-1---
91     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
92     : ---------1--11-
92     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
93     : -------1----11-
93     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 0-1----1---1---
96     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 01------1----1-
97     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : -01-----11-----
98     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
99     : 10---------11--
99     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : -10----1----1--
100     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
101     : 1-0------1---1-
101     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
138 (*) : 0-1------1-1---
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
139     : 01----------11-
139     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
140     : -01----11------
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
141     : 10----------11-
141     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
142     : -10----11------
142     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
143     : 1-0------1-1---
143     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
270 (*) : 1-0----1---1---
270     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
271     : 10------1----1-
271     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
272     : -10-----11-----
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
273     : 01---------11--
273     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
274     : -01----1----1--
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
275     : 0-1------1---1-
275     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
288 (*) : 1-0----1-----1-
288     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
289     : 10------1--1---
289     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
290     : -10------1--1--
290     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
291     : 01------1--1---
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
292     : -01------1--1--
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
293     : 0-1----1-----1-
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : --11---1---1---
102     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : -1-1----1----1-
103     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : --1-1---11-----
104     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : 1---1------11--
105     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : -1---1-1----1--
106     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : 1----1---1---1-
107     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
144 (*) : --11-----1-1---
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
145     : -1-1--------11-
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
146     : --1-1--11------
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
147     : 1---1-------11-
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
148     : -1---1-11------
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
149     : 1----1---1-1---
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
282 (*) : 1----1-1---1---
282     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
283     : 1---1---1----1-
283     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
284     : -1---1--11-----
284     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
285     : -1-1-------11--
285     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
286     : --1-1--1----1--
286     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
287     : --11-----1---1-
287     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
300 (*) : 1----1-1-----1-
300     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
301     : 1---1---1--1---
301     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
302     : -1---1---1--1--
302     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
303     : -1-1----1--1---
303     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
304     : --1-1----1--1--
304     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
305     : --11---1-----1-
305     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
108 (*) : --00---1---1---
108     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
109     : -0-0----1----1-
109     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
110     : --0-0---11-----
110     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
111     : 0---0------11--
111     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
112     : -0---0-1----1--
112     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
113     : 0----0---1---1-
113     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
114 (*) : --00-----1-1---
114     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
115     : -0-0--------11-
115     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
116     : --0-0--11------
116     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
117     : 0---0-------11-
117     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
118     : -0---0-11------
118     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
119     : 0----0---1-1---
119     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
132 (*) : 0----0-1---1---
132     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
133     : 0---0---1----1-
133     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
134     : -0---0--11-----
134     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
135     : -0-0-------11--
135     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
136     : --0-0--1----1--
136     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
137     : --00-----1---1-
137     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
336 (*) : 0----0-1-----1-
336     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
337     : 0---0---1--1---
337     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
338     : -0---0---1--1--
338     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
339     : -0-0----1--1---
339     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
340     : --0-0----1--1--
340     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
341     : --00---1-----1-
341     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
120 (*) : ---1-0---1-1---
120     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
121     : ---10-------11-
121     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
122     : ----10-11------
122     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
123     : ---01-------11-
123     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
124     : ----01-11------
124     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
125     : ---0-1---1-1---
125     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
126 (*) : ---1-0-1---1---
126     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
127     : ---10---1----1-
127     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
128     : ----10--11-----
128     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
129     : ---01------11--
129     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
130     : ----01-1----1--
130     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
131     : ---0-1---1---1-
131     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ---0-1-1---1---
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
265     : ---01---1----1-
265     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
266     : ----01--11-----
266     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
267     : ---10------11--
267     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
268     : ----10-1----1--
268     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
269     : ---1-0---1---1-
269     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 20 =====================
size : 12
num_suborbits: 2
150 (*) : -0-----1-0-1---
150     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
151     : --0-----1---01-
151     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
152     : 0------011-----
152     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
153     : --0--------110-
153     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
154     : 0------10---1--
154     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
155     : -0-------1-0-1-
155     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
318 (*) : -0-----1-0---1-
318     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
319     : --0-----1--10--
319     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
320     : 0------0-1--1--
320     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
321     : --0-----1--1-0-
321     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
322     : 0-------01--1--
322     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
323     : -0-----1---0-1-
323     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
156 (*) : -----0-1-0-1---
156     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
157     : ----0---1---01-
157     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
158     : -----0-011-----
158     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
159     : ---0-------110-
159     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
160     : ----0--10---1--
160     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
161     : ---0-----1-0-1-
161     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0-1---
258     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1---01-
259     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--011-----
260     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0------110-
261     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0-10---1--
262     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0---1-0-1-
263     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
312 (*) : -----0-1-0---1-
312     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
313     : ----0---1--10--
313     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
314     : -----0-0-1--1--
314     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
315     : ---0----1--1-0-
315     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
316     : ----0---01--1--
316     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
317     : ---0---1---0-1-
317     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
330 (*) : ---0---1-0---1-
330     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
331     : ---0----1--10--
331     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
332     : ----0--0-1--1--
332     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
333     : ----0---1--1-0-
333     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
334     : -----0--01--1--
334     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
335     : -----0-1---0-1-
335     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 22 =====================
size : 12
num_suborbits: 2
162 (*) : ----1--1-0-1---
162     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
163     : -----1--1---01-
163     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
164     : ---1---011-----
164     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
165     : -----1-----110-
165     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
166     : ---1---10---1--
166     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
167     : ----1----1-0-1-
167     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
324 (*) : ----1--1-0---1-
324     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
325     : -----1--1--10--
325     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
326     : ---1---0-1--1--
326     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
327     : -----1--1--1-0-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
328     : ---1----01--1--
328     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
329     : ----1--1---0-1-
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
168 (*) : --1----1-0-1---
168     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -1------1---01-
169     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : --1----011-----
170     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : 1----------110-
171     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : -1-----10---1--
172     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : 1--------1-0-1-
173     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
276 (*) : 1------1-0-1---
276     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
277     : 1-------1---01-
277     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
278     : -1-----011-----
278     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
279     : -1---------110-
279     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
280     : --1----10---1--
280     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
281     : --1------1-0-1-
281     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
294 (*) : 1------1-0---1-
294     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
295     : 1-------1--10--
295     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
296     : -1-----0-1--1--
296     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
297     : -1------1--1-0-
297     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : --1-----01--1--
298     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : --1----1---0-1-
299     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : ----10-1-0-----
174     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
175     : ----01--1---0--
175     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
176     : ---1-0-0-1-----
176     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-1-----1-0-
177     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
178     : ---10---0---1--
178     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---01------0-1-
179     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
180 (*) : ----1--1-0--0--
180     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
181     : -----1--10--0--
181     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
182     : ---1---0-1---0-
182     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
183     : -----1-0---1-0-
183     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
184     : ---1----0--01--
184     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
185     : ----1---0--0-1-
185     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 26 =====================
size : 18
num_suborbits: 3
186 (*) : --1-1--1-0-----
186     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
187     : -1---1--1---0--
187     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
188     : --11---0-1-----
188     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
189     : 1----1-----1-0-
189     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
190     : -1-1----0---1--
190     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
191     : 1---1------0-1-
191     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : --11---10------
222     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
223     : -1-1---01------
223     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
224     : --1-1----1-0---
224     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
225     : 1---1----0-1---
225     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -1---1------10-
226     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : 1----1------01-
227     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
234 (*) : --11----01-----
234     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
235     : -1-1---0----1--
235     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
236     : --1-1--1---0---
236     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
237     : 1---1----0---1-
237     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
238     : -1---1--1----0-
238     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
239     : 1----1-----10--
239     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
192 (*) : -0-----1-0--0--
192     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
193     : --0-----10--0--
193     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
194     : 0------0-1---0-
194     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
195     : --0----0---1-0-
195     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
196     : 0-------0--01--
196     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
197     : -0------0--0-1-
197     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
198 (*) : -0---0-1-0-----
198     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
199     : --0-0---1---0--
199     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
200     : 0----0-0-1-----
200     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
201     : --00-------1-0-
201     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
202     : 0---0---0---1--
202     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
203     : -0-0-------0-1-
203     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
204 (*) : --1----100-----
204     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
205     : -1-----01---0--
205     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
206     : --1----0-1-0---
206     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
207     : 1--------0-1-0-
207     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
208     : -1------0---10-
208     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
209     : 1----------001-
209     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 3
210 (*) : -01----1-0-----
210     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
211     : -10-----1---0--
211     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
212     : 0-1----0-1-----
212     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
213     : 1-0--------1-0-
213     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
214     : 01------0---1--
214     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
215     : 10---------0-1-
215     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
216 (*) : 0-1----10------
216     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 01-----01------
217     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -01------1-0---
218     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : 10-------0-1---
219     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : -10---------10-
220     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : 1-0---------01-
221     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
228 (*) : 0-1-----01-----
228     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
229     : 01-----0----1--
229     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
230     : -01----1---0---
230     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
231     : 10-------0---1-
231     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
232     : -10-----1----0-
232     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
233     : 1-0--------10--
233     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
240 (*) : --1-0--0-1-----
240     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
241     : -1---0--0---1--
241     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
242     : --10---1-0-----
242     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
243     : 1----0-----0-1-
243     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
244     : -1-0----1---0--
244     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
245     : 1---0------1-0-
245     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
246 (*) : ----00-0-1-----
246     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
247     : ----00--0---1--
247     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
248     : ---0-0-1-0-----
248     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
249     : ---0-0-----0-1-
249     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
250     : ---00---1---0--
250     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
251     : ---00------1-0-
251     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
252 (*) : ---0---1-0--0--
252     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
253     : ---0----10--0--
253     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
254     : ----0--0-1---0-
254     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
255     : ----0--0---1-0-
255     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
256     : -----0--0--01--
256     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
257     : -----0--0--0-1-
257     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0



[PRIME NOTE]: number of orbits after merging: 34

[PRIME NOTE]: number of orbits before merging: 62

[PRIME NOTE]: number of primes: 348

[QRM NOTE]: Time elapsed since start: 0.090 seconds

[QRM NOTE]: Time elapsed since last: 0.072 seconds

[QRM NOTE]: Peak memory: 1387842 bytes


================================================================================

	[RED]: PRIME REDUCTION on [ivybench/sym/ivy/firewall.ivy: node=3]

================================================================================

definition primes: set()


New level: 0
 pending : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []


Before reduction : 
 pending  : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : []

Essensial at level 0 : {0, 2}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]

Essensial at level 0 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 0 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]

[QRM NOTE]: Time elapsed since start: 0.106 seconds

[QRM NOTE]: Time elapsed since last: 0.016 seconds

[QRM NOTE]: Peak memory: 327709 bytes


====================================================================================

	[QI]: Quantifier Inference on [ivybench/sym/ivy/firewall.ivy: node=3]

====================================================================================


---------- quantifier_inference ----------


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node2,node2)']

sign_func_name2args: {'0$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node2,node2)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$0$sent$1': [node$0$sent$0$0; node$0$sent$1$0]}

	identical_single_classes: {'node$0$sent$0; node$0$sent$1': node$0$sent$0$0; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~sent(NODE0,NODE0)


=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : -1-----0-----0-
6     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
7     : --1-----0--0---
7     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
8     : 1--------0--0--
8     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0; node$1$sent$1$1}

	identical_multi_classes: {'node$1$sent$0': [node$1$sent$0$0, node$1$sent$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))


=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'internal(node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$internal$0': [node$0$allowed_in$0$0; node$0$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$internal$0': node$0$allowed_in$0$0; node$0$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)


=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
9 (*) : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : -0-1---1-------
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
11     : --0-1------1---
11     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
12     : 0---1----1-----
12     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
13     : -0---1-------1-
13     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
14     : 0----1------1--
14     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
39 (*) : 0----1--1------
39     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
40     : 0---1--1-------
40     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
41     : -0---1-----1---
41     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
42     : -0-1-----1-----
42     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
43     : --0-1--------1-
43     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
44     : --01--------1--
44     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', 'internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', 'internal(NODE0)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE1. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))


=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 0-0-----1------
15     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
16     : 00-----1-------
16     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
17     : -00--------1---
17     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
18     : 00-------1-----
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
19     : -00----------1-
19     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
20     : 0-0---------1--
20     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$1$0; node$1$allowed_in$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$1$0; node$1$allowed_in$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$allowed_in$0': [node$0$sent$0$0; node$1$allowed_in$0$0], 'node$0$sent$1; node$1$allowed_in$0': [node$0$sent$1$0; node$1$allowed_in$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$allowed_in$0': node$0$sent$0$0; node$1$allowed_in$0$0, 'node$0$sent$1; node$1$allowed_in$0': node$0$sent$1$0; node$1$allowed_in$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', '~allowed_in(NODE0)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1


=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
21 (*) : --10----1------
21     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
22     : -1-0---1-------
22     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
23     : --1-0------1---
23     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
24     : 1---0----1-----
24     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
25     : -1---0-------1-
25     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
26     : 1----0------1--
26     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
51 (*) : 1----0--1------
51     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
52     : 1---0--1-------
52     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
53     : -1---0-----1---
53     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
54     : -1-0-----1-----
54     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
55     : --1-0--------1-
55     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
56     : --10--------1--
56     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$0, node$0$sent$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$1$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$1$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)', '~internal(NODE3)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE1. ~allowed_in(NODE0) | internal(NODE3) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))


=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
27 (*) : 1-1-----1------
27     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
28     : 11-----1-------
28     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
29     : -11--------1---
29     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
30     : 11-------1-----
30     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
31     : -11----------1-
31     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
32     : 1-1---------1--
32     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$allowed_in$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$allowed_in$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$0$sent$0': [node$0$allowed_in$0$0; node$0$sent$0$0], 'node$0$allowed_in$0; node$0$sent$1': [node$0$allowed_in$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$0$sent$0': node$0$allowed_in$0$0; node$0$sent$0$0, 'node$0$allowed_in$0; node$0$sent$1': node$0$allowed_in$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', 'allowed_in(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE0,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1


=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
33 (*) : 0--0----1------
33     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
34     : 0--0---1-------
34     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
35     : -0--0------1---
35     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
36     : -0--0----1-----
36     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
37     : --0--0-------1-
37     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
38     : --0--0------1--
38     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
63 (*) : --0--0--1------
63     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
64     : -0--0--1-------
64     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
65     : --0--0-----1---
65     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
66     : 0--0-----1-----
66     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
67     : -0--0--------1-
67     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
68     : 0--0--------1--
68     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0; node$1$internal$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$internal$0$0, node$0$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', '~internal(node0)', 'sent(node0,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$internal$0': [node$1$allowed_in$0$0; node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$internal$0': node$1$allowed_in$0$0; node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE0,NODE1)', '~internal(NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. allowed_in(NODE2) | ~sent(NODE0,NODE1) | internal(NODE2) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))


=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
45 (*) : ---1-1--1------
45     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
46     : ---11--1-------
46     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
47     : ----11-----1---
47     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
48     : ---11----1-----
48     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
49     : ----11-------1-
49     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
50     : ---1-1------1--
50     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$internal$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$internal$0$1; node$0$sent$1$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$0': [node$0$internal$0$0; node$0$sent$0$0], 'node$0$internal$0; node$0$sent$1': [node$0$internal$0$1; node$0$sent$1$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$0': node$0$internal$0$0; node$0$sent$0$0, 'node$0$internal$0; node$0$sent$1': node$0$internal$0$1; node$0$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', 'internal(NODE1)', 'internal(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. ~sent(NODE0,NODE1) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1


=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
57 (*) : ---0-0--1------
57     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
58     : ---00--1-------
58     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
59     : ----00-----1---
59     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
60     : ---00----1-----
60     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
61     : ----00-------1-
61     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
62     : ---0-0------1--
62     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', '~internal(node2)', 'sent(node0,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', '~internal(node2)', 'sent(node0,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$1$0; node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$1$0; node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0': [node$0$sent$0$0; node$1$internal$0$0], 'node$0$sent$1; node$1$internal$0': [node$0$sent$1$0; node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0': node$0$sent$0$0; node$1$internal$0$0, 'node$0$sent$1; node$1$internal$0': node$0$sent$1$0; node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~internal(NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1


=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
69 (*) : 1---0-------0--
69     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
70     : 1----0---0-----
70     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
71     : -1-0---------0-
71     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
72     : -1---0-0-------
72     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
73     : --10-------0---
73     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
74     : --1-0---0------
74     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$1$internal$0$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$1$internal$0$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE0)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
75 (*) : 1---00---------
75     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
76     : -1-0-0---------
76     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
77     : --100----------
77     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

part_sig: ('node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$1$internal$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$1$internal$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0}

	identical_multi_classes: {'node$1$internal$0': [node$1$internal$0$0, node$1$internal$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', 'allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
78 (*) : 1-1-0----------
78     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
79     : 11---0---------
79     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
80     : -110-----------
80     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 2, '1$internal': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall_exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))


=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
81 (*) : 11-----------0-
81     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
82     : 1-1--------0---
82     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
83     : 11----------0--
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
84     : -11-----0------
84     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
85     : 1-1------0-----
85     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
86     : -11----0-------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1; node$1$sent$1$0, node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1; node$1$sent$1$0 | node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$1; node$1$sent$1$0], 'node$1$sent$0': [node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$1; node$1$sent$1$0, 'node$1$sent$0': node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE1)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. ~allowed_in(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
87 (*) : 111------------
87     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$2]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

part_sig: ('node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2',)


---------- SigGenerator ----------

terms:  ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),)}

sign_func_name2count:  {'0$allowed_in': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$allowed_in$0$1 | node$0$allowed_in$0$2}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0, node$0$allowed_in$0$1, node$0$allowed_in$0$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.exists


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: set()

exists_qvars: {Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['allowed_in(NODE0)']


---------- QFormula: get_qclause ----------

qclause: exists NODE0. ~allowed_in(NODE0)


=== Prime Orbit 15 =====================
size : 8
num_suborbits: 2
88 (*) : -------11----1-
88     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
89     : -------11--1---
89     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
90     : ---------1-11--
90     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
91     : --------11-1---
91     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
92     : ---------1--11-
92     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
93     : -------1----11-
93     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$2], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1, node$0$sent$0$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$0$2; node$0$sent$1$1, node$0$sent$1$0; node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$0$2; node$0$sent$1$1 | node$0$sent$1$0; node$0$sent$1$2',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$2], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1, node$0$sent$1$2]}

sig2const: {'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$2': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$2': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$2, node$0$sent$0$2; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0}

part_sig: ('node$0$sent$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$2 | node$0$sent$0$2; node$0$sent$1$0',)


---------- SigGenerator ----------

terms:  ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']

func_name2symbol:  {'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$sent': 3}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2, node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$0$2 | node$0$sent$1$0 | node$0$sent$1$1 | node$0$sent$1$2}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}

	identical_single_classes: {}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$0$2], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1, node$0$sent$1$2]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE4)', 'sent(NODE2,NODE5)', 'sent(NODE0,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 0-1----1---1---
96     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 01------1----1-
97     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : -01-----11-----
98     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
99     : 10---------11--
99     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : -10----1----1--
100     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
101     : 1-0------1---1-
101     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
138 (*) : 0-1------1-1---
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
139     : 01----------11-
139     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
140     : -01----11------
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
141     : 10----------11-
141     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
142     : -10----11------
142     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
143     : 1-0------1-1---
143     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
270 (*) : 1-0----1---1---
270     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
271     : 10------1----1-
271     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
272     : -10-----11-----
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
273     : 01---------11--
273     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
274     : -01----1----1--
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
275     : 0-1------1---1-
275     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
288 (*) : 1-0----1-----1-
288     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
289     : 10------1--1---
289     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
290     : -10------1--1--
290     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
291     : 01------1--1---
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
292     : -01------1--1--
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
293     : 0-1----1-----1-
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', '~allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$allowed_in$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$allowed_in$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$1$allowed_in$0': node$1$allowed_in$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE5)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3))


=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : --11---1---1---
102     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : -1-1----1----1-
103     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : --1-1---11-----
104     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : 1---1------11--
105     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : -1---1-1----1--
106     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : 1----1---1---1-
107     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
144 (*) : --11-----1-1---
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
145     : -1-1--------11-
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
146     : --1-1--11------
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
147     : 1---1-------11-
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
148     : -1---1-11------
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
149     : 1----1---1-1---
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
282 (*) : 1----1-1---1---
282     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
283     : 1---1---1----1-
283     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
284     : -1---1--11-----
284     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
285     : -1-1-------11--
285     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
286     : --1-1--1----1--
286     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
287     : --11-----1---1-
287     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
300 (*) : 1----1-1-----1-
300     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
301     : 1---1---1--1---
301     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
302     : -1---1---1--1--
302     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
303     : -1-1----1--1---
303     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
304     : --1-1----1--1--
304     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
305     : --11---1-----1-
305     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0, node$0$internal$0$0; node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0 | node$0$internal$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0': node$0$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)', 'sent(NODE3,NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4))


=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
108 (*) : --00---1---1---
108     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
109     : -0-0----1----1-
109     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
110     : --0-0---11-----
110     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
111     : 0---0------11--
111     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
112     : -0---0-1----1--
112     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
113     : 0----0---1---1-
113     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
114 (*) : --00-----1-1---
114     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
115     : -0-0--------11-
115     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
116     : --0-0--11------
116     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
117     : 0---0-------11-
117     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
118     : -0---0-11------
118     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
119     : 0----0---1-1---
119     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
132 (*) : 0----0-1---1---
132     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
133     : 0---0---1----1-
133     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
134     : -0---0--11-----
134     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
135     : -0-0-------11--
135     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
136     : --0-0--1----1--
136     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
137     : --00-----1---1-
137     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
336 (*) : 0----0-1-----1-
336     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
337     : 0---0---1--1---
337     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
338     : -0---0---1--1--
338     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
339     : -0-0----1--1---
339     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
340     : --0-0----1--1--
340     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
341     : --00---1-----1-
341     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node2)', '~internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$0; node$1$internal$0$0, node$0$sent$1$1; node$1$allowed_in$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0}

part_sig: ('node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$0; node$1$internal$0$0 | node$0$sent$1$1; node$1$allowed_in$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$allowed_in$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$allowed_in$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node2)', '~internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$allowed_in$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$allowed_in$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$allowed_in$0': [node$1$allowed_in$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$1$allowed_in$0': node$1$allowed_in$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE4)', 'sent(NODE0,NODE2)', '~internal(NODE5)', 'sent(NODE1,NODE3)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. allowed_in(NODE4) | ~sent(NODE0,NODE2) | internal(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
120 (*) : ---1-0---1-1---
120     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
121     : ---10-------11-
121     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
122     : ----10-11------
122     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
123     : ---01-------11-
123     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
124     : ----01-11------
124     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
125     : ---0-1---1-1---
125     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
126 (*) : ---1-0-1---1---
126     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
127     : ---10---1----1-
127     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
128     : ----10--11-----
128     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
129     : ---01------11--
129     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
130     : ----01-1----1--
130     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
131     : ---0-1---1---1-
131     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ---0-1-1---1---
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
265     : ---01---1----1-
265     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
266     : ----01--11-----
266     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
267     : ---10------11--
267     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
268     : ----10-1----1--
268     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
269     : ---1-0---1---1-
269     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0, node$0$sent$0$0; node$0$sent$0$1, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0 | node$0$sent$0$0; node$0$sent$0$1 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$0$sent$1$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$0$sent$1$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$internal$0$0, node$0$sent$0$1; node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$internal$0$0 | node$0$sent$0$1; node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node0)', '~internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1',)


---------- SigGenerator ----------

terms:  ['internal(node0)', '~internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0, node$0$sent$0$0, node$0$sent$0$1, node$0$sent$1$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0 | node$0$sent$0$0 | node$0$sent$0$1 | node$0$sent$1$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0': [node$0$internal$0$0], 'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0': node$0$internal$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {'node$0$sent$0': [node$0$sent$0$0, node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$0, node$0$sent$1$1]}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE5', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE1,NODE3)', 'sent(NODE2,NODE4)', 'internal(NODE0)', '~internal(NODE5)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~internal(NODE0) | internal(NODE5) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3))


=== Prime Orbit 20 =====================
size : 12
num_suborbits: 2
150 (*) : -0-----1-0-1---
150     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
151     : --0-----1---01-
151     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
152     : 0------011-----
152     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
153     : --0--------110-
153     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
154     : 0------10---1--
154     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
155     : -0-------1-0-1-
155     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
318 (*) : -0-----1-0---1-
318     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
319     : --0-----1--10--
319     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
320     : 0------0-1--1--
320     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
321     : --0-----1--1-0-
321     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
322     : 0-------01--1--
322     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
323     : -0-----1---0-1-
323     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE2)', 'sent(NODE1,NODE3)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE1. allowed_in(NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | ((NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
156 (*) : -----0-1-0-1---
156     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
157     : ----0---1---01-
157     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
158     : -----0-011-----
158     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
159     : ---0-------110-
159     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
160     : ----0--10---1--
160     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
161     : ---0-----1-0-1-
161     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0-1---
258     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1---01-
259     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--011-----
260     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0------110-
261     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0-10---1--
262     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0---1-0-1-
263     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
312 (*) : -----0-1-0---1-
312     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
313     : ----0---1--10--
313     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
314     : -----0-0-1--1--
314     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
315     : ---0----1--1-0-
315     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
316     : ----0---01--1--
316     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
317     : ---0---1---0-1-
317     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
330 (*) : ---0---1-0---1-
330     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
331     : ---0----1--10--
331     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
332     : ----0--0-1--1--
332     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
333     : ----0---1--1-0-
333     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
334     : -----0--01--1--
334     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
335     : -----0-1---0-1-
335     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1; node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1; node$1$internal$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$1$internal$0$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$1$internal$0$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE2)', 'sent(NODE1,NODE3)', '~sent(NODE2,NODE0)', '~internal(NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | internal(NODE4) | ((NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 22 =====================
size : 12
num_suborbits: 2
162 (*) : ----1--1-0-1---
162     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
163     : -----1--1---01-
163     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
164     : ---1---011-----
164     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
165     : -----1-----110-
165     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
166     : ---1---10---1--
166     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
167     : ----1----1-0-1-
167     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
324 (*) : ----1--1-0---1-
324     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
325     : -----1--1--10--
325     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
326     : ---1---0-1--1--
326     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
327     : -----1--1--1-0-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
328     : ---1----01--1--
328     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
329     : ----1--1---0-1-
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1}

part_sig: ('node$0$internal$0$0; node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE0)', 'sent(NODE2,NODE3)', 'sent(NODE1,NODE0)', '~sent(NODE0,NODE1)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE3,NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE2,NODE3) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
168 (*) : --1----1-0-1---
168     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -1------1---01-
169     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : --1----011-----
170     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : 1----------110-
171     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : -1-----10---1--
172     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : 1--------1-0-1-
173     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
276 (*) : 1------1-0-1---
276     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
277     : 1-------1---01-
277     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
278     : -1-----011-----
278     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
279     : -1---------110-
279     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
280     : --1----10---1--
280     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
281     : --1------1-0-1-
281     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
294 (*) : 1------1-0---1-
294     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
295     : 1-------1--10--
295     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
296     : -1-----0-1--1--
296     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
297     : -1------1--1-0-
297     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : --1-----01--1--
298     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : --1----1---0-1-
299     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$1$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$1$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$1$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$0$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node0)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node2,node1)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$0$sent$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$0$sent$1$1, node$1$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$0$sent$0$1, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$0$sent$0$1 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$0$sent$1$1; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)', 'sent(node1,node2)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 2, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$0$1, node$0$sent$1$0; node$1$sent$0$0, node$0$sent$1$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$0$1 | node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$1$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$0': [node$0$sent$0$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$1': [node$0$sent$1$1]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$0': node$0$sent$0$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$1': node$0$sent$1$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE3,NODE1)', 'sent(NODE1,NODE3)', 'sent(NODE2,NODE4)', 'allowed_in(NODE0)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE1. sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3))


=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : ----10-1-0-----
174     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
175     : ----01--1---0--
175     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
176     : ---1-0-0-1-----
176     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-1-----1-0-
177     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
178     : ---10---0---1--
178     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---01------0-1-
179     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['internal(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE2)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. internal(NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
180 (*) : ----1--1-0--0--
180     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
181     : -----1--10--0--
181     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
182     : ---1---0-1---0-
182     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
183     : -----1-0---1-0-
183     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
184     : ---1----0--01--
184     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
185     : ----1---0--0-1-
185     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

part_sig: ('node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': [node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0], 'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$internal$0; node$0$sent$1; node$1$sent$0': node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, 'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', 'internal(NODE0)', 'sent(NODE1,NODE0)', '~sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. sent(NODE2,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 26 =====================
size : 18
num_suborbits: 3
186 (*) : --1-1--1-0-----
186     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
187     : -1---1--1---0--
187     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
188     : --11---0-1-----
188     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
189     : 1----1-----1-0-
189     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
190     : -1-1----0---1--
190     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
191     : 1---1------0-1-
191     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : --11---10------
222     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
223     : -1-1---01------
223     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
224     : --1-1----1-0---
224     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
225     : 1---1----0-1---
225     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -1---1------10-
226     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : 1----1------01-
227     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
234 (*) : --11----01-----
234     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
235     : -1-1---0----1--
235     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
236     : --1-1--1---0---
236     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
237     : 1---1----0---1-
237     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
238     : -1---1--1----0-
238     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
239     : 1----1-----10--
239     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0; node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0; node$1$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'internal(node0)', '~sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$internal$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0, node$0$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$internal$0$0; node$0$sent$1$0; node$1$sent$0$0 | node$0$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$internal$0$0; node$1$sent$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$internal$0$0; node$1$sent$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$internal$0; node$1$sent$0': [node$0$internal$0$0; node$1$sent$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$internal$0; node$1$sent$0': node$0$internal$0$0; node$1$sent$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['internal(NODE1)', 'allowed_in(NODE0)', 'sent(NODE2,NODE3)', '~sent(NODE1,NODE4)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE1. ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | sent(NODE1,NODE4) | ((NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
192 (*) : -0-----1-0--0--
192     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
193     : --0-----10--0--
193     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
194     : 0------0-1---0-
194     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
195     : --0----0---1-0-
195     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
196     : 0-------0--01--
196     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
197     : -0------0--0-1-
197     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['sent(NODE0,NODE1)', '~sent(NODE1,NODE0)', '~allowed_in(NODE1)', '~sent(NODE2,NODE0)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. ~sent(NODE0,NODE1) | sent(NODE1,NODE0) | allowed_in(NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
198 (*) : -0---0-1-0-----
198     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
199     : --0-0---1---0--
199     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
200     : 0----0-0-1-----
200     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
201     : --00-------1-0-
201     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
202     : 0---0---0---1--
202     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
203     : -0-0-------0-1-
203     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

part_sig: ('node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', '~internal(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '1$internal': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$1$internal$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$internal$0$0}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': [node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$0]}

	identical_single_classes: {'node$0$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$allowed_in$0; node$1$sent$0': node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', 'sent(NODE0,NODE1)', '~internal(NODE2)', '~allowed_in(NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE2) | allowed_in(NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
204 (*) : --1----100-----
204     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
205     : -1-----01---0--
205     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
206     : --1----0-1-0---
206     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
207     : 1--------0-1-0-
207     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
208     : -1------0---10-
208     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
209     : 1----------001-
209     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$0$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$1]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$allowed_in$0; node$1$sent$1': [node$0$allowed_in$0$0; node$1$sent$1$0], 'node$0$sent$0; node$1$sent$0; node$1$sent$1': [node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$1]}

	identical_single_classes: {'node$0$allowed_in$0; node$1$sent$1': node$0$allowed_in$0$0; node$1$sent$1$0, 'node$0$sent$0; node$1$sent$0; node$1$sent$1': node$0$sent$0$0; node$1$sent$0$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE2,NODE1)', '~sent(NODE1,NODE0)', 'allowed_in(NODE0)', 'sent(NODE1,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 30 =====================
size : 18
num_suborbits: 3
210 (*) : -01----1-0-----
210     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
211     : -10-----1---0--
211     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
212     : 0-1----0-1-----
212     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
213     : 1-0--------1-0-
213     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
214     : 01------0---1--
214     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
215     : 10---------0-1-
215     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
216 (*) : 0-1----10------
216     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 01-----01------
217     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -01------1-0---
218     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : 10-------0-1---
219     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : -10---------10-
220     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : 1-0---------01-
221     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
228 (*) : 0-1-----01-----
228     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
229     : 01-----0----1--
229     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
230     : -01----1---0---
230     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
231     : 10-------0---1-
231     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
232     : -10-----1----0-
232     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
233     : 1-0--------10--
233     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0, node$1$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$0$sent$0$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0, node$0$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0; node$1$allowed_in$0$0; node$1$sent$0$0 | node$0$sent$1$0',)


---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~allowed_in(node0)', 'allowed_in(node2)', '~sent(node0,node2)', 'sent(node1,node0)']

sign_func_name2args: {'1$allowed_in': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$allowed_in$0$0, node$1$sent$0$0, node$0$sent$1$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0, node$1$sent$1$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$0$0]}

sig2const: {'node$1$allowed_in$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0; node$1$sent$1$0, node$0$sent$0$0, node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0; node$1$sent$1$0 | node$0$sent$0$0 | node$0$sent$1$0; node$1$allowed_in$0$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['~allowed_in(node1)', 'allowed_in(node2)', 'sent(node0,node1)', '~sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$allowed_in': 1, '0$allowed_in': 1, '0$sent': 1, '1$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0, node$0$sent$1$0, node$1$allowed_in$0$0; node$1$sent$0$0, node$1$sent$1$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0 | node$0$sent$1$0 | node$1$allowed_in$0$0; node$1$sent$0$0 | node$1$sent$1$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0': [node$0$sent$0$0], 'node$0$sent$1': [node$0$sent$1$0], 'node$1$allowed_in$0; node$1$sent$0': [node$1$allowed_in$0$0; node$1$sent$0$0], 'node$1$sent$1': [node$1$sent$1$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0': node$0$sent$0$0, 'node$0$sent$1': node$0$sent$1$0, 'node$1$allowed_in$0; node$1$sent$0': node$1$allowed_in$0$0; node$1$sent$0$0, 'node$1$sent$1': node$1$sent$1$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$allowed_in': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE3', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE4', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~allowed_in(NODE3)', 'allowed_in(NODE0)', '~sent(NODE3,NODE4)', 'sent(NODE1,NODE2)']

use present constraint


---------- QFormula: get_qclause ----------

qclause: forall NODE0,NODE2,NODE3,NODE4,NODE1. allowed_in(NODE3) | ~allowed_in(NODE0) | sent(NODE3,NODE4) | ~sent(NODE1,NODE2) | ((NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))


=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
240 (*) : --1-0--0-1-----
240     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
241     : -1---0--0---1--
241     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
242     : --10---1-0-----
242     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
243     : 1----0-----0-1-
243     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
244     : -1-0----1---0--
244     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
245     : 1---0------1-0-
245     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'0$allowed_in': [(Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$allowed_in$0$0], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$0$allowed_in$0$0': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

part_sig: ('node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0',)


---------- SigGenerator ----------

terms:  ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'allowed_in': Const('allowed_in', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'allowed_in': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'0$allowed_in': 1, '1$internal': 1, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$allowed_in$0$0, node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$allowed_in$0$0 | node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0}

	sort: node

	identical_classes: {'node$0$allowed_in$0': [node$0$allowed_in$0$0], 'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0]}

	identical_single_classes: {'node$0$allowed_in$0': node$0$allowed_in$0$0, 'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'0$allowed_in': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$internal': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE1)', '~sent(NODE2,NODE1)', 'allowed_in(NODE0)', 'sent(NODE1,NODE2)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. internal(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
246 (*) : ----00-0-1-----
246     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
247     : ----00--0---1--
247     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
248     : ---0-0-1-0-----
248     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
249     : ---0-0-----0-1-
249     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
250     : ---00---1---0--
250     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
251     : ---00------1-0-
251     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node1)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

sign_func_name2args: {'1$internal': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))),), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '1$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '0$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$1$sent$1$0, node$0$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$1], Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$0, node$0$sent$1$0]}

sig2const: {'node$1$internal$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$internal$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node1)', '~internal(node2)', '~sent(node0,node1)', 'sent(node1,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 2, '1$sent': 1, '0$sent': 1}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, node$0$sent$1$0; node$1$sent$0$0, node$1$internal$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0 | node$0$sent$1$0; node$1$sent$0$0 | node$1$internal$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$internal$0': [node$1$internal$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$internal$0': node$1$internal$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~sent(NODE1,NODE0)', '~internal(NODE0)', '~internal(NODE2)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. sent(NODE1,NODE0) | internal(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
252 (*) : ---0---1-0--0--
252     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
253     : ---0----10--0--
253     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
254     : ----0--0-1---0-
254     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
255     : ----0--0---1-0-
255     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
256     : -----0--0--01--
256     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
257     : -----0--0--0-1-
257     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   0
num_exists :   0
num_literals : 0
quantified form : None
qcost : 0




---------- QPrime ----------


---------- ConstArgBinding ----------

terms: ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

sign_func_name2args: {'1$internal': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))),)], '0$sent': [(Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))))], '1$sent': [(Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))), (Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))))]}

const2sigs: {Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$internal$0$0, node$0$sent$0$0, node$1$sent$1$0, node$1$sent$1$1], Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$0$sent$1$0, node$1$sent$0$0], Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))): [node$1$sent$0$1]}

sig2const: {'node$1$internal$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$0$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$0$sent$1$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$0': Const('node1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$0': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$0$1': Const('node2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), 'node$1$sent$1$1': Const('node0', EnumeratedSort('node', ('node0', 'node1', 'node2')))}


---------- ArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

part_sig: ('node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1',)


---------- SigGenerator ----------

terms:  ['~internal(node0)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']

func_name2symbol:  {'internal': Const('internal', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort())), 'sent': Const('sent', FunctionSort(EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')), BooleanSort()))}

func_name2args_sort:  {'internal': (EnumeratedSort('node', ('node0', 'node1', 'node2')),), 'sent': (EnumeratedSort('node', ('node0', 'node1', 'node2')), EnumeratedSort('node', ('node0', 'node1', 'node2')))}

sign_func_name2count:  {'1$internal': 1, '0$sent': 1, '1$sent': 2}


---------- ProductArgPartition ----------

sort2class_sigs: {EnumeratedSort('node', ('node0', 'node1', 'node2')): [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, node$0$sent$1$0; node$1$sent$0$0, node$1$sent$0$1]}

sort2part_sig: {EnumeratedSort('node', ('node0', 'node1', 'node2')): node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1 | node$0$sent$1$0; node$1$sent$0$0 | node$1$sent$0$1}

	sort: node

	identical_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': [node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1], 'node$0$sent$1; node$1$sent$0': [node$0$sent$1$0; node$1$sent$0$0], 'node$1$sent$0': [node$1$sent$0$1]}

	identical_single_classes: {'node$0$sent$0; node$1$internal$0; node$1$sent$1; node$1$sent$1': node$0$sent$0$0; node$1$internal$0$0; node$1$sent$1$0; node$1$sent$1$1, 'node$0$sent$1; node$1$sent$0': node$0$sent$1$0; node$1$sent$0$0, 'node$1$sent$0': node$1$sent$0$1}

	identical_multi_classes: {}


---------- QInference: _set_sort_to_quantifier_mode ----------

quantifier mode: node: QuantifierMode.forall


---------- QInference: _set_constraint_mode ----------

constraint mode: ConstraintMode.no_merge


---------- QFormula: _set_qvars ----------

forall_qvars: {Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))}

exists_qvars: set()


---------- QFormula: _set_signed_func_name_to_args ----------

signed_func_name2args: {'1$internal': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '0$sent': [[Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2')))]], '1$sent': [[Var('NODE1', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))], [Var('NODE2', EnumeratedSort('node', ('node0', 'node1', 'node2'))), Var('NODE0', EnumeratedSort('node', ('node0', 'node1', 'node2')))]]}


---------- QFormula: _set_qterms ----------

qterms: ['~internal(NODE0)', '~sent(NODE1,NODE0)', '~sent(NODE2,NODE0)', 'sent(NODE0,NODE1)']


---------- QFormula: get_qclause ----------

qclause: forall NODE1,NODE0,NODE2. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)


==============================================================================================

	[QI RESULT]: Quantified Prime Orbits on [ivybench/sym/ivy/firewall.ivy: node=3]

==============================================================================================


=== Prime Orbit 0 =====================
size : 3
num_suborbits: 1
0 (*) : --------------1
0     : ['sent(node2,node2)']
1     : ----------1----
1     : ['sent(node1,node1)']
2     : ------1--------
2     : ['sent(node0,node0)']
num_forall :   1
num_exists :   0
num_literals : 1
quantified form : forall NODE0. ~sent(NODE0,NODE0)
qcost : 2




=== Prime Orbit 2 =====================
size : 3
num_suborbits: 1
6 (*) : -1-----0-----0-
6     : ['allowed_in(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
7     : --1-----0--0---
7     : ['allowed_in(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
8     : 1--------0--0--
8     : ['allowed_in(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 1 =====================
size : 3
num_suborbits: 1
3 (*) : 1--1-----------
3     : ['allowed_in(node0)', 'internal(node0)']
4     : -1--1----------
4     : ['allowed_in(node1)', 'internal(node1)']
5     : --1--1---------
5     : ['allowed_in(node2)', 'internal(node2)']
num_forall :   1
num_exists :   0
num_literals : 2
quantified form : forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0)
qcost : 3




=== Prime Orbit 3 =====================
size : 12
num_suborbits: 2
9 (*) : --01----1------
9     : ['internal(node0)', 'sent(node0,node2)', '~allowed_in(node2)']
10     : -0-1---1-------
10     : ['internal(node0)', 'sent(node0,node1)', '~allowed_in(node1)']
11     : --0-1------1---
11     : ['internal(node1)', 'sent(node1,node2)', '~allowed_in(node2)']
12     : 0---1----1-----
12     : ['internal(node1)', 'sent(node1,node0)', '~allowed_in(node0)']
13     : -0---1-------1-
13     : ['internal(node2)', 'sent(node2,node1)', '~allowed_in(node1)']
14     : 0----1------1--
14     : ['internal(node2)', 'sent(node2,node0)', '~allowed_in(node0)']
39 (*) : 0----1--1------
39     : ['internal(node2)', 'sent(node0,node2)', '~allowed_in(node0)']
40     : 0---1--1-------
40     : ['internal(node1)', 'sent(node0,node1)', '~allowed_in(node0)']
41     : -0---1-----1---
41     : ['internal(node2)', 'sent(node1,node2)', '~allowed_in(node1)']
42     : -0-1-----1-----
42     : ['internal(node0)', 'sent(node1,node0)', '~allowed_in(node1)']
43     : --0-1--------1-
43     : ['internal(node1)', 'sent(node2,node1)', '~allowed_in(node2)']
44     : --01--------1--
44     : ['internal(node0)', 'sent(node2,node0)', '~allowed_in(node2)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE3,NODE0,NODE2,NODE1. allowed_in(NODE3) | ~internal(NODE0) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1))
qcost : 13




=== Prime Orbit 4 =====================
size : 6
num_suborbits: 1
15 (*) : 0-0-----1------
15     : ['sent(node0,node2)', '~allowed_in(node0)', '~allowed_in(node2)']
16     : 00-----1-------
16     : ['sent(node0,node1)', '~allowed_in(node0)', '~allowed_in(node1)']
17     : -00--------1---
17     : ['sent(node1,node2)', '~allowed_in(node1)', '~allowed_in(node2)']
18     : 00-------1-----
18     : ['sent(node1,node0)', '~allowed_in(node0)', '~allowed_in(node1)']
19     : -00----------1-
19     : ['sent(node2,node1)', '~allowed_in(node1)', '~allowed_in(node2)']
20     : 0-0---------1--
20     : ['sent(node2,node0)', '~allowed_in(node0)', '~allowed_in(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 5 =====================
size : 12
num_suborbits: 2
21 (*) : --10----1------
21     : ['allowed_in(node2)', 'sent(node0,node2)', '~internal(node0)']
22     : -1-0---1-------
22     : ['allowed_in(node1)', 'sent(node0,node1)', '~internal(node0)']
23     : --1-0------1---
23     : ['allowed_in(node2)', 'sent(node1,node2)', '~internal(node1)']
24     : 1---0----1-----
24     : ['allowed_in(node0)', 'sent(node1,node0)', '~internal(node1)']
25     : -1---0-------1-
25     : ['allowed_in(node1)', 'sent(node2,node1)', '~internal(node2)']
26     : 1----0------1--
26     : ['allowed_in(node0)', 'sent(node2,node0)', '~internal(node2)']
51 (*) : 1----0--1------
51     : ['allowed_in(node0)', 'sent(node0,node2)', '~internal(node2)']
52     : 1---0--1-------
52     : ['allowed_in(node0)', 'sent(node0,node1)', '~internal(node1)']
53     : -1---0-----1---
53     : ['allowed_in(node1)', 'sent(node1,node2)', '~internal(node2)']
54     : -1-0-----1-----
54     : ['allowed_in(node1)', 'sent(node1,node0)', '~internal(node0)']
55     : --1-0--------1-
55     : ['allowed_in(node2)', 'sent(node2,node1)', '~internal(node1)']
56     : --10--------1--
56     : ['allowed_in(node2)', 'sent(node2,node0)', '~internal(node0)']
num_forall :   4
num_exists :   0
num_literals : 9
quantified form : forall NODE3,NODE0,NODE2,NODE1. ~allowed_in(NODE0) | internal(NODE3) | ~sent(NODE1,NODE2) | ((NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE0 = NODE1) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2))
qcost : 13




=== Prime Orbit 6 =====================
size : 6
num_suborbits: 1
27 (*) : 1-1-----1------
27     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node0,node2)']
28     : 11-----1-------
28     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node0,node1)']
29     : -11--------1---
29     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node1,node2)']
30     : 11-------1-----
30     : ['allowed_in(node0)', 'allowed_in(node1)', 'sent(node1,node0)']
31     : -11----------1-
31     : ['allowed_in(node1)', 'allowed_in(node2)', 'sent(node2,node1)']
32     : 1-1---------1--
32     : ['allowed_in(node0)', 'allowed_in(node2)', 'sent(node2,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE0,NODE1) | ~allowed_in(NODE1) | ~allowed_in(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 7 =====================
size : 12
num_suborbits: 2
33 (*) : 0--0----1------
33     : ['sent(node0,node2)', '~allowed_in(node0)', '~internal(node0)']
34     : 0--0---1-------
34     : ['sent(node0,node1)', '~allowed_in(node0)', '~internal(node0)']
35     : -0--0------1---
35     : ['sent(node1,node2)', '~allowed_in(node1)', '~internal(node1)']
36     : -0--0----1-----
36     : ['sent(node1,node0)', '~allowed_in(node1)', '~internal(node1)']
37     : --0--0-------1-
37     : ['sent(node2,node1)', '~allowed_in(node2)', '~internal(node2)']
38     : --0--0------1--
38     : ['sent(node2,node0)', '~allowed_in(node2)', '~internal(node2)']
63 (*) : --0--0--1------
63     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node2)']
64     : -0--0--1-------
64     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node1)']
65     : --0--0-----1---
65     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node2)']
66     : 0--0-----1-----
66     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node0)']
67     : -0--0--------1-
67     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node1)']
68     : 0--0--------1--
68     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. allowed_in(NODE2) | ~sent(NODE0,NODE1) | internal(NODE2) | ((NODE0 ~= NODE2 | NODE0 = NODE1) & (NODE1 ~= NODE2 | NODE0 = NODE1))
qcost : 10




=== Prime Orbit 8 =====================
size : 6
num_suborbits: 1
45 (*) : ---1-1--1------
45     : ['internal(node0)', 'internal(node2)', 'sent(node0,node2)']
46     : ---11--1-------
46     : ['internal(node0)', 'internal(node1)', 'sent(node0,node1)']
47     : ----11-----1---
47     : ['internal(node1)', 'internal(node2)', 'sent(node1,node2)']
48     : ---11----1-----
48     : ['internal(node0)', 'internal(node1)', 'sent(node1,node0)']
49     : ----11-------1-
49     : ['internal(node1)', 'internal(node2)', 'sent(node2,node1)']
50     : ---1-1------1--
50     : ['internal(node0)', 'internal(node2)', 'sent(node2,node0)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. ~sent(NODE0,NODE1) | ~internal(NODE1) | ~internal(NODE0) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 9 =====================
size : 6
num_suborbits: 1
57 (*) : ---0-0--1------
57     : ['sent(node0,node2)', '~internal(node0)', '~internal(node2)']
58     : ---00--1-------
58     : ['sent(node0,node1)', '~internal(node0)', '~internal(node1)']
59     : ----00-----1---
59     : ['sent(node1,node2)', '~internal(node1)', '~internal(node2)']
60     : ---00----1-----
60     : ['sent(node1,node0)', '~internal(node0)', '~internal(node1)']
61     : ----00-------1-
61     : ['sent(node2,node1)', '~internal(node1)', '~internal(node2)']
62     : ---0-0------1--
62     : ['sent(node2,node0)', '~internal(node0)', '~internal(node2)']
num_forall :   2
num_exists :   0
num_literals : 4
quantified form : forall NODE1,NODE0. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1
qcost : 6




=== Prime Orbit 10 =====================
size : 6
num_suborbits: 1
69 (*) : 1---0-------0--
69     : ['allowed_in(node0)', '~internal(node1)', '~sent(node2,node0)']
70     : 1----0---0-----
70     : ['allowed_in(node0)', '~internal(node2)', '~sent(node1,node0)']
71     : -1-0---------0-
71     : ['allowed_in(node1)', '~internal(node0)', '~sent(node2,node1)']
72     : -1---0-0-------
72     : ['allowed_in(node1)', '~internal(node2)', '~sent(node0,node1)']
73     : --10-------0---
73     : ['allowed_in(node2)', '~internal(node0)', '~sent(node1,node2)']
74     : --1-0---0------
74     : ['allowed_in(node2)', '~internal(node1)', '~sent(node0,node2)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE1,NODE0,NODE2. internal(NODE1) | sent(NODE2,NODE0) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 9




=== Prime Orbit 11 =====================
size : 3
num_suborbits: 1
75 (*) : 1---00---------
75     : ['allowed_in(node0)', '~internal(node1)', '~internal(node2)']
76     : -1-0-0---------
76     : ['allowed_in(node1)', '~internal(node0)', '~internal(node2)']
77     : --100----------
77     : ['allowed_in(node2)', '~internal(node0)', '~internal(node1)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (internal(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 12 =====================
size : 3
num_suborbits: 1
78 (*) : 1-1-0----------
78     : ['allowed_in(node0)', 'allowed_in(node2)', '~internal(node1)']
79     : 11---0---------
79     : ['allowed_in(node0)', 'allowed_in(node1)', '~internal(node2)']
80     : -110-----------
80     : ['allowed_in(node1)', 'allowed_in(node2)', '~internal(node0)']
num_forall :   1
num_exists :   1
num_literals : 3
quantified form : forall NODE1. internal(NODE1) | (exists NODE0. (~allowed_in(NODE0) & NODE0 ~= NODE1))
qcost : 5




=== Prime Orbit 13 =====================
size : 6
num_suborbits: 1
81 (*) : 11-----------0-
81     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node1)']
82     : 1-1--------0---
82     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node2)']
83     : 11----------0--
83     : ['allowed_in(node0)', 'allowed_in(node1)', '~sent(node2,node0)']
84     : -11-----0------
84     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node2)']
85     : 1-1------0-----
85     : ['allowed_in(node0)', 'allowed_in(node2)', '~sent(node1,node0)']
86     : -11----0-------
86     : ['allowed_in(node1)', 'allowed_in(node2)', '~sent(node0,node1)']
num_forall :   3
num_exists :   0
num_literals : 6
quantified form : forall NODE1,NODE0,NODE2. ~allowed_in(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 9




=== Prime Orbit 14 =====================
size : 1
num_suborbits: 1
87 (*) : 111------------
87     : ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~allowed_in(NODE0)
qcost : 2




=== Prime Orbit 15 =====================
size : 8
num_suborbits: 2
88 (*) : -------11----1-
88     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node2,node1)']
89     : -------11--1---
89     : ['sent(node0,node1)', 'sent(node0,node2)', 'sent(node1,node2)']
90     : ---------1-11--
90     : ['sent(node1,node0)', 'sent(node1,node2)', 'sent(node2,node0)']
91     : --------11-1---
91     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node1,node2)']
92     : ---------1--11-
92     : ['sent(node1,node0)', 'sent(node2,node0)', 'sent(node2,node1)']
93     : -------1----11-
93     : ['sent(node0,node1)', 'sent(node2,node0)', 'sent(node2,node1)']
94 (*) : --------11---1-
94     : ['sent(node0,node2)', 'sent(node1,node0)', 'sent(node2,node1)']
95     : -------1---11--
95     : ['sent(node0,node1)', 'sent(node1,node2)', 'sent(node2,node0)']
num_forall :   6
num_exists :   0
num_literals : 15
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~sent(NODE1,NODE4) | ~sent(NODE2,NODE5) | ~sent(NODE0,NODE3) | ((NODE0 ~= NODE1 | NODE2 ~= NODE4 | NODE3 ~= NODE5 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 21




=== Prime Orbit 16 =====================
size : 24
num_suborbits: 4
96 (*) : 0-1----1---1---
96     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)']
97     : 01------1----1-
97     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)']
98     : -01-----11-----
98     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)']
99     : 10---------11--
99     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)']
100     : -10----1----1--
100     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)']
101     : 1-0------1---1-
101     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)']
138 (*) : 0-1------1-1---
138     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)']
139     : 01----------11-
139     : ['allowed_in(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
140     : -01----11------
140     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)']
141     : 10----------11-
141     : ['allowed_in(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)']
142     : -10----11------
142     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)']
143     : 1-0------1-1---
143     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)']
270 (*) : 1-0----1---1---
270     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)']
271     : 10------1----1-
271     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)']
272     : -10-----11-----
272     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)']
273     : 01---------11--
273     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)']
274     : -01----1----1--
274     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)']
275     : 0-1------1---1-
275     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)']
288 (*) : 1-0----1-----1-
288     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)']
289     : 10------1--1---
289     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)']
290     : -10------1--1--
290     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)']
291     : 01------1--1---
291     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)']
292     : -01------1--1--
292     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)']
293     : 0-1----1-----1-
293     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. allowed_in(NODE5) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 17 =====================
size : 24
num_suborbits: 4
102 (*) : --11---1---1---
102     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)']
103     : -1-1----1----1-
103     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)']
104     : --1-1---11-----
104     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)']
105     : 1---1------11--
105     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)']
106     : -1---1-1----1--
106     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)']
107     : 1----1---1---1-
107     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)']
144 (*) : --11-----1-1---
144     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)']
145     : -1-1--------11-
145     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)']
146     : --1-1--11------
146     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)']
147     : 1---1-------11-
147     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)']
148     : -1---1-11------
148     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)']
149     : 1----1---1-1---
149     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)']
282 (*) : 1----1-1---1---
282     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)']
283     : 1---1---1----1-
283     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)']
284     : -1---1--11-----
284     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)']
285     : -1-1-------11--
285     : ['allowed_in(node1)', 'internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)']
286     : --1-1--1----1--
286     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)']
287     : --11-----1---1-
287     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)']
300 (*) : 1----1-1-----1-
300     : ['allowed_in(node0)', 'internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)']
301     : 1---1---1--1---
301     : ['allowed_in(node0)', 'internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)']
302     : -1---1---1--1--
302     : ['allowed_in(node1)', 'internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)']
303     : -1-1----1--1---
303     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)']
304     : --1-1----1--1--
304     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)']
305     : --11---1-----1-
305     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~internal(NODE1) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ~sent(NODE3,NODE5) | ((NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE5 | NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE2 | NODE1 ~= NODE5 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE2 | NODE1 ~= NODE3 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4))
qcost : 34




=== Prime Orbit 18 =====================
size : 24
num_suborbits: 4
108 (*) : --00---1---1---
108     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
109     : -0-0----1----1-
109     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
110     : --0-0---11-----
110     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node2)', '~internal(node1)']
111     : 0---0------11--
111     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)']
112     : -0---0-1----1--
112     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
113     : 0----0---1---1-
113     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
114 (*) : --00-----1-1---
114     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)']
115     : -0-0--------11-
115     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)']
116     : --0-0--11------
116     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)']
117     : 0---0-------11-
117     : ['sent(node2,node0)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
118     : -0---0-11------
118     : ['sent(node0,node1)', 'sent(node0,node2)', '~allowed_in(node1)', '~internal(node2)']
119     : 0----0---1-1---
119     : ['sent(node1,node0)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
132 (*) : 0----0-1---1---
132     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node2)']
133     : 0---0---1----1-
133     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node1)']
134     : -0---0--11-----
134     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~internal(node2)']
135     : -0-0-------11--
135     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node0)']
136     : --0-0--1----1--
136     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
137     : --00-----1---1-
137     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
336 (*) : 0----0-1-----1-
336     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node0)', '~internal(node2)']
337     : 0---0---1--1---
337     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node0)', '~internal(node1)']
338     : -0---0---1--1--
338     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node1)', '~internal(node2)']
339     : -0-0----1--1---
339     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node1)', '~internal(node0)']
340     : --0-0----1--1--
340     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node2)', '~internal(node1)']
341     : --00---1-----1-
341     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node2)', '~internal(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. allowed_in(NODE4) | ~sent(NODE0,NODE2) | internal(NODE5) | ~sent(NODE1,NODE3) | ((NODE0 ~= NODE5 | NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE3 ~= NODE5 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 34




=== Prime Orbit 19 =====================
size : 24
num_suborbits: 4
120 (*) : ---1-0---1-1---
120     : ['internal(node0)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node2)']
121     : ---10-------11-
121     : ['internal(node0)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node1)']
122     : ----10-11------
122     : ['internal(node1)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node2)']
123     : ---01-------11-
123     : ['internal(node1)', 'sent(node2,node0)', 'sent(node2,node1)', '~internal(node0)']
124     : ----01-11------
124     : ['internal(node2)', 'sent(node0,node1)', 'sent(node0,node2)', '~internal(node1)']
125     : ---0-1---1-1---
125     : ['internal(node2)', 'sent(node1,node0)', 'sent(node1,node2)', '~internal(node0)']
126 (*) : ---1-0-1---1---
126     : ['internal(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)']
127     : ---10---1----1-
127     : ['internal(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)']
128     : ----10--11-----
128     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)']
129     : ---01------11--
129     : ['internal(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)']
130     : ----01-1----1--
130     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)']
131     : ---0-1---1---1-
131     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)']
264 (*) : ---0-1-1---1---
264     : ['internal(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)']
265     : ---01---1----1-
265     : ['internal(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)']
266     : ----01--11-----
266     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)']
267     : ---10------11--
267     : ['internal(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)']
268     : ----10-1----1--
268     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)']
269     : ---1-0---1---1-
269     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)']
342 (*) : ---1-0-1-----1-
342     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)']
343     : ---10---1--1---
343     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)']
344     : ----10---1--1--
344     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)']
345     : ---01---1--1---
345     : ['internal(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)']
346     : ----01---1--1--
346     : ['internal(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)']
347     : ---0-1-1-----1-
347     : ['internal(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)']
num_forall :   6
num_exists :   0
num_literals : 28
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE5,NODE1. ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~internal(NODE0) | internal(NODE5) | ((NODE0 ~= NODE3 | NODE1 ~= NODE2 | NODE4 ~= NODE5 | NODE1 = NODE4 | NODE0 = NODE1 | NODE0 = NODE4) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE4 ~= NODE5 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE4 | NODE1 ~= NODE5 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE5 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3))
qcost : 34




=== Prime Orbit 20 =====================
size : 12
num_suborbits: 2
150 (*) : -0-----1-0-1---
150     : ['sent(node0,node1)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
151     : --0-----1---01-
151     : ['sent(node0,node2)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
152     : 0------011-----
152     : ['sent(node0,node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
153     : --0--------110-
153     : ['sent(node1,node2)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
154     : 0------10---1--
154     : ['sent(node0,node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
155     : -0-------1-0-1-
155     : ['sent(node1,node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
318 (*) : -0-----1-0---1-
318     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
319     : --0-----1--10--
319     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
320     : 0------0-1--1--
320     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
321     : --0-----1--1-0-
321     : ['sent(node0,node2)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
322     : 0-------01--1--
322     : ['sent(node1,node0)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
323     : -0-----1---0-1-
323     : ['sent(node0,node1)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE3,NODE0,NODE2,NODE1. allowed_in(NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | ~sent(NODE0,NODE2) | ((NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 16




=== Prime Orbit 21 =====================
size : 24
num_suborbits: 4
156 (*) : -----0-1-0-1---
156     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node2)', '~sent(node1,node0)']
157     : ----0---1---01-
157     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node1)', '~sent(node2,node0)']
158     : -----0-011-----
158     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
159     : ---0-------110-
159     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node0)', '~sent(node2,node1)']
160     : ----0--10---1--
160     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
161     : ---0-----1-0-1-
161     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
258 (*) : ---0---1-0-1---
258     : ['sent(node0,node1)', 'sent(node1,node2)', '~internal(node0)', '~sent(node1,node0)']
259     : ---0----1---01-
259     : ['sent(node0,node2)', 'sent(node2,node1)', '~internal(node0)', '~sent(node2,node0)']
260     : ----0--011-----
260     : ['sent(node0,node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
261     : ----0------110-
261     : ['sent(node1,node2)', 'sent(node2,node0)', '~internal(node1)', '~sent(node2,node1)']
262     : -----0-10---1--
262     : ['sent(node0,node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
263     : -----0---1-0-1-
263     : ['sent(node1,node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
312 (*) : -----0-1-0---1-
312     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node0)']
313     : ----0---1--10--
313     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node0)']
314     : -----0-0-1--1--
314     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node1)']
315     : ---0----1--1-0-
315     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
316     : ----0---01--1--
316     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
317     : ---0---1---0-1-
317     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
330 (*) : ---0---1-0---1-
330     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node0)']
331     : ---0----1--10--
331     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node0)']
332     : ----0--0-1--1--
332     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node1)']
333     : ----0---1--1-0-
333     : ['sent(node0,node2)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
334     : -----0--01--1--
334     : ['sent(node1,node0)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
335     : -----0-1---0-1-
335     : ['sent(node0,node1)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 24
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE1. ~sent(NODE0,NODE2) | ~sent(NODE1,NODE3) | sent(NODE2,NODE0) | internal(NODE4) | ((NODE1 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 29




=== Prime Orbit 22 =====================
size : 12
num_suborbits: 2
162 (*) : ----1--1-0-1---
162     : ['internal(node1)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
163     : -----1--1---01-
163     : ['internal(node2)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
164     : ---1---011-----
164     : ['internal(node0)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
165     : -----1-----110-
165     : ['internal(node2)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
166     : ---1---10---1--
166     : ['internal(node0)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
167     : ----1----1-0-1-
167     : ['internal(node1)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
324 (*) : ----1--1-0---1-
324     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
325     : -----1--1--10--
325     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
326     : ---1---0-1--1--
326     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
327     : -----1--1--1-0-
327     : ['internal(node2)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
328     : ---1----01--1--
328     : ['internal(node0)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
329     : ----1--1---0-1-
329     : ['internal(node1)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   4
num_exists :   0
num_literals : 12
quantified form : forall NODE3,NODE0,NODE2,NODE1. ~internal(NODE0) | ~sent(NODE2,NODE3) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | ((NODE0 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 16




=== Prime Orbit 23 =====================
size : 24
num_suborbits: 4
168 (*) : --1----1-0-1---
168     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
169     : -1------1---01-
169     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
170     : --1----011-----
170     : ['allowed_in(node2)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
171     : 1----------110-
171     : ['allowed_in(node0)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
172     : -1-----10---1--
172     : ['allowed_in(node1)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
173     : 1--------1-0-1-
173     : ['allowed_in(node0)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
276 (*) : 1------1-0-1---
276     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node1,node2)', '~sent(node1,node0)']
277     : 1-------1---01-
277     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node2,node1)', '~sent(node2,node0)']
278     : -1-----011-----
278     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node0)', '~sent(node0,node1)']
279     : -1---------110-
279     : ['allowed_in(node1)', 'sent(node1,node2)', 'sent(node2,node0)', '~sent(node2,node1)']
280     : --1----10---1--
280     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node0)', '~sent(node0,node2)']
281     : --1------1-0-1-
281     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node1)', '~sent(node1,node2)']
294 (*) : 1------1-0---1-
294     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
295     : 1-------1--10--
295     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
296     : -1-----0-1--1--
296     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
297     : -1------1--1-0-
297     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
298     : --1-----01--1--
298     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
299     : --1----1---0-1-
299     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
306 (*) : --1----1-0---1-
306     : ['allowed_in(node2)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node0)']
307     : -1------1--10--
307     : ['allowed_in(node1)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node0)']
308     : --1----0-1--1--
308     : ['allowed_in(node2)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node1)']
309     : 1-------1--1-0-
309     : ['allowed_in(node0)', 'sent(node0,node2)', 'sent(node1,node2)', '~sent(node2,node1)']
310     : -1------01--1--
310     : ['allowed_in(node1)', 'sent(node1,node0)', 'sent(node2,node0)', '~sent(node0,node2)']
311     : 1------1---0-1-
311     : ['allowed_in(node0)', 'sent(node0,node1)', 'sent(node2,node1)', '~sent(node1,node2)']
num_forall :   5
num_exists :   0
num_literals : 24
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE1. sent(NODE3,NODE1) | ~sent(NODE1,NODE3) | ~sent(NODE2,NODE4) | ~allowed_in(NODE0) | ((NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE1 | NODE2 ~= NODE3 | NODE0 = NODE2 | NODE0 = NODE4 | NODE2 = NODE4) & (NODE0 ~= NODE1 | NODE3 ~= NODE4 | NODE2 = NODE3 | NODE0 = NODE2 | NODE0 = NODE3) & (NODE0 ~= NODE2 | NODE3 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3))
qcost : 29




=== Prime Orbit 24 =====================
size : 6
num_suborbits: 1
174 (*) : ----10-1-0-----
174     : ['internal(node1)', 'sent(node0,node1)', '~internal(node2)', '~sent(node1,node0)']
175     : ----01--1---0--
175     : ['internal(node2)', 'sent(node0,node2)', '~internal(node1)', '~sent(node2,node0)']
176     : ---1-0-0-1-----
176     : ['internal(node0)', 'sent(node1,node0)', '~internal(node2)', '~sent(node0,node1)']
177     : ---0-1-----1-0-
177     : ['internal(node2)', 'sent(node1,node2)', '~internal(node0)', '~sent(node2,node1)']
178     : ---10---0---1--
178     : ['internal(node0)', 'sent(node2,node0)', '~internal(node1)', '~sent(node0,node2)']
179     : ---01------0-1-
179     : ['internal(node1)', 'sent(node2,node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. internal(NODE2) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 25 =====================
size : 6
num_suborbits: 1
180 (*) : ----1--1-0--0--
180     : ['internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)', '~sent(node2,node0)']
181     : -----1--10--0--
181     : ['internal(node2)', 'sent(node0,node2)', '~sent(node1,node0)', '~sent(node2,node0)']
182     : ---1---0-1---0-
182     : ['internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node2,node1)']
183     : -----1-0---1-0-
183     : ['internal(node2)', 'sent(node1,node2)', '~sent(node0,node1)', '~sent(node2,node1)']
184     : ---1----0--01--
184     : ['internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node1,node2)']
185     : ----1---0--0-1-
185     : ['internal(node1)', 'sent(node2,node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. sent(NODE2,NODE1) | ~internal(NODE0) | ~sent(NODE1,NODE0) | sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 26 =====================
size : 18
num_suborbits: 3
186 (*) : --1-1--1-0-----
186     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node0)']
187     : -1---1--1---0--
187     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node0)']
188     : --11---0-1-----
188     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node1)']
189     : 1----1-----1-0-
189     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node1)']
190     : -1-1----0---1--
190     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node2)']
191     : 1---1------0-1-
191     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node2)']
222 (*) : --11---10------
222     : ['allowed_in(node2)', 'internal(node0)', 'sent(node0,node1)', '~sent(node0,node2)']
223     : -1-1---01------
223     : ['allowed_in(node1)', 'internal(node0)', 'sent(node0,node2)', '~sent(node0,node1)']
224     : --1-1----1-0---
224     : ['allowed_in(node2)', 'internal(node1)', 'sent(node1,node0)', '~sent(node1,node2)']
225     : 1---1----0-1---
225     : ['allowed_in(node0)', 'internal(node1)', 'sent(node1,node2)', '~sent(node1,node0)']
226     : -1---1------10-
226     : ['allowed_in(node1)', 'internal(node2)', 'sent(node2,node0)', '~sent(node2,node1)']
227     : 1----1------01-
227     : ['allowed_in(node0)', 'internal(node2)', 'sent(node2,node1)', '~sent(node2,node0)']
234 (*) : --11----01-----
234     : ['allowed_in(node2)', 'internal(node0)', 'sent(node1,node0)', '~sent(node0,node2)']
235     : -1-1---0----1--
235     : ['allowed_in(node1)', 'internal(node0)', 'sent(node2,node0)', '~sent(node0,node1)']
236     : --1-1--1---0---
236     : ['allowed_in(node2)', 'internal(node1)', 'sent(node0,node1)', '~sent(node1,node2)']
237     : 1---1----0---1-
237     : ['allowed_in(node0)', 'internal(node1)', 'sent(node2,node1)', '~sent(node1,node0)']
238     : -1---1--1----0-
238     : ['allowed_in(node1)', 'internal(node2)', 'sent(node0,node2)', '~sent(node2,node1)']
239     : 1----1-----10--
239     : ['allowed_in(node0)', 'internal(node2)', 'sent(node1,node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE1. ~internal(NODE1) | ~allowed_in(NODE0) | ~sent(NODE2,NODE3) | sent(NODE1,NODE4) | ((NODE1 ~= NODE3 | NODE2 ~= NODE4 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE2 | NODE0 = NODE1 | NODE0 = NODE3 | NODE1 = NODE3) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 24




=== Prime Orbit 27 =====================
size : 6
num_suborbits: 1
192 (*) : -0-----1-0--0--
192     : ['sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)', '~sent(node2,node0)']
193     : --0-----10--0--
193     : ['sent(node0,node2)', '~allowed_in(node2)', '~sent(node1,node0)', '~sent(node2,node0)']
194     : 0------0-1---0-
194     : ['sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)', '~sent(node2,node1)']
195     : --0----0---1-0-
195     : ['sent(node1,node2)', '~allowed_in(node2)', '~sent(node0,node1)', '~sent(node2,node1)']
196     : 0-------0--01--
196     : ['sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)', '~sent(node1,node2)']
197     : -0------0--0-1-
197     : ['sent(node2,node1)', '~allowed_in(node1)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. ~sent(NODE0,NODE1) | sent(NODE1,NODE0) | allowed_in(NODE1) | sent(NODE2,NODE0) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 28 =====================
size : 6
num_suborbits: 1
198 (*) : -0---0-1-0-----
198     : ['sent(node0,node1)', '~allowed_in(node1)', '~internal(node2)', '~sent(node1,node0)']
199     : --0-0---1---0--
199     : ['sent(node0,node2)', '~allowed_in(node2)', '~internal(node1)', '~sent(node2,node0)']
200     : 0----0-0-1-----
200     : ['sent(node1,node0)', '~allowed_in(node0)', '~internal(node2)', '~sent(node0,node1)']
201     : --00-------1-0-
201     : ['sent(node1,node2)', '~allowed_in(node2)', '~internal(node0)', '~sent(node2,node1)']
202     : 0---0---0---1--
202     : ['sent(node2,node0)', '~allowed_in(node0)', '~internal(node1)', '~sent(node0,node2)']
203     : -0-0-------0-1-
203     : ['sent(node2,node1)', '~allowed_in(node1)', '~internal(node0)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. sent(NODE1,NODE0) | ~sent(NODE0,NODE1) | internal(NODE2) | allowed_in(NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 29 =====================
size : 6
num_suborbits: 1
204 (*) : --1----100-----
204     : ['allowed_in(node2)', 'sent(node0,node1)', '~sent(node0,node2)', '~sent(node1,node0)']
205     : -1-----01---0--
205     : ['allowed_in(node1)', 'sent(node0,node2)', '~sent(node0,node1)', '~sent(node2,node0)']
206     : --1----0-1-0---
206     : ['allowed_in(node2)', 'sent(node1,node0)', '~sent(node0,node1)', '~sent(node1,node2)']
207     : 1--------0-1-0-
207     : ['allowed_in(node0)', 'sent(node1,node2)', '~sent(node1,node0)', '~sent(node2,node1)']
208     : -1------0---10-
208     : ['allowed_in(node1)', 'sent(node2,node0)', '~sent(node0,node2)', '~sent(node2,node1)']
209     : 1----------001-
209     : ['allowed_in(node0)', 'sent(node2,node1)', '~sent(node1,node2)', '~sent(node2,node0)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. sent(NODE2,NODE1) | sent(NODE1,NODE0) | ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 30 =====================
size : 18
num_suborbits: 3
210 (*) : -01----1-0-----
210     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
211     : -10-----1---0--
211     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
212     : 0-1----0-1-----
212     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
213     : 1-0--------1-0-
213     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
214     : 01------0---1--
214     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
215     : 10---------0-1-
215     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
216 (*) : 0-1----10------
216     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node0)', '~sent(node0,node2)']
217     : 01-----01------
217     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node0)', '~sent(node0,node1)']
218     : -01------1-0---
218     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node1)', '~sent(node1,node2)']
219     : 10-------0-1---
219     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node1)', '~sent(node1,node0)']
220     : -10---------10-
220     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node2)', '~sent(node2,node1)']
221     : 1-0---------01-
221     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node2)', '~sent(node2,node0)']
228 (*) : 0-1-----01-----
228     : ['allowed_in(node2)', 'sent(node1,node0)', '~allowed_in(node0)', '~sent(node0,node2)']
229     : 01-----0----1--
229     : ['allowed_in(node1)', 'sent(node2,node0)', '~allowed_in(node0)', '~sent(node0,node1)']
230     : -01----1---0---
230     : ['allowed_in(node2)', 'sent(node0,node1)', '~allowed_in(node1)', '~sent(node1,node2)']
231     : 10-------0---1-
231     : ['allowed_in(node0)', 'sent(node2,node1)', '~allowed_in(node1)', '~sent(node1,node0)']
232     : -10-----1----0-
232     : ['allowed_in(node1)', 'sent(node0,node2)', '~allowed_in(node2)', '~sent(node2,node1)']
233     : 1-0--------10--
233     : ['allowed_in(node0)', 'sent(node1,node2)', '~allowed_in(node2)', '~sent(node2,node0)']
num_forall :   5
num_exists :   0
num_literals : 19
quantified form : forall NODE0,NODE2,NODE3,NODE4,NODE1. allowed_in(NODE3) | ~allowed_in(NODE0) | sent(NODE3,NODE4) | ~sent(NODE1,NODE2) | ((NODE1 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE1 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2) & (NODE0 ~= NODE4 | NODE2 ~= NODE3 | NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2))
qcost : 24




=== Prime Orbit 31 =====================
size : 6
num_suborbits: 1
240 (*) : --1-0--0-1-----
240     : ['allowed_in(node2)', 'sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)']
241     : -1---0--0---1--
241     : ['allowed_in(node1)', 'sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)']
242     : --10---1-0-----
242     : ['allowed_in(node2)', 'sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)']
243     : 1----0-----0-1-
243     : ['allowed_in(node0)', 'sent(node2,node1)', '~internal(node2)', '~sent(node1,node2)']
244     : -1-0----1---0--
244     : ['allowed_in(node1)', 'sent(node0,node2)', '~internal(node0)', '~sent(node2,node0)']
245     : 1---0------1-0-
245     : ['allowed_in(node0)', 'sent(node1,node2)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. internal(NODE1) | sent(NODE2,NODE1) | ~allowed_in(NODE0) | ~sent(NODE1,NODE2) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 32 =====================
size : 6
num_suborbits: 1
246 (*) : ----00-0-1-----
246     : ['sent(node1,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node1)']
247     : ----00--0---1--
247     : ['sent(node2,node0)', '~internal(node1)', '~internal(node2)', '~sent(node0,node2)']
248     : ---0-0-1-0-----
248     : ['sent(node0,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node0)']
249     : ---0-0-----0-1-
249     : ['sent(node2,node1)', '~internal(node0)', '~internal(node2)', '~sent(node1,node2)']
250     : ---00---1---0--
250     : ['sent(node0,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node0)']
251     : ---00------1-0-
251     : ['sent(node1,node2)', '~internal(node0)', '~internal(node1)', '~sent(node2,node1)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. sent(NODE1,NODE0) | internal(NODE0) | internal(NODE2) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10




=== Prime Orbit 33 =====================
size : 6
num_suborbits: 1
252 (*) : ---0---1-0--0--
252     : ['sent(node0,node1)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
253     : ---0----10--0--
253     : ['sent(node0,node2)', '~internal(node0)', '~sent(node1,node0)', '~sent(node2,node0)']
254     : ----0--0-1---0-
254     : ['sent(node1,node0)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
255     : ----0--0---1-0-
255     : ['sent(node1,node2)', '~internal(node1)', '~sent(node0,node1)', '~sent(node2,node1)']
256     : -----0--0--01--
256     : ['sent(node2,node0)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
257     : -----0--0--0-1-
257     : ['sent(node2,node1)', '~internal(node2)', '~sent(node0,node2)', '~sent(node1,node2)']
num_forall :   3
num_exists :   0
num_literals : 7
quantified form : forall NODE1,NODE0,NODE2. internal(NODE0) | sent(NODE1,NODE0) | sent(NODE2,NODE0) | ~sent(NODE0,NODE1) | (NODE0 = NODE1 | NODE0 = NODE2 | NODE1 = NODE2)
qcost : 10



[QRM NOTE]: Time elapsed since start: 1.692 seconds

[QRM NOTE]: Time elapsed since last: 1.586 seconds

[QRM NOTE]: Peak memory: 2272843 bytes


=============================================================================

	[MIN]: Minimization on [ivybench/sym/ivy/firewall.ivy: node=3]

=============================================================================


New level: 1
 pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]


Before reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]

Essensial at level 1 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 1 : set()

After reduction : 
 pending  : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 1 among pending : [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Decide 1 with phase True at level 1

After decision at level 1
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1]


New level: 2
 pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, 1024), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 576), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, 640), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 576), (19, 288), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 2 among pending : [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, 640), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 576), (19, 288), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Decide 7 with phase True at level 2

After decision at level 2
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1, 7]


New level: 3
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33]
 solution : [0, 2, 1, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, 640), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 576), (19, 288), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 80), (17, 96), (18, 128), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, 0)]

Covered at level 3 : {33}

After reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 80), (17, 96), (18, 128), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 80), (17, 96), (18, 128), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 3 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 3 among pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 80), (17, 96), (18, 128), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 15 with phase True at level 3

After decision at level 3
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15]


New level: 4
 pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 80), (17, 96), (18, 128), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 4 among pending : [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]


New level: 5
 pending : [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 0), (13, 16), (14, 0), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Covered at level 5 : {12, 14}

After reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]


Before reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 0), (13, 16), (14, 0), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [3, 4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11]


Solution : [0, 2, 1, 7, 15, 11] has cost 46.


Decide in level 5 among pending : [3, 4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Decide 3 with phase True at level 5

After decision at level 5
 pending : [4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


New level: 6
 pending : [4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [4, 5, 6, 8, 9, 10, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : {4, 8, 20, 22, 25, 27}

After reduction : 
 pending  : [5, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [5, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [5, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Solution : [0, 2, 1, 7, 15, 11, 3] has cost 59.


Decide in level 6 among pending : [5, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 5]


New level: 7
 pending : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 5]


Before reduction : 
 pending  : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 7 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 5]


Solution : [0, 2, 1, 7, 15, 11, 3, 5] has cost 72.


Before backtrack at level 7
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 3, 5]

After backtrack at level 7
 pending : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Solution : [0, 2, 1, 7, 15, 11, 3] has cost 59.


Decide in level 7 among pending : [6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 6]


New level: 8
 pending : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 6]


Before reduction : 
 pending  : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 8 : {32, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 6]


Solution : [0, 2, 1, 7, 15, 11, 3, 6] has cost 65.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 3, 6]

After backtrack at level 8
 pending : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Solution : [0, 2, 1, 7, 15, 11, 3] has cost 59.


Decide in level 8 among pending : [9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 9]


New level: 9
 pending : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 9]


Before reduction : 
 pending  : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 9]


Solution : [0, 2, 1, 7, 15, 11, 3, 9] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 3, 9]

After backtrack at level 9
 pending : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Solution : [0, 2, 1, 7, 15, 11, 3] has cost 59.


Decide in level 9 among pending : [10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 9

After decision at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 10]


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 10]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 10]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 10]


Solution : [0, 2, 1, 7, 15, 11, 3, 10] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 3, 10]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3, 10]


Invert decision for 10 at level 9


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

Essensial at level 10 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 13]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 3, 13]


Solution : [0, 2, 1, 7, 15, 11, 3, 13] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 3, 13]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 3]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 11, 3]

After backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 3]

After backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 3]


Before backtrack at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 3]

After backtrack at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 3]


Invert decision for 3 at level 5


New level: 6
 pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11]


Solution : [0, 2, 1, 7, 15, 11] has cost 46.


Decide in level 6 among pending : [13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Decide 24 with phase True at level 6

After decision at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]


New level: 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31, 32, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, 0), (29, 2), (30, 16), (31, 0), (32, 0), (33, -1)]

Covered at level 7 : {32, 28, 31}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, 0), (29, 2), (30, 16), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]


Solution : [0, 2, 1, 7, 15, 11, 24] has cost 56.


Decide in level 7 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 4, 8, 20, 22, 25, 27, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


New level: 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {8, 20, 22, 25, 27}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Solution : [0, 2, 1, 7, 15, 11, 24, 4] has cost 62.


Decide in level 8 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]


New level: 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {5, 6, 10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]


Solution : [0, 2, 1, 7, 15, 11, 24, 4, 9] has cost 68.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Solution : [0, 2, 1, 7, 15, 11, 24, 4] has cost 62.


Decide in level 9 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {5, 10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]


Solution : [0, 2, 1, 7, 15, 11, 24, 4, 6] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Solution : [0, 2, 1, 7, 15, 11, 24, 4] has cost 62.


Decide in level 10 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]


New level: 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]


Solution : [0, 2, 1, 7, 15, 11, 24, 4, 5] has cost 75.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Solution : [0, 2, 1, 7, 15, 11, 24, 4] has cost 62.


Decide in level 11 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {10, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]


Solution : [0, 2, 1, 7, 15, 11, 24, 4, 13] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 10]


Solution : [0, 2, 1, 7, 15, 11, 24, 4, 10] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 4, 10]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Before backtrack at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]

After backtrack at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 8, 20, 22, 25, 27, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 8, 20, 22, 25, 27, 9]
 solution : [0, 2, 1, 7, 15, 11, 24]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 8, 20, 22, 25, 27, 9]
 solution : [0, 2, 1, 7, 15, 11, 24]

Essensial at level 8 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {25, 27, 20, 22}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Solution : [0, 2, 1, 7, 15, 11, 24, 8] has cost 62.


Decide in level 8 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]


New level: 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]


Solution : [0, 2, 1, 7, 15, 11, 24, 8, 5] has cost 75.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Solution : [0, 2, 1, 7, 15, 11, 24, 8] has cost 62.


Decide in level 9 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]


New level: 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {9, 10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]


Solution : [0, 2, 1, 7, 15, 11, 24, 8, 6] has cost 68.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Solution : [0, 2, 1, 7, 15, 11, 24, 8] has cost 62.


Decide in level 10 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]


New level: 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]


Solution : [0, 2, 1, 7, 15, 11, 24, 8, 9] has cost 68.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Solution : [0, 2, 1, 7, 15, 11, 24, 8] has cost 62.


Decide in level 11 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {13, 16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]


Solution : [0, 2, 1, 7, 15, 11, 24, 8, 10] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 13]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

Essensial at level 12 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {16, 17, 18, 19, 21, 23, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 13]


Solution : [0, 2, 1, 7, 15, 11, 24, 8, 13] has cost 71.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 24, 8, 13]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]


Before backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 24, 8]

After backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]


Before backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11, 24]

After backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11, 24]


Invert decision for 24 at level 6


New level: 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11]


Solution : [0, 2, 1, 7, 15, 11] has cost 46.


Decide in level 7 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 8, 20, 22, 25, 27, 5, 28, 31, 32, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11, 8]


New level: 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 20, 22, 25, 27, 5, 28, 31, 32, 4]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {4, 20, 22, 25, 27}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Solution : [0, 2, 1, 7, 15, 11, 8] has cost 52.


Decide in level 8 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 9, 6, 5, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 8

After decision at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 9]


New level: 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 9]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 9]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 9]


Solution : [0, 2, 1, 7, 15, 11, 8, 9] has cost 58.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 8, 9]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 9]


Invert decision for 9 at level 8


New level: 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Solution : [0, 2, 1, 7, 15, 11, 8] has cost 52.


Decide in level 9 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 6, 5, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 6]


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 6]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 5, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 6]


Solution : [0, 2, 1, 7, 15, 11, 8, 6] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 8, 6]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Solution : [0, 2, 1, 7, 15, 11, 8] has cost 52.


Decide in level 10 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 5, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 5]


New level: 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 5]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 5]


Solution : [0, 2, 1, 7, 15, 11, 8, 5] has cost 65.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 8, 5]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Solution : [0, 2, 1, 7, 15, 11, 8] has cost 52.


Decide in level 11 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 13]


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 13]


Solution : [0, 2, 1, 7, 15, 11, 8, 13] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 8, 13]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 10, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 8, 10]


Solution : [0, 2, 1, 7, 15, 11, 8, 10] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 8, 10]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 8]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 8]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5]
 solution : [0, 2, 1, 7, 15, 11, 8]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6]
 solution : [0, 2, 1, 7, 15, 11, 8]


Before backtrack at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6]
 solution : [0, 2, 1, 7, 15, 11, 8]

After backtrack at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 20, 22, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 15, 11, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 20, 22, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 15, 11]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 20, 22, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 15, 11]

Essensial at level 8 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {25, 27, 20, 22}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Solution : [0, 2, 1, 7, 15, 11, 4] has cost 52.


Decide in level 8 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 5]


New level: 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 5]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 5]


Solution : [0, 2, 1, 7, 15, 11, 4, 5] has cost 65.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 4, 5]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Solution : [0, 2, 1, 7, 15, 11, 4] has cost 52.


Decide in level 9 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 6]


New level: 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 6]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 9, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 6]


Solution : [0, 2, 1, 7, 15, 11, 4, 6] has cost 58.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 4, 6]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Solution : [0, 2, 1, 7, 15, 11, 4] has cost 52.


Decide in level 10 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 9]


New level: 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 9]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 9]


Solution : [0, 2, 1, 7, 15, 11, 4, 9] has cost 58.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 4, 9]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4]


Solution : [0, 2, 1, 7, 15, 11, 4] has cost 52.


Decide in level 11 among pending : [10, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 10]


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 13, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 10]


Solution : [0, 2, 1, 7, 15, 11, 4, 10] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 4, 10]

After backtrack at level 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4, 10]


Invert decision for 10 at level 11


New level: 12
 pending : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 11, 4]

Essensial at level 12 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 16, 17, 18, 19, 21, 23, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 11, 4, 13]


Solution : [0, 2, 1, 7, 15, 11, 4, 13] has cost 61.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 11, 4, 13]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32]
 solution : [0, 2, 1, 7, 15, 11, 4]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 11, 4]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9]
 solution : [0, 2, 1, 7, 15, 11, 4]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 4]


Before backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6]
 solution : [0, 2, 1, 7, 15, 11, 4]

After backtrack at level 8
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11]


Before backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5]
 solution : [0, 2, 1, 7, 15, 11]

After backtrack at level 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 15, 11]


Before backtrack at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 15, 11]

After backtrack at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24]
 solution : [0, 2, 1, 7, 15, 11]


Before backtrack at level 5
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24]
 solution : [0, 2, 1, 7, 15, 11]

After backtrack at level 5
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 5 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 28, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 28 with phase True at level 5

After decision at level 5
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]


New level: 6
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 24, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, 128), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, 0), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : {24}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, 0), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28]


Solution : [0, 2, 1, 7, 15, 28] has cost 51.


Decide in level 6 among pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 9, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 6

After decision at level 6
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


New level: 7
 pending : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31, 32, 10, 6, 4, 20, 22, 25, 27, 5, 8, 12, 14, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

Covered at level 7 : {32, 5, 6, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 4, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 4, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 4, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Solution : [0, 2, 1, 7, 15, 28, 9] has cost 57.


Decide in level 7 among pending : [16, 17, 18, 19, 26, 30, 4, 20, 22, 25, 27, 8, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 4]


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {3, 8, 16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 4]


Solution : [0, 2, 1, 7, 15, 28, 9, 4] has cost 63.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 9, 4]

After backtrack at level 8
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 4]


Invert decision for 4 at level 7


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Solution : [0, 2, 1, 7, 15, 28, 9] has cost 57.


Decide in level 8 among pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 8]


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {3, 16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 8]


Solution : [0, 2, 1, 7, 15, 28, 9, 8] has cost 63.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 9, 8]

After backtrack at level 9
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 3]
 solution : [0, 2, 1, 7, 15, 28, 9]

Essensial at level 9 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 9, 3]


Solution : [0, 2, 1, 7, 15, 28, 9, 3] has cost 70.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 9, 3]

After backtrack at level 9
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before backtrack at level 8
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 28, 9]

After backtrack at level 8
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 28, 9]


Before backtrack at level 7
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 28, 9]

After backtrack at level 7
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28, 9]


Invert decision for 9 at level 6


New level: 7
 pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28]


Solution : [0, 2, 1, 7, 15, 28] has cost 51.


Decide in level 7 among pending : [3, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28, 3]


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 4]
 solution : [0, 2, 1, 7, 15, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {4, 8, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 3]


Solution : [0, 2, 1, 7, 15, 28, 3] has cost 64.


Before backtrack at level 8
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 3]

After backtrack at level 8
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28]


Solution : [0, 2, 1, 7, 15, 28] has cost 51.


Decide in level 8 among pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 6, 5, 12, 14, 20, 22, 25, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 5, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]


Solution : [0, 2, 1, 7, 15, 28, 6] has cost 57.


Decide in level 9 among pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6, 8]


New level: 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {4, 16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 8]


Solution : [0, 2, 1, 7, 15, 28, 6, 8] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 6, 8]

After backtrack at level 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6, 8]


Invert decision for 8 at level 9


New level: 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4]
 solution : [0, 2, 1, 7, 15, 28, 6]

Essensial at level 10 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : {16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 6, 4]


Solution : [0, 2, 1, 7, 15, 28, 6, 4] has cost 63.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 6, 4]

After backtrack at level 10
 pending : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 28, 6]


Before backtrack at level 9
 pending : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 28, 6]

After backtrack at level 9
 pending : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28]


Solution : [0, 2, 1, 7, 15, 28] has cost 51.


Decide in level 9 among pending : [4, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28, 4]


New level: 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14, 8]
 solution : [0, 2, 1, 7, 15, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : {8, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Solution : [0, 2, 1, 7, 15, 28, 4] has cost 57.


Decide in level 10 among pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 5, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 5]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 5]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 5]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 5]


Solution : [0, 2, 1, 7, 15, 28, 4, 5] has cost 70.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 4, 5]

After backtrack at level 11
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 5]


Invert decision for 5 at level 10


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Solution : [0, 2, 1, 7, 15, 28, 4] has cost 57.


Decide in level 11 among pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 12, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 14, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]


Solution : [0, 2, 1, 7, 15, 28, 4, 12] has cost 62.


Before backtrack at level 12
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]

After backtrack at level 12
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Solution : [0, 2, 1, 7, 15, 28, 4] has cost 57.


Decide in level 12 among pending : [16, 17, 18, 19, 26, 30, 13, 21, 23, 29, 10, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 13 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 13]


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 10, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 13]


Solution : [0, 2, 1, 7, 15, 28, 4, 13] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 4, 13]

After backtrack at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4, 13]


Invert decision for 13 at level 12


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]

Essensial at level 13 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 4, 10]


Solution : [0, 2, 1, 7, 15, 28, 4, 10] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 4, 10]

After backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 4]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 28, 4]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 28, 4]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 28, 4]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 20, 22, 25, 27, 8, 5]
 solution : [0, 2, 1, 7, 15, 28, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 20, 22, 25, 27, 8, 5]
 solution : [0, 2, 1, 7, 15, 28]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 20, 22, 25, 27, 8, 5]
 solution : [0, 2, 1, 7, 15, 28]

Essensial at level 10 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : {25, 27, 20, 22}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 5]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 5]
 solution : [0, 2, 1, 7, 15, 28, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 5]
 solution : [0, 2, 1, 7, 15, 28, 8]


Solution : [0, 2, 1, 7, 15, 28, 8] has cost 57.


Decide in level 10 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]


New level: 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 14, 31}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]


Solution : [0, 2, 1, 7, 15, 28, 8, 12] has cost 62.


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Solution : [0, 2, 1, 7, 15, 28, 8] has cost 57.


Decide in level 11 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 5, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 5]


New level: 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 5]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 5]


Solution : [0, 2, 1, 7, 15, 28, 8, 5] has cost 70.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 8, 5]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Solution : [0, 2, 1, 7, 15, 28, 8] has cost 57.


Decide in level 12 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 10]


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 10]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 10]


Solution : [0, 2, 1, 7, 15, 28, 8, 10] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 8, 10]

After backtrack at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8, 10]


Invert decision for 10 at level 12


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]

Essensial at level 13 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 13]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 28, 8, 13]


Solution : [0, 2, 1, 7, 15, 28, 8, 13] has cost 66.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 28, 8, 13]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 28, 8]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before backtrack at level 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 28, 8]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5]
 solution : [0, 2, 1, 7, 15, 28, 8]


Before backtrack at level 10
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5]
 solution : [0, 2, 1, 7, 15, 28, 8]

After backtrack at level 10
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12]
 solution : [0, 2, 1, 7, 15, 28]


Before backtrack at level 9
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12]
 solution : [0, 2, 1, 7, 15, 28]

After backtrack at level 9
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4]
 solution : [0, 2, 1, 7, 15, 28]


Before backtrack at level 8
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4]
 solution : [0, 2, 1, 7, 15, 28]

After backtrack at level 8
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6]
 solution : [0, 2, 1, 7, 15, 28]


Before backtrack at level 7
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6]
 solution : [0, 2, 1, 7, 15, 28]

After backtrack at level 7
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3]
 solution : [0, 2, 1, 7, 15, 28]


Before backtrack at level 6
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3]
 solution : [0, 2, 1, 7, 15, 28]

After backtrack at level 6
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15, 28]


Invert decision for 28 at level 5


New level: 6
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 6 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 5, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 5 with phase True at level 6

After decision at level 6
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15, 5]


New level: 7
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15, 5]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 8, 20, 22, 25, 27, 12, 4, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 15, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 128), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, 0), (32, 0), (33, -1)]

Covered at level 7 : {32, 6, 9, 10, 12, 13, 14, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 8, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 8, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 128), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 128), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 8, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]


Solution : [0, 2, 1, 7, 15, 5] has cost 54.


Decide in level 7 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 8, 20, 22, 25, 27, 4, 3, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 128), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 8]


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 128), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : {3, 4, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 8]


Solution : [0, 2, 1, 7, 15, 5, 8] has cost 60.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 1, 7, 15, 5, 8]

After backtrack at level 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 32), (25, 32), (26, 18), (27, 32), (28, -1), (29, 2), (30, 18), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]


Solution : [0, 2, 1, 7, 15, 5] has cost 54.


Decide in level 8 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 4, 3, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 32), (25, 32), (26, 18), (27, 32), (28, -1), (29, 2), (30, 18), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 4]


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, 32), (25, 32), (26, 18), (27, 32), (28, -1), (29, 2), (30, 18), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 4]


Solution : [0, 2, 1, 7, 15, 5, 4] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 5, 4]

After backtrack at level 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5, 4]


Invert decision for 4 at level 8


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 3, 24]
 solution : [0, 2, 1, 7, 15, 5]

Essensial at level 9 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : {16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 5, 3]


Solution : [0, 2, 1, 7, 15, 5, 3] has cost 67.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 15, 5, 3]

After backtrack at level 9
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24]
 solution : [0, 2, 1, 7, 15, 5]


Before backtrack at level 8
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24]
 solution : [0, 2, 1, 7, 15, 5]

After backtrack at level 8
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4]
 solution : [0, 2, 1, 7, 15, 5]


Before backtrack at level 7
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4]
 solution : [0, 2, 1, 7, 15, 5]

After backtrack at level 7
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15, 5]


Invert decision for 5 at level 6


New level: 7
 pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 7 among pending : [3, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15, 3]


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 24, 4, 13, 31, 32, 14, 10, 12, 6, 9, 8]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, 1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 8 : {4, 8, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 12, 6, 9]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 12, 6, 9]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, 1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 12, 6, 9]
 solution : [0, 2, 1, 7, 15, 3]


Solution : [0, 2, 1, 7, 15, 3] has cost 54.


Decide in level 8 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 12, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 12 with phase True at level 8

After decision at level 8
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 14, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : {14}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]


Solution : [0, 2, 1, 7, 15, 3, 12] has cost 59.


Before backtrack at level 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9]
 solution : [0, 2, 1, 7, 15, 3, 12]

After backtrack at level 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9, 14]
 solution : [0, 2, 1, 7, 15, 3, 12]


Invert decision for 12 at level 8


New level: 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]


Solution : [0, 2, 1, 7, 15, 3] has cost 54.


Decide in level 9 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 6, 9, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3, 6]


New level: 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 9, 10, 13, 14, 16, 17, 18, 19, 21, 23, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 6]


Solution : [0, 2, 1, 7, 15, 3, 6] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 15, 3, 6]

After backtrack at level 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]
 solution : [0, 2, 1, 7, 15, 3]


Solution : [0, 2, 1, 7, 15, 3] has cost 54.


Decide in level 10 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 9, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 9]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 10, 13, 14, 16, 17, 18, 19, 21, 23, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 9]


Solution : [0, 2, 1, 7, 15, 3, 9] has cost 60.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 3, 9]

After backtrack at level 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3]


Solution : [0, 2, 1, 7, 15, 3] has cost 54.


Decide in level 11 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 13, 31, 32, 10, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 13 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 13]


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, 1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 14, 16, 17, 18, 19, 21, 23, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 13]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 13]


Solution : [0, 2, 1, 7, 15, 3, 13] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 3, 13]

After backtrack at level 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3, 13]


Invert decision for 13 at level 11


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 3]

Essensial at level 12 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 14, 16, 17, 18, 19, 21, 23, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 10]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 3, 10]


Solution : [0, 2, 1, 7, 15, 3, 10] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 3, 10]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 3]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 3]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 3]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 3]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 3]


Before backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 3]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6]
 solution : [0, 2, 1, 7, 15, 3]


Before backtrack at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6]
 solution : [0, 2, 1, 7, 15, 3]

After backtrack at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 8 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 24, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 24 with phase True at level 8

After decision at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24]


New level: 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, 128), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24]


Solution : [0, 2, 1, 7, 15, 24] has cost 51.


Decide in level 9 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 6, 20, 22, 25, 27, 4, 8, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24, 9]


New level: 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24, 9]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 20, 22, 25, 27, 4, 8, 12]
 solution : [0, 2, 1, 7, 15, 24, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 6, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 15, 24, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 15, 24, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, 0), (22, 3), (23, 0), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, 0), (30, 2), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 15, 24, 9]


Solution : [0, 2, 1, 7, 15, 24, 9] has cost 57.


Decide in level 10 among pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9, 4]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 2), (17, 2), (18, 2), (19, 2), (20, 3), (21, -1), (22, 3), (23, -1), (24, -1), (25, 8), (26, 2), (27, 8), (28, -1), (29, -1), (30, 2), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {8, 16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 4]


Solution : [0, 2, 1, 7, 15, 24, 9, 4] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 9, 4]

After backtrack at level 11
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 24, 9]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {16, 17, 18, 19, 20, 22, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 9, 8]


Solution : [0, 2, 1, 7, 15, 24, 9, 8] has cost 63.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 9, 8]

After backtrack at level 11
 pending : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 24, 9]


Before backtrack at level 10
 pending : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 24, 9]

After backtrack at level 10
 pending : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24]


Before reduction : 
 pending  : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24]


Solution : [0, 2, 1, 7, 15, 24] has cost 51.


Decide in level 10 among pending : [8, 16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24, 8]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 20, 22, 25, 27, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12, 4]
 solution : [0, 2, 1, 7, 15, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 10), (19, 10), (20, 3), (21, 2), (22, 3), (23, 2), (24, -1), (25, 8), (26, 16), (27, 8), (28, -1), (29, 2), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : {4, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]


Solution : [0, 2, 1, 7, 15, 24, 8] has cost 57.


Decide in level 11 among pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 6, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8, 6]


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 6]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 6]


Solution : [0, 2, 1, 7, 15, 24, 8, 6] has cost 63.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 8, 6]

After backtrack at level 12
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8, 6]


Invert decision for 6 at level 11


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]


Solution : [0, 2, 1, 7, 15, 24, 8] has cost 57.


Decide in level 12 among pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 14, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]


Solution : [0, 2, 1, 7, 15, 24, 8, 12] has cost 62.


Before backtrack at level 13
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]

After backtrack at level 13
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]


Solution : [0, 2, 1, 7, 15, 24, 8] has cost 57.


Decide in level 13 among pending : [16, 17, 18, 19, 26, 30, 10, 21, 23, 29, 13, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8, 10]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 10]


Solution : [0, 2, 1, 7, 15, 24, 8, 10] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 8, 10]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]

Essensial at level 14 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 8, 13]


Solution : [0, 2, 1, 7, 15, 24, 8, 13] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 8, 13]

After backtrack at level 14
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 8]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 24, 8]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]


Before backtrack at level 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12]
 solution : [0, 2, 1, 7, 15, 24, 8]

After backtrack at level 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 20, 22, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 15, 24, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 20, 22, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 15, 24]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 20, 22, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 15, 24]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : {25, 27, 20, 22}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 6]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 6]
 solution : [0, 2, 1, 7, 15, 24, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 6]
 solution : [0, 2, 1, 7, 15, 24, 4]


Solution : [0, 2, 1, 7, 15, 24, 4] has cost 57.


Decide in level 11 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 12, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]


New level: 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 14, 31}

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]


Solution : [0, 2, 1, 7, 15, 24, 4, 12] has cost 62.


Before backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Solution : [0, 2, 1, 7, 15, 24, 4] has cost 57.


Decide in level 12 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 6, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 6]


New level: 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 6]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 10, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 6]


Solution : [0, 2, 1, 7, 15, 24, 4, 6] has cost 63.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 4, 6]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Solution : [0, 2, 1, 7, 15, 24, 4] has cost 57.


Decide in level 13 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 13]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 4), (17, 4), (18, 4), (19, 4), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 10, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 13]


Solution : [0, 2, 1, 7, 15, 24, 4, 13] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 4, 13]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 24, 4, 10]


Solution : [0, 2, 1, 7, 15, 24, 4, 10] has cost 66.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 24, 4, 10]

After backtrack at level 14
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 24, 4]

After backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 24, 4]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6]
 solution : [0, 2, 1, 7, 15, 24, 4]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6]
 solution : [0, 2, 1, 7, 15, 24, 4]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12]
 solution : [0, 2, 1, 7, 15, 24]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12]
 solution : [0, 2, 1, 7, 15, 24]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8]
 solution : [0, 2, 1, 7, 15, 24]


Before backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8]
 solution : [0, 2, 1, 7, 15, 24]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15, 24]


Invert decision for 24 at level 8


New level: 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 9 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 6, 4, 20, 22, 25, 27, 12, 8, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15, 6]


New level: 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15, 6]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 4, 20, 22, 25, 27, 12, 8, 9]
 solution : [0, 2, 1, 7, 15, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, -1), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 9, 10, 12, 13, 14, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 4, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 4, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, -1), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, -1), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 4, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6]


Solution : [0, 2, 1, 7, 15, 6] has cost 47.


Decide in level 10 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 4, 20, 22, 25, 27, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, -1), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6, 4]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 6), (17, 6), (18, 6), (19, 6), (20, 9), (21, 2), (22, 9), (23, 2), (24, -1), (25, 32), (26, 66), (27, 32), (28, -1), (29, 2), (30, 66), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {8, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 4]


Solution : [0, 2, 1, 7, 15, 6, 4] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 6, 4]

After backtrack at level 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 8]
 solution : [0, 2, 1, 7, 15, 6]

Essensial at level 11 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 6, 8]


Solution : [0, 2, 1, 7, 15, 6, 8] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 15, 6, 8]

After backtrack at level 11
 pending : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 6]


Before backtrack at level 10
 pending : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27]
 solution : [0, 2, 1, 7, 15, 6]

After backtrack at level 10
 pending : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15]


Solution : [0, 2, 1, 7, 15] has cost 41.


Decide in level 10 among pending : [8, 16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

Decide 8 with phase True at level 10

After decision at level 10
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15, 8]


New level: 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 20, 22, 25, 27, 10, 31, 32, 14, 13, 12, 9, 4]
 solution : [0, 2, 1, 7, 15, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 24), (17, 24), (18, 24), (19, 24), (20, 9), (21, 8), (22, 9), (23, 8), (24, -1), (25, 32), (26, 80), (27, 32), (28, -1), (29, 8), (30, 80), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 11 : {4, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 12, 9]
 solution : [0, 2, 1, 7, 15, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 12, 9]
 solution : [0, 2, 1, 7, 15, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 12, 9]
 solution : [0, 2, 1, 7, 15, 8]


Solution : [0, 2, 1, 7, 15, 8] has cost 47.


Decide in level 11 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 12, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 12 with phase True at level 11

After decision at level 11
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]


New level: 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : {14}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]


Solution : [0, 2, 1, 7, 15, 8, 12] has cost 52.


Decide in level 12 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 9]


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 9]


Solution : [0, 2, 1, 7, 15, 8, 12, 9] has cost 58.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 12, 9]

After backtrack at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12]


Solution : [0, 2, 1, 7, 15, 8, 12] has cost 52.


Decide in level 13 among pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 10, 31, 32, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 10]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 10]


Solution : [0, 2, 1, 7, 15, 8, 12, 10] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 12, 10]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 8, 12]

Essensial at level 14 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 12, 13]


Solution : [0, 2, 1, 7, 15, 8, 12, 13] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 12, 13]

After backtrack at level 14
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32]
 solution : [0, 2, 1, 7, 15, 8, 12]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 8, 12]


Before backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10]
 solution : [0, 2, 1, 7, 15, 8, 12]

After backtrack at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 15, 8, 12]


Invert decision for 12 at level 11


New level: 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 15, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 15, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 15, 8]


Solution : [0, 2, 1, 7, 15, 8] has cost 47.


Decide in level 12 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 9]


New level: 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 9]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 10, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 9]


Solution : [0, 2, 1, 7, 15, 8, 9] has cost 53.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 9]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8]


Solution : [0, 2, 1, 7, 15, 8] has cost 47.


Decide in level 13 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 13]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 10, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 13]


Solution : [0, 2, 1, 7, 15, 8, 13] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 13]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 15, 8]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 8, 10]


Solution : [0, 2, 1, 7, 15, 8, 10] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 8, 10]

After backtrack at level 14
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 8]


Before backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 8]

After backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 8]


Before backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 8]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 8]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9]
 solution : [0, 2, 1, 7, 15, 8]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 20, 22, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 15, 8]


Invert decision for 8 at level 10


New level: 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 20, 22, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 15]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 20, 22, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 15]

Essensial at level 11 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 11 : {25, 27, 20, 22}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 12]
 solution : [0, 2, 1, 7, 15, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 12]
 solution : [0, 2, 1, 7, 15, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, 0), (21, 2), (22, 0), (23, 2), (24, -1), (25, 0), (26, 5), (27, 0), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 12]
 solution : [0, 2, 1, 7, 15, 4]


Solution : [0, 2, 1, 7, 15, 4] has cost 47.


Decide in level 11 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 9, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4, 9]


New level: 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4, 9]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 9]


Solution : [0, 2, 1, 7, 15, 4, 9] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 15, 4, 9]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4]


Solution : [0, 2, 1, 7, 15, 4] has cost 47.


Decide in level 12 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 12 with phase True at level 12

After decision at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]


New level: 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : {14}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]


Solution : [0, 2, 1, 7, 15, 4, 12] has cost 52.


Decide in level 13 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 10 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12, 10]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 13, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 10]


Solution : [0, 2, 1, 7, 15, 4, 12, 10] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 4, 12, 10]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12, 10]


Invert decision for 10 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13]
 solution : [0, 2, 1, 7, 15, 4, 12]

Essensial at level 14 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 12, 13]


Solution : [0, 2, 1, 7, 15, 4, 12, 13] has cost 61.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 4, 12, 13]

After backtrack at level 14
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32]
 solution : [0, 2, 1, 7, 15, 4, 12]


Before backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32]
 solution : [0, 2, 1, 7, 15, 4, 12]

After backtrack at level 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4, 12]


Invert decision for 12 at level 12


New level: 13
 pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4]


Before reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4]


Solution : [0, 2, 1, 7, 15, 4] has cost 47.


Decide in level 13 among pending : [13, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

Decide 13 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4, 13]


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 5), (17, 5), (18, 5), (19, 6), (20, -1), (21, 2), (22, -1), (23, 2), (24, -1), (25, -1), (26, 5), (27, -1), (28, -1), (29, 2), (30, 5), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 10, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 13]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 13]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 13]


Solution : [0, 2, 1, 7, 15, 4, 13] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 4, 13]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4, 13]


Invert decision for 13 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 10]
 solution : [0, 2, 1, 7, 15, 4]

Essensial at level 14 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 14, 16, 17, 18, 19, 21, 23, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 10]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 10]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 15, 4, 10]


Solution : [0, 2, 1, 7, 15, 4, 10] has cost 56.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 15, 4, 10]

After backtrack at level 14
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 4]


Before backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 15, 4]

After backtrack at level 13
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 4]


Before backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13]
 solution : [0, 2, 1, 7, 15, 4]

After backtrack at level 12
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4]


Before backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12]
 solution : [0, 2, 1, 7, 15, 4]

After backtrack at level 11
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 7
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 7
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 6
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 6
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 5
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 5
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 15]


Before backtrack at level 4
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 15]

After backtrack at level 4
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28, 11]
 solution : [0, 2, 1, 7, 15]


Invert decision for 15 at level 3


New level: 4
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28, 11]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28, 11]
 solution : [0, 2, 1, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28, 11]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 4 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 11 with phase True at level 4

After decision at level 4
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]


New level: 5
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 14, 13, 12, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 0), (13, 16), (14, 0), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 5 : {12, 14}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, 0), (13, 16), (14, 0), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 5 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 20, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 20 with phase True at level 5

After decision at level 5
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]


New level: 6
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 22, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, 0), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : {22}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, 0), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20]


Solution : [0, 2, 1, 7, 11, 20] has cost 41.


Decide in level 6 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 4, 25, 27, 9, 8, 6, 24, 3, 5, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Decide 4 with phase True at level 6

After decision at level 6
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


New level: 7
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 25, 27, 9, 8, 6, 24, 3, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : {8, 25, 27, 3}

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 9, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 9, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 9, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 7 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 9, 6, 24, 5, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 7

After decision at level 7
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 9]


New level: 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 9]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 8 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 9]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 9]


Solution : [0, 2, 1, 7, 11, 20, 4, 9] has cost 53.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 4, 9]

After backtrack at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 9]


Invert decision for 9 at level 7


New level: 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 8 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 6, 24, 5, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 6]


New level: 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 6]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 5, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 6]


Solution : [0, 2, 1, 7, 11, 20, 4, 6] has cost 53.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 4, 6]

After backtrack at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 9 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 5, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 5]


New level: 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 5]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 4, 5]


Solution : [0, 2, 1, 7, 11, 20, 4, 5] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 4, 5]

After backtrack at level 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 10 among pending : [10, 16, 17, 18, 19, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 19 with phase True at level 10

After decision at level 10
 pending : [10, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]


New level: 11
 pending : [10, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]


Before reduction : 
 pending  : [10, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 13, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 16, 17, 18, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]


Solution : [0, 2, 1, 7, 11, 20, 4, 19] has cost 81.


Before backtrack at level 11
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]

After backtrack at level 11
 pending : [10, 13, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 19]


Invert decision for 19 at level 10


New level: 11
 pending : [10, 13, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 13, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 11 among pending : [10, 13, 16, 17, 18, 26, 30, 21, 23, 29, 31, 32, 24, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 18 with phase True at level 11

After decision at level 11
 pending : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]


New level: 12
 pending : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]


Before reduction : 
 pending  : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 16, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]


Solution : [0, 2, 1, 7, 11, 20, 4, 18] has cost 81.


Before backtrack at level 12
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]

After backtrack at level 12
 pending : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 18]


Invert decision for 18 at level 11


New level: 12
 pending : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Solution : [0, 2, 1, 7, 11, 20, 4] has cost 47.


Decide in level 12 among pending : [10, 13, 16, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 16 with phase True at level 12

After decision at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]


Solution : [0, 2, 1, 7, 11, 20, 4, 16] has cost 81.


Before backtrack at level 13
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4, 16]


Invert decision for 16 at level 12


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

Essensial at level 13 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 17]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 17]


Solution : [0, 2, 1, 7, 11, 20, 4, 17] has cost 81.


Before backtrack at level 13
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 4, 17]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 8
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 8
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 20, 4]


Before backtrack at level 7
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 20, 4]

After backtrack at level 7
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 20, 4]


Invert decision for 4 at level 6


New level: 7
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 20]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 20]


Solution : [0, 2, 1, 7, 11, 20] has cost 41.


Decide in level 7 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 8, 3, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


New level: 8
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {3, 25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 8 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 8

After decision at level 8
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 5]


New level: 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 5]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 5]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 5]


Solution : [0, 2, 1, 7, 11, 20, 8, 5] has cost 60.


Before backtrack at level 9
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 8, 5]

After backtrack at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 5]


Invert decision for 5 at level 8


New level: 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 9 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 9

After decision at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 6]


New level: 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 6]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 6]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 6]


Solution : [0, 2, 1, 7, 11, 20, 8, 6] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 8, 6]

After backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8, 6]


Invert decision for 6 at level 9


New level: 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 10 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8, 9]


New level: 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8, 9]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 20, 8, 9]


Solution : [0, 2, 1, 7, 11, 20, 8, 9] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 11, 20, 8, 9]

After backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 11 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 19 with phase True at level 11

After decision at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]


New level: 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 16, 17, 18, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]


Solution : [0, 2, 1, 7, 11, 20, 8, 19] has cost 81.


Before backtrack at level 12
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8, 19]


Invert decision for 19 at level 11


New level: 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 12 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 18 with phase True at level 12

After decision at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 16, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]


Solution : [0, 2, 1, 7, 11, 20, 8, 18] has cost 81.


Before backtrack at level 13
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 18]


Invert decision for 18 at level 12


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8]


Solution : [0, 2, 1, 7, 11, 20, 8] has cost 47.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 17 with phase True at level 13

After decision at level 13
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]


New level: 14
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 16, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]


Solution : [0, 2, 1, 7, 11, 20, 8, 17] has cost 81.


Before backtrack at level 14
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]

After backtrack at level 14
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8, 17]


Invert decision for 17 at level 13


New level: 14
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 20, 8]

Essensial at level 14 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 16]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 16]


Solution : [0, 2, 1, 7, 11, 20, 8, 16] has cost 81.


Before backtrack at level 14
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 20, 8, 16]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 20, 8]


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 20, 8]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 20, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 20]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 20]

Essensial at level 8 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {25, 27}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 20, 3]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 20, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 20, 3]


Solution : [0, 2, 1, 7, 11, 20, 3] has cost 54.


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 20, 3]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27]
 solution : [0, 2, 1, 7, 11, 20]


Before backtrack at level 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27]
 solution : [0, 2, 1, 7, 11, 20]

After backtrack at level 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8]
 solution : [0, 2, 1, 7, 11, 20]


Before backtrack at level 6
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8]
 solution : [0, 2, 1, 7, 11, 20]

After backtrack at level 6
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 22, 4]
 solution : [0, 2, 1, 7, 11, 20]


Invert decision for 20 at level 5


New level: 6
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 22, 4]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 22, 4]
 solution : [0, 2, 1, 7, 11]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 22, 4]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 6 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 22, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 22 with phase True at level 6

After decision at level 6
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]


New level: 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]


Solution : [0, 2, 1, 7, 11, 22] has cost 41.


Decide in level 7 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 3, 25, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Decide 3 with phase True at level 7

After decision at level 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22, 3]


New level: 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22, 3]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {8, 25, 27, 4}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 3]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 3]


Solution : [0, 2, 1, 7, 11, 22, 3] has cost 54.


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 3]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22, 3]


Invert decision for 3 at level 7


New level: 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]
 solution : [0, 2, 1, 7, 11, 22]


Solution : [0, 2, 1, 7, 11, 22] has cost 41.


Decide in level 8 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 8, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Decide 8 with phase True at level 8

After decision at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 4]
 solution : [0, 2, 1, 7, 11, 22, 8]


New level: 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 4]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5, 25, 27, 4]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : {25, 27, 4}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 9 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 9

After decision at level 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 9]


New level: 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 9]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 9]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 9]


Solution : [0, 2, 1, 7, 11, 22, 8, 9] has cost 53.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 8, 9]

After backtrack at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 9]


Invert decision for 9 at level 9


New level: 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 10 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 6]


New level: 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 6]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 5, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 6]


Solution : [0, 2, 1, 7, 11, 22, 8, 6] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 8, 6]

After backtrack at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 11 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8, 5]


New level: 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8, 5]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 8, 5]


Solution : [0, 2, 1, 7, 11, 22, 8, 5] has cost 60.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 8, 5]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 12 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]


New level: 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 16, 17, 18, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]


Solution : [0, 2, 1, 7, 11, 22, 8, 19] has cost 81.


Before backtrack at level 13
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 13 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]


New level: 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 16, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]


Solution : [0, 2, 1, 7, 11, 22, 8, 18] has cost 81.


Before backtrack at level 14
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8]


Solution : [0, 2, 1, 7, 11, 22, 8] has cost 47.


Decide in level 14 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]


New level: 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]


Solution : [0, 2, 1, 7, 11, 22, 8, 16] has cost 81.


Before backtrack at level 15
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]

After backtrack at level 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 8]

Essensial at level 15 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 17]


Solution : [0, 2, 1, 7, 11, 22, 8, 17] has cost 81.


Before backtrack at level 15
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 8, 17]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 22, 8]


Before backtrack at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 22, 8]

After backtrack at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 11, 22, 8]


Invert decision for 8 at level 8


New level: 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 11, 22]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 25, 27, 4, 9]
 solution : [0, 2, 1, 7, 11, 22]

Essensial at level 9 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : {25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 9 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 5 with phase True at level 9

After decision at level 9
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 5]


New level: 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 5]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 5]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 5]


Solution : [0, 2, 1, 7, 11, 22, 4, 5] has cost 60.


Before backtrack at level 10
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 4, 5]

After backtrack at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 5]


Invert decision for 5 at level 9


New level: 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 10 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 6]


New level: 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 6]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 9, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 6]


Solution : [0, 2, 1, 7, 11, 22, 4, 6] has cost 53.


Before backtrack at level 11
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 4, 6]

After backtrack at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 11 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4, 9]


New level: 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4, 9]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 10, 13, 16, 17, 18, 19, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 22, 4, 9]


Solution : [0, 2, 1, 7, 11, 22, 4, 9] has cost 53.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 11, 22, 4, 9]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 12 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 19 with phase True at level 12

After decision at level 12
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 16, 17, 18, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]


Solution : [0, 2, 1, 7, 11, 22, 4, 19] has cost 81.


Before backtrack at level 13
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4, 19]


Invert decision for 19 at level 12


New level: 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 18 with phase True at level 13

After decision at level 13
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]


New level: 14
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, 22), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 16, 17, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]


Solution : [0, 2, 1, 7, 11, 22, 4, 18] has cost 81.


Before backtrack at level 14
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 18]


Invert decision for 18 at level 13


New level: 14
 pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4]


Solution : [0, 2, 1, 7, 11, 22, 4] has cost 47.


Decide in level 14 among pending : [10, 13, 17, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

Decide 17 with phase True at level 14

After decision at level 14
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]


New level: 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 17), (17, 17), (18, -1), (19, -1), (20, -1), (21, 10), (22, -1), (23, 10), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 2), (30, 5), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 16, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]


Solution : [0, 2, 1, 7, 11, 22, 4, 17] has cost 81.


Before backtrack at level 15
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]

After backtrack at level 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4, 17]


Invert decision for 17 at level 14


New level: 15
 pending : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 21, 23, 29, 31, 32, 24, 28, 16]
 solution : [0, 2, 1, 7, 11, 22, 4]

Essensial at level 15 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 21, 23, 24, 26, 28, 29, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, 0), (22, -1), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 16]


Solution : [0, 2, 1, 7, 11, 22, 4, 16] has cost 81.


Before backtrack at level 15
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 22, 4, 16]

After backtrack at level 15
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 11
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 10
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 22, 4]


Before backtrack at level 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 22, 4]

After backtrack at level 9
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5]
 solution : [0, 2, 1, 7, 11, 22]


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5]
 solution : [0, 2, 1, 7, 11, 22]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 11, 22]


Before backtrack at level 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 11, 22]

After backtrack at level 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 22]


Invert decision for 22 at level 6


New level: 7
 pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 7 among pending : [10, 13, 16, 26, 30, 21, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 21 with phase True at level 7

After decision at level 7
 pending : [10, 13, 16, 26, 30, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]


New level: 8
 pending : [10, 13, 16, 26, 30, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 23, 29, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, 0), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : {29, 23}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, 0), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]


Solution : [0, 2, 1, 7, 11, 21] has cost 54.


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 21]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 23, 29]
 solution : [0, 2, 1, 7, 11, 21]


Invert decision for 21 at level 7


New level: 8
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 23, 29]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 23, 29]
 solution : [0, 2, 1, 7, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 23, 29]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 8 among pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 23, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 23 with phase True at level 8

After decision at level 8
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 23]


New level: 9
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 23]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 64), (25, 32), (26, 16), (27, 32), (28, 64), (29, 0), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : {29}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 23]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 23]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 64), (25, 32), (26, 16), (27, 32), (28, 64), (29, 0), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 64), (25, 32), (26, 16), (27, 32), (28, 64), (29, -1), (30, 16), (31, 1), (32, 1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 23]


Solution : [0, 2, 1, 7, 11, 23] has cost 54.


Before backtrack at level 9
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3]
 solution : [0, 2, 1, 7, 11, 23]

After backtrack at level 9
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 23]


Invert decision for 23 at level 8


New level: 9
 pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 64), (25, 32), (26, 16), (27, 32), (28, 64), (29, -1), (30, 16), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 9 among pending : [10, 13, 16, 26, 30, 31, 32, 24, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 24 with phase True at level 9

After decision at level 9
 pending : [10, 13, 16, 26, 30, 31, 32, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]


New level: 10
 pending : [10, 13, 16, 26, 30, 31, 32, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 28, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, 0), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

Covered at level 10 : {32, 28, 31}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, 0), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24]


Solution : [0, 2, 1, 7, 11, 24] has cost 35.


Decide in level 10 among pending : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 4, 25, 27, 5, 8, 3, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 10

After decision at level 10
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


New level: 11
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 25, 27, 5, 8, 3, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : {8, 25, 27, 3}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 11 among pending : [10, 13, 16, 26, 30, 17, 18, 19, 9, 6, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 11

After decision at level 11
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 9]


New level: 12
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 9]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {5, 6, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 9]


Solution : [0, 2, 1, 7, 11, 24, 4, 9] has cost 47.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 4, 9]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 9]


Invert decision for 9 at level 11


New level: 12
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 12 among pending : [10, 13, 16, 26, 30, 17, 18, 19, 6, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 6]


New level: 13
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 6]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {5, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 6]


Solution : [0, 2, 1, 7, 11, 24, 4, 6] has cost 47.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 4, 6]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 13 among pending : [10, 13, 16, 26, 30, 17, 18, 19, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 5]


New level: 14
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 5]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 4, 5]


Solution : [0, 2, 1, 7, 11, 24, 4, 5] has cost 54.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 4, 5]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 14 among pending : [10, 13, 16, 26, 30, 17, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 14

After decision at level 14
 pending : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]


New level: 15
 pending : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]


Solution : [0, 2, 1, 7, 11, 24, 4, 16] has cost 75.


Before backtrack at level 15
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]

After backtrack at level 15
 pending : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 16]


Invert decision for 16 at level 14


New level: 15
 pending : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 17, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 15 among pending : [10, 13, 26, 30, 17, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 15

After decision at level 15
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]


New level: 16
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {18, 19, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]


Solution : [0, 2, 1, 7, 11, 24, 4, 17] has cost 75.


Before backtrack at level 16
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]

After backtrack at level 16
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 17]


Invert decision for 17 at level 15


New level: 16
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Solution : [0, 2, 1, 7, 11, 24, 4] has cost 41.


Decide in level 16 among pending : [10, 13, 26, 30, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 16

After decision at level 16
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]


New level: 17
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 18, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]


Solution : [0, 2, 1, 7, 11, 24, 4, 19] has cost 75.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]

After backtrack at level 17
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4, 19]


Invert decision for 19 at level 16


New level: 17
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

Essensial at level 17 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 18]


Solution : [0, 2, 1, 7, 11, 24, 4, 18] has cost 75.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 4, 18]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 19]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 17]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6]
 solution : [0, 2, 1, 7, 11, 24, 4]


Before backtrack at level 11
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6]
 solution : [0, 2, 1, 7, 11, 24, 4]

After backtrack at level 11
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 24, 4]


Invert decision for 4 at level 10


New level: 11
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 24]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 24]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 8, 3, 9]
 solution : [0, 2, 1, 7, 11, 24]


Solution : [0, 2, 1, 7, 11, 24] has cost 35.


Decide in level 11 among pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 8, 3, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


New level: 12
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {3, 25, 27}

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 12 among pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 12

After decision at level 12
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 5]


New level: 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 5]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {6, 9, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 5]


Solution : [0, 2, 1, 7, 11, 24, 8, 5] has cost 54.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 8, 5]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 5]


Invert decision for 5 at level 12


New level: 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 13 among pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 6]


New level: 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 6]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {9, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 6]


Solution : [0, 2, 1, 7, 11, 24, 8, 6] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 8, 6]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 14 among pending : [10, 13, 18, 26, 30, 29, 19, 17, 16, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 9]


New level: 15
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 9]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 24, 8, 9]


Solution : [0, 2, 1, 7, 11, 24, 8, 9] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 24, 8, 9]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 15 among pending : [10, 13, 18, 26, 30, 29, 19, 17, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 15

After decision at level 15
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]


New level: 16
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {16, 17, 18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]


Solution : [0, 2, 1, 7, 11, 24, 8, 19] has cost 75.


Before backtrack at level 16
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 19]


Invert decision for 19 at level 15


New level: 16
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 16 among pending : [10, 13, 18, 26, 30, 29, 17, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 16

After decision at level 16
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]


New level: 17
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]


Solution : [0, 2, 1, 7, 11, 24, 8, 17] has cost 75.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8, 17]


Invert decision for 17 at level 16


New level: 17
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Solution : [0, 2, 1, 7, 11, 24, 8] has cost 41.


Decide in level 17 among pending : [10, 13, 18, 26, 30, 29, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]


New level: 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]


Solution : [0, 2, 1, 7, 11, 24, 8, 16] has cost 75.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]

After backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8]

Essensial at level 18 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 18]


Solution : [0, 2, 1, 7, 11, 24, 8, 18] has cost 75.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 24, 8, 18]

After backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 16]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 24, 8]


Before backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 24, 8]

After backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 24, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 24]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 25, 27, 3, 5]
 solution : [0, 2, 1, 7, 11, 24]

Essensial at level 12 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {25, 27}

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 24, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 24, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 24, 3]


Solution : [0, 2, 1, 7, 11, 24, 3] has cost 48.


Before backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 24, 3]

After backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27]
 solution : [0, 2, 1, 7, 11, 24]


Before backtrack at level 11
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27]
 solution : [0, 2, 1, 7, 11, 24]

After backtrack at level 11
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8]
 solution : [0, 2, 1, 7, 11, 24]


Before backtrack at level 10
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8]
 solution : [0, 2, 1, 7, 11, 24]

After backtrack at level 10
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11, 24]


Invert decision for 24 at level 9


New level: 10
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 10 among pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 3, 25, 27, 8, 31, 32, 28, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 3 with phase True at level 10

After decision at level 10
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11, 3]


New level: 11
 pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 25, 27, 8, 31, 32, 28, 4]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, 8), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : {8, 25, 27, 4}

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, 8), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 11 among pending : [10, 13, 18, 26, 30, 29, 16, 17, 19, 9, 6, 5, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 11

After decision at level 11
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]


New level: 12
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, 4), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]


Solution : [0, 2, 1, 7, 11, 3, 29] has cost 48.


Before backtrack at level 12
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]

After backtrack at level 12
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 29]


Invert decision for 29 at level 11


New level: 12
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, 4), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 12 among pending : [10, 13, 18, 26, 30, 16, 17, 19, 9, 6, 5, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 12

After decision at level 12
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 9]


New level: 13
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 9]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 26, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 9]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 9]


Solution : [0, 2, 1, 7, 11, 3, 9] has cost 44.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 11, 3, 9]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 9]


Invert decision for 9 at level 12


New level: 13
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 13 among pending : [10, 13, 18, 26, 30, 16, 17, 19, 6, 5, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 6]


New level: 14
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 6]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 5, 10, 13, 16, 17, 18, 19, 26, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 6]


Solution : [0, 2, 1, 7, 11, 3, 6] has cost 44.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 11, 3, 6]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 14 among pending : [10, 13, 18, 26, 30, 16, 17, 19, 5, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 5]


New level: 15
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 5]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 10, 13, 16, 17, 18, 19, 26, 28, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 3, 5]


Solution : [0, 2, 1, 7, 11, 3, 5] has cost 51.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 3, 5]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 15 among pending : [10, 13, 18, 26, 30, 16, 17, 19, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 19 with phase True at level 15

After decision at level 15
 pending : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 19]


New level: 16
 pending : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 19]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 16, 17, 18, 26, 28, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 19]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 19]


Solution : [0, 2, 1, 7, 11, 3, 19] has cost 72.


Before backtrack at level 16
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 19]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 19]


Invert decision for 19 at level 15


New level: 16
 pending : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 16 among pending : [10, 13, 18, 26, 30, 16, 17, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 18 with phase True at level 16

After decision at level 16
 pending : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 18]


New level: 17
 pending : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 18]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 16, 17, 26, 28, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 18]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 18]


Solution : [0, 2, 1, 7, 11, 3, 18] has cost 72.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 18]

After backtrack at level 17
 pending : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 18]


Invert decision for 18 at level 16


New level: 17
 pending : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 16, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Solution : [0, 2, 1, 7, 11, 3] has cost 38.


Decide in level 17 among pending : [10, 13, 26, 30, 16, 17, 31, 32, 28]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 16]


New level: 18
 pending : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, 8), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 17, 26, 28, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 16]


Solution : [0, 2, 1, 7, 11, 3, 16] has cost 72.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 16]

After backtrack at level 18
 pending : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

Essensial at level 18 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 26, 28, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 17]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, 0), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 17]


Solution : [0, 2, 1, 7, 11, 3, 17] has cost 72.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 3, 17]

After backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 28]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 12
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 3]


Before backtrack at level 11
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 3]

After backtrack at level 11
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 3]


Invert decision for 3 at level 10


New level: 11
 pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 11 among pending : [10, 13, 17, 26, 30, 31, 32, 28, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 28 with phase True at level 11

After decision at level 11
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]


New level: 12
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 31}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]
 solution : [0, 2, 1, 7, 11, 28]


Solution : [0, 2, 1, 7, 11, 28] has cost 35.


Decide in level 12 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 8, 4, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 4, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


New level: 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 4, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 25, 27, 4, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {25, 27, 4}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 6, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 5]


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 5]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {6, 9, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 5]


Solution : [0, 2, 1, 7, 11, 28, 8, 5] has cost 54.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 8, 5]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 14 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 6]


New level: 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 6]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {9, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 6]


Solution : [0, 2, 1, 7, 11, 28, 8, 6] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 8, 6]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 15 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 9]


New level: 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 9]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 8, 9]


Solution : [0, 2, 1, 7, 11, 28, 8, 9] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 8, 9]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 16 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 16

After decision at level 16
 pending : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]


New level: 17
 pending : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 18, 19, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]


Solution : [0, 2, 1, 7, 11, 28, 8, 17] has cost 75.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]

After backtrack at level 17
 pending : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 17]


Invert decision for 17 at level 16


New level: 17
 pending : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 16, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 17 among pending : [10, 13, 26, 30, 16, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]


New level: 18
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {18, 19, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]


Solution : [0, 2, 1, 7, 11, 28, 8, 16] has cost 75.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]

After backtrack at level 18
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 18, 19, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Solution : [0, 2, 1, 7, 11, 28, 8] has cost 41.


Decide in level 18 among pending : [10, 13, 26, 30, 18, 19, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 18

After decision at level 18
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]


New level: 19
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, -1), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {26, 18, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]


Solution : [0, 2, 1, 7, 11, 28, 8, 19] has cost 75.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]

After backtrack at level 19
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8, 19]


Invert decision for 19 at level 18


New level: 19
 pending : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 18, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

Essensial at level 19 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 18]


Solution : [0, 2, 1, 7, 11, 28, 8, 18] has cost 75.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 8, 18]

After backtrack at level 19
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29, 19]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 19]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 19, 16]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 19, 16]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6]
 solution : [0, 2, 1, 7, 11, 28, 8]


Before backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6]
 solution : [0, 2, 1, 7, 11, 28, 8]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 25, 27, 4, 5]
 solution : [0, 2, 1, 7, 11, 28, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 25, 27, 4, 5]
 solution : [0, 2, 1, 7, 11, 28]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 25, 27, 4, 5]
 solution : [0, 2, 1, 7, 11, 28]

Essensial at level 13 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {25, 27}

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 13 among pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 9, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 9 with phase True at level 13

After decision at level 13
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 9]


New level: 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 9]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {5, 6, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 9]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 9]


Solution : [0, 2, 1, 7, 11, 28, 4, 9] has cost 47.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 4, 9]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 9]


Invert decision for 9 at level 13


New level: 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 14 among pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 6]


New level: 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 6]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : {5, 10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 6]


Solution : [0, 2, 1, 7, 11, 28, 4, 6] has cost 47.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 4, 6]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 15 among pending : [10, 13, 18, 26, 30, 29, 19, 16, 17, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 5]


New level: 16
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 5]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {10, 13, 16, 17, 18, 19, 26, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 28, 4, 5]


Solution : [0, 2, 1, 7, 11, 28, 4, 5] has cost 54.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 11, 28, 4, 5]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 19, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 16 among pending : [10, 13, 18, 26, 30, 29, 19, 16, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 19 with phase True at level 16

After decision at level 16
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]


New level: 17
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : {16, 17, 18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]


Solution : [0, 2, 1, 7, 11, 28, 4, 19] has cost 75.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 19]


Invert decision for 19 at level 16


New level: 17
 pending : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 16, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 17 among pending : [10, 13, 18, 26, 30, 29, 16, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 16 with phase True at level 17

After decision at level 17
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]


New level: 18
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : {17, 18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]


Solution : [0, 2, 1, 7, 11, 28, 4, 16] has cost 75.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]

After backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4, 16]


Invert decision for 16 at level 17


New level: 18
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Solution : [0, 2, 1, 7, 11, 28, 4] has cost 41.


Decide in level 18 among pending : [10, 13, 18, 26, 30, 29, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 17 with phase True at level 18

After decision at level 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]


New level: 19
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, -1), (17, 16), (18, 14), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {18, 26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]


Solution : [0, 2, 1, 7, 11, 28, 4, 17] has cost 75.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]

After backtrack at level 19
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4, 17]


Invert decision for 17 at level 18


New level: 19
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4]

Essensial at level 19 : {18}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : {26, 29, 30}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 18]


Solution : [0, 2, 1, 7, 11, 28, 4, 18] has cost 75.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 28, 4, 18]

After backtrack at level 19
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 18
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 17]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 17, 16]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 14
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 28, 4]


Before backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 28, 4]

After backtrack at level 13
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9]
 solution : [0, 2, 1, 7, 11, 28]


Before backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9]
 solution : [0, 2, 1, 7, 11, 28]

After backtrack at level 12
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11, 28]


Invert decision for 28 at level 11


New level: 12
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11]


Solution : [0, 2, 1, 7, 11] has cost 25.


Decide in level 12 among pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 4, 25, 27, 9, 31, 32, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11, 4]


New level: 13
 pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 25, 27, 9, 31, 32, 8]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : {8, 25, 27}

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 13 among pending : [10, 13, 18, 26, 30, 29, 17, 16, 19, 5, 6, 9, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


New level: 14
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 5, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 14 among pending : [10, 13, 18, 26, 30, 17, 16, 19, 5, 6, 9, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 5]


New level: 15
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 5]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 5]


Solution : [0, 2, 1, 7, 11, 4, 29, 5] has cost 54.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 29, 5]

After backtrack at level 15
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 15 among pending : [10, 13, 18, 26, 30, 17, 16, 19, 6, 9, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 6]


New level: 16
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 6]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 9, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 6]


Solution : [0, 2, 1, 7, 11, 4, 29, 6] has cost 47.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 29, 6]

After backtrack at level 16
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 16 among pending : [10, 13, 18, 26, 30, 17, 16, 19, 9, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 9]


New level: 17
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 9]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 29, 9]


Solution : [0, 2, 1, 7, 11, 4, 29, 9] has cost 47.


Before backtrack at level 17
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 29, 9]

After backtrack at level 17
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 17 among pending : [10, 13, 18, 26, 30, 17, 16, 19, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 18 with phase True at level 17

After decision at level 17
 pending : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]


New level: 18
 pending : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 16, 17, 19, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]


Solution : [0, 2, 1, 7, 11, 4, 29, 18] has cost 75.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]

After backtrack at level 18
 pending : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 18]


Invert decision for 18 at level 17


New level: 18
 pending : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 19, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 18 among pending : [10, 13, 26, 30, 17, 16, 19, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 19 with phase True at level 18

After decision at level 18
 pending : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]


New level: 19
 pending : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 16, 17, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]


Solution : [0, 2, 1, 7, 11, 4, 29, 19] has cost 75.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]

After backtrack at level 19
 pending : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 19]


Invert decision for 19 at level 18


New level: 19
 pending : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13, 26, 30, 17, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Solution : [0, 2, 1, 7, 11, 4, 29] has cost 41.


Decide in level 19 among pending : [10, 13, 26, 30, 17, 16, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]


New level: 20
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 16, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]


Solution : [0, 2, 1, 7, 11, 4, 29, 17] has cost 75.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]

After backtrack at level 20
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

Essensial at level 20 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 16]


Solution : [0, 2, 1, 7, 11, 4, 29, 16] has cost 75.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 29, 16]

After backtrack at level 20
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6]
 solution : [0, 2, 1, 7, 11, 4, 29]


Before backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6]
 solution : [0, 2, 1, 7, 11, 4, 29]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 4, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 14 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 9, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4, 9]


New level: 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4, 9]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 9]


Solution : [0, 2, 1, 7, 11, 4, 9] has cost 37.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 9]

After backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 15 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 6, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4, 6]


New level: 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4, 6]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 5, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 6]


Solution : [0, 2, 1, 7, 11, 4, 6] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 6]

After backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 16 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 16

After decision at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 5]


New level: 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 5]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 5]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 4, 5]


Solution : [0, 2, 1, 7, 11, 4, 5] has cost 44.


Before backtrack at level 17
 pending : []
 solution : [0, 2, 1, 7, 11, 4, 5]

After backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4, 5]


Invert decision for 5 at level 16


New level: 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 17 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 19, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 19 with phase True at level 17

After decision at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4, 19]


New level: 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4, 19]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 16, 17, 18, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 19]


Solution : [0, 2, 1, 7, 11, 4, 19] has cost 65.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 19]

After backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4, 19]


Invert decision for 19 at level 17


New level: 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 18 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 18 with phase True at level 18

After decision at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 18]


New level: 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 18]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 16, 17, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 18]


Solution : [0, 2, 1, 7, 11, 4, 18] has cost 65.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 18]

After backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 18]


Invert decision for 18 at level 18


New level: 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4]


Solution : [0, 2, 1, 7, 11, 4] has cost 31.


Decide in level 19 among pending : [10, 13, 16, 26, 30, 31, 32, 17]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 16 with phase True at level 19

After decision at level 19
 pending : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 16]


New level: 20
 pending : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 17, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 16]


Solution : [0, 2, 1, 7, 11, 4, 16] has cost 65.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 16]

After backtrack at level 20
 pending : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4, 16]


Invert decision for 16 at level 19


New level: 20
 pending : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 4]

Essensial at level 20 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 17]


Solution : [0, 2, 1, 7, 11, 4, 17] has cost 65.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 4, 17]

After backtrack at level 20
 pending : [10, 13, 17, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 19
 pending : [10, 13, 17, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 19
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 4]


Before backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 4]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 29]
 solution : [0, 2, 1, 7, 11, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 29]
 solution : [0, 2, 1, 7, 11]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 25, 27, 8, 29]
 solution : [0, 2, 1, 7, 11]

Essensial at level 13 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : {25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 29]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 13

After decision at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]


New level: 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]


Solution : [0, 2, 1, 7, 11, 8, 29] has cost 41.


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 29]


Invert decision for 29 at level 13


New level: 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 14 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 5, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 5]


New level: 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 5]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 5]


Solution : [0, 2, 1, 7, 11, 8, 5] has cost 44.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 11, 8, 5]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 15 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 15

After decision at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8, 6]


New level: 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8, 6]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 9, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 6]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 6]


Solution : [0, 2, 1, 7, 11, 8, 6] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 11, 8, 6]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8, 6]


Invert decision for 6 at level 15


New level: 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 16 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8, 9]


New level: 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8, 9]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 11, 8, 9]


Solution : [0, 2, 1, 7, 11, 8, 9] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 2, 1, 7, 11, 8, 9]

After backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 17 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 19 with phase True at level 17

After decision at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8, 19]


New level: 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8, 19]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 16, 17, 18, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 19]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 19]


Solution : [0, 2, 1, 7, 11, 8, 19] has cost 65.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 19]

After backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8, 19]


Invert decision for 19 at level 17


New level: 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 18 among pending : [10, 13, 17, 26, 30, 31, 32, 16, 18]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 18 with phase True at level 18

After decision at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 18]


New level: 19
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 18]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 16, 17, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 18]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 18]


Solution : [0, 2, 1, 7, 11, 8, 18] has cost 65.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 18]

After backtrack at level 19
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 18]


Invert decision for 18 at level 18


New level: 19
 pending : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8]


Solution : [0, 2, 1, 7, 11, 8] has cost 31.


Decide in level 19 among pending : [10, 13, 17, 26, 30, 31, 32, 16]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 17 with phase True at level 19

After decision at level 19
 pending : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 17]


New level: 20
 pending : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 16, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 17]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 17]


Solution : [0, 2, 1, 7, 11, 8, 17] has cost 65.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 17]

After backtrack at level 20
 pending : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8, 17]


Invert decision for 17 at level 19


New level: 20
 pending : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 31, 32, 16]
 solution : [0, 2, 1, 7, 11, 8]

Essensial at level 20 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 16]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 16]


Solution : [0, 2, 1, 7, 11, 8, 16] has cost 65.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 11, 8, 16]

After backtrack at level 20
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 8]


Before backtrack at level 13
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 11, 8]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 12
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 10
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 10
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 9
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 9
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 8
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 8
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 7
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 7
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 6
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 6
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22]
 solution : [0, 2, 1, 7, 11]


Before backtrack at level 5
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22]
 solution : [0, 2, 1, 7, 11]

After backtrack at level 5
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22, 14, 12, 20]
 solution : [0, 2, 1, 7, 11]


Invert decision for 11 at level 4


New level: 5
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22, 14, 12, 20]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22, 14, 12, 20]
 solution : [0, 2, 1, 7]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22, 14, 12, 20]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 5 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 22, 14, 12, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 22 with phase True at level 5

After decision at level 5
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12, 20]
 solution : [0, 2, 1, 7, 22]


New level: 6
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12, 20]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12, 20]
 solution : [0, 2, 1, 7, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, 192), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, 0), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 6 : {20}

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, 0), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Solution : [0, 2, 1, 7, 22] has cost 36.


Decide in level 6 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 9, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 9 with phase True at level 6

After decision at level 6
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 9]


New level: 7
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 9]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 5, 8, 25, 27, 29, 4, 28, 3, 24, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 7 : {32, 5, 6, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 22, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 22, 9]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 22, 9]


Solution : [0, 2, 1, 7, 22, 9] has cost 42.


Before backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24]
 solution : [0, 2, 1, 7, 22, 9]

After backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 9]


Invert decision for 9 at level 6


New level: 7
 pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Solution : [0, 2, 1, 7, 22] has cost 36.


Decide in level 7 among pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 8 with phase True at level 7

After decision at level 7
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 28, 3, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : {3, 25, 27, 4}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]


Solution : [0, 2, 1, 7, 22, 8] has cost 42.


Before backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 8]

After backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 8]


Invert decision for 8 at level 7


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22]


Solution : [0, 2, 1, 7, 22] has cost 36.


Decide in level 8 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 6, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 6 with phase True at level 8

After decision at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 9 : {32, 5, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]


Solution : [0, 2, 1, 7, 22, 6] has cost 42.


Before backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 22, 6]

After backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 6]


Invert decision for 6 at level 8


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22]


Solution : [0, 2, 1, 7, 22] has cost 36.


Decide in level 9 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 4 with phase True at level 9

After decision at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 3, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : {3, 25, 27}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]


Solution : [0, 2, 1, 7, 22, 4] has cost 42.


Before backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 4]

After backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 3]
 solution : [0, 2, 1, 7, 22, 4]


Invert decision for 4 at level 9


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 3]
 solution : [0, 2, 1, 7, 22]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 25, 27, 3]
 solution : [0, 2, 1, 7, 22]

Essensial at level 10 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : {25, 27}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 3]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 3]


Solution : [0, 2, 1, 7, 22, 3] has cost 49.


Before backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12]
 solution : [0, 2, 1, 7, 22, 3]

After backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27]
 solution : [0, 2, 1, 7, 22]


Before backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27]
 solution : [0, 2, 1, 7, 22]

After backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4]
 solution : [0, 2, 1, 7, 22]


Before backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4]
 solution : [0, 2, 1, 7, 22]

After backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 22]


Before backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 22]

After backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8]
 solution : [0, 2, 1, 7, 22]


Before backtrack at level 6
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8]
 solution : [0, 2, 1, 7, 22]

After backtrack at level 6
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 20, 9]
 solution : [0, 2, 1, 7, 22]


Invert decision for 22 at level 5


New level: 6
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 20, 9]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 20, 9]
 solution : [0, 2, 1, 7]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 20, 9]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 6 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 20, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 20 with phase True at level 6

After decision at level 6
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20]


New level: 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, 192), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20]


Solution : [0, 2, 1, 7, 20] has cost 36.


Decide in level 7 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 5, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20, 5]


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 3, 25, 27, 4, 6, 8, 9]
 solution : [0, 2, 1, 7, 20, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 8), (25, 8), (26, 4), (27, 8), (28, 8), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 8 : {32, 6, 9, 10, 12, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 8), (25, 8), (26, 4), (27, 8), (28, 8), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 8), (26, 4), (27, 8), (28, 8), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 5]


Solution : [0, 2, 1, 7, 20, 5] has cost 49.


Before backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 5]

After backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 8), (26, 4), (27, 8), (28, 8), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20]


Solution : [0, 2, 1, 7, 20] has cost 36.


Decide in level 8 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 3, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 3 with phase True at level 8

After decision at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : {8, 25, 27, 4}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]


Solution : [0, 2, 1, 7, 20, 3] has cost 49.


Before backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9]
 solution : [0, 2, 1, 7, 20, 3]

After backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 3]


Invert decision for 3 at level 8


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20]


Solution : [0, 2, 1, 7, 20] has cost 36.


Decide in level 9 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 12, 6, 9, 25, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 12 with phase True at level 9

After decision at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 14, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : {14}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]


Solution : [0, 2, 1, 7, 20, 12] has cost 41.


Before backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 12]

After backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20, 12]


Invert decision for 12 at level 9


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 10), (22, -1), (23, 10), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 2), (30, 24), (31, 1), (32, 1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20]


Solution : [0, 2, 1, 7, 20] has cost 36.


Decide in level 10 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 6, 9, 25, 27, 4, 8, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 6 with phase True at level 10

After decision at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20, 6]


New level: 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 25, 27, 4, 8, 14]
 solution : [0, 2, 1, 7, 20, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 9, 10, 13, 14, 21, 23, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 6]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, 0), (22, -1), (23, 0), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 6]


Solution : [0, 2, 1, 7, 20, 6] has cost 42.


Before backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 20, 6]

After backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 6]


Invert decision for 6 at level 10


New level: 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 10), (17, 10), (18, 16), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 8), (26, 4), (27, 8), (28, 32), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20]


Solution : [0, 2, 1, 7, 20] has cost 36.


Decide in level 11 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 4, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 25, 27, 8, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 72), (17, 72), (18, 100), (19, 72), (20, -1), (21, 37), (22, -1), (23, 37), (24, 32), (25, 8), (26, 24), (27, 8), (28, 32), (29, 16), (30, 24), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : {8, 25, 27}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]


Solution : [0, 2, 1, 7, 20, 4] has cost 42.


Before backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 4]

After backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 25, 27, 8]
 solution : [0, 2, 1, 7, 20, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 25, 27, 8]
 solution : [0, 2, 1, 7, 20]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 25, 27, 8]
 solution : [0, 2, 1, 7, 20]

Essensial at level 12 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : {25, 27}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, 0), (26, 5), (27, 0), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 8]


Solution : [0, 2, 1, 7, 20, 8] has cost 42.


Before backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14]
 solution : [0, 2, 1, 7, 20, 8]

After backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27]
 solution : [0, 2, 1, 7, 20]


Before backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27]
 solution : [0, 2, 1, 7, 20]

After backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4]
 solution : [0, 2, 1, 7, 20]


Before backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4]
 solution : [0, 2, 1, 7, 20]

After backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 20]


Before backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6]
 solution : [0, 2, 1, 7, 20]

After backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12]
 solution : [0, 2, 1, 7, 20]


Before backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12]
 solution : [0, 2, 1, 7, 20]

After backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3]
 solution : [0, 2, 1, 7, 20]


Before backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3]
 solution : [0, 2, 1, 7, 20]

After backtrack at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 20]


Invert decision for 20 at level 6


New level: 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 17), (17, 17), (18, 22), (19, 24), (20, -1), (21, 37), (22, -1), (23, 37), (24, 1), (25, -1), (26, 5), (27, -1), (28, 1), (29, 16), (30, 5), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 7 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 23, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 23 with phase True at level 7

After decision at level 7
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 29, 21, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, 168), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, 0), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 4), (32, 4), (33, -1)]

Covered at level 8 : {21, 29}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, 0), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 4), (32, 4), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]


Solution : [0, 2, 1, 7, 23] has cost 49.


Before backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 23]

After backtrack at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29, 21]
 solution : [0, 2, 1, 7, 23]


Invert decision for 23 at level 7


New level: 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29, 21]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29, 21]
 solution : [0, 2, 1, 7]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29, 21]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 8 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29, 21]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 21]


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 21]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, 168), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 4), (32, 4), (33, -1)]

Covered at level 9 : {29}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 21]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, 0), (30, 16), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 4), (32, 4), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 21]


Solution : [0, 2, 1, 7, 21] has cost 49.


Before backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5]
 solution : [0, 2, 1, 7, 21]

After backtrack at level 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 40), (17, 40), (18, 64), (19, 64), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 16), (27, 32), (28, 32), (29, -1), (30, 16), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 9 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 9 among pending : [16, 26, 30, 17, 18, 19, 28, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 28 with phase True at level 9

After decision at level 9
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, 128), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 10 : {24}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28]


Solution : [0, 2, 1, 7, 28] has cost 30.


Decide in level 10 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 9, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 10

After decision at level 10
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28, 9]


New level: 11
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 8, 25, 27, 4, 6, 12, 3, 5, 29]
 solution : [0, 2, 1, 7, 28, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 11 : {32, 5, 6, 10, 12, 13, 14, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]


Solution : [0, 2, 1, 7, 28, 9] has cost 36.


Decide in level 11 among pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 4, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 11

After decision at level 11
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9, 8]


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : {3, 4, 16, 17, 18, 19, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 8]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 8]


Solution : [0, 2, 1, 7, 28, 9, 8] has cost 42.


Before backtrack at level 12
 pending : []
 solution : [0, 2, 1, 7, 28, 9, 8]

After backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9, 8]


Invert decision for 8 at level 11


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]
 solution : [0, 2, 1, 7, 28, 9]


Solution : [0, 2, 1, 7, 28, 9] has cost 36.


Decide in level 12 among pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9, 4]


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {3, 16, 17, 18, 19, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 4]


Solution : [0, 2, 1, 7, 28, 9, 4] has cost 42.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 28, 9, 4]

After backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 3]
 solution : [0, 2, 1, 7, 28, 9]

Essensial at level 13 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {16, 17, 18, 19, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 3]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 9, 3]


Solution : [0, 2, 1, 7, 28, 9, 3] has cost 49.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 28, 9, 3]

After backtrack at level 13
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27]
 solution : [0, 2, 1, 7, 28, 9]


Before backtrack at level 12
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27]
 solution : [0, 2, 1, 7, 28, 9]

After backtrack at level 12
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4]
 solution : [0, 2, 1, 7, 28, 9]


Before backtrack at level 11
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4]
 solution : [0, 2, 1, 7, 28, 9]

After backtrack at level 11
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28, 9]


Invert decision for 9 at level 10


New level: 11
 pending : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28]


Solution : [0, 2, 1, 7, 28] has cost 30.


Decide in level 11 among pending : [3, 16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 3 with phase True at level 11

After decision at level 11
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28, 3]


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 10, 13, 31, 32, 14, 6, 12, 5, 29, 8]
 solution : [0, 2, 1, 7, 28, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : {8, 25, 27, 4}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 3]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 3]


Solution : [0, 2, 1, 7, 28, 3] has cost 43.


Before backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 3]

After backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 3]


Invert decision for 3 at level 11


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28]


Solution : [0, 2, 1, 7, 28] has cost 30.


Decide in level 12 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 6, 12, 5, 29, 25, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 12

After decision at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 5, 10, 12, 13, 14, 29, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 0), (6, -1), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 4, 8]
 solution : [0, 2, 1, 7, 28, 6]


Solution : [0, 2, 1, 7, 28, 6] has cost 36.


Decide in level 13 among pending : [16, 26, 30, 17, 18, 19, 25, 27, 4, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Decide 4 with phase True at level 13

After decision at level 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6, 4]


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {8, 16, 17, 18, 19, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 4]


Solution : [0, 2, 1, 7, 28, 6, 4] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 28, 6, 4]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6, 4]


Invert decision for 4 at level 13


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 8]
 solution : [0, 2, 1, 7, 28, 6]

Essensial at level 14 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {16, 17, 18, 19, 25, 26, 27, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, -1), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 6, 8]


Solution : [0, 2, 1, 7, 28, 6, 8] has cost 42.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 28, 6, 8]

After backtrack at level 14
 pending : [8, 16, 26, 30, 17, 18, 19, 25, 27]
 solution : [0, 2, 1, 7, 28, 6]


Before backtrack at level 13
 pending : [8, 16, 26, 30, 17, 18, 19, 25, 27]
 solution : [0, 2, 1, 7, 28, 6]

After backtrack at level 13
 pending : [8, 16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28, 6]


Invert decision for 6 at level 12


New level: 13
 pending : [8, 16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [8, 16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [8, 16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28]


Solution : [0, 2, 1, 7, 28] has cost 30.


Decide in level 13 among pending : [8, 16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28, 8]


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 10, 13, 31, 32, 14, 12, 5, 29, 4]
 solution : [0, 2, 1, 7, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 128), (6, -1), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : {25, 27, 4}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29]
 solution : [0, 2, 1, 7, 28, 8]


Solution : [0, 2, 1, 7, 28, 8] has cost 36.


Decide in level 14 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 12, 5, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Decide 12 with phase True at level 14

After decision at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 14, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 14, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]


Solution : [0, 2, 1, 7, 28, 8, 12] has cost 41.


Before backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29]
 solution : [0, 2, 1, 7, 28, 8, 12]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8, 12]


Invert decision for 12 at level 14


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8]


Solution : [0, 2, 1, 7, 28, 8] has cost 36.


Decide in level 15 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 5, 29, 31, 32, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 15

After decision at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8, 5]


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 10, 13, 14, 16, 17, 18, 19, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 8, 5]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 8, 5]


Solution : [0, 2, 1, 7, 28, 8, 5] has cost 49.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 28, 8, 5]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8, 5]


Invert decision for 5 at level 15


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 14]
 solution : [0, 2, 1, 7, 28, 8]

Essensial at level 16 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 8, 14]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 8, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 8, 14]


Solution : [0, 2, 1, 7, 28, 8, 14] has cost 38.


Before backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 8, 14]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 8]


Before backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 8]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5]
 solution : [0, 2, 1, 7, 28, 8]


Before backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5]
 solution : [0, 2, 1, 7, 28, 8]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 28, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 28]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 25, 27, 4, 12]
 solution : [0, 2, 1, 7, 28]

Essensial at level 14 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : {25, 27}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 12]
 solution : [0, 2, 1, 7, 28, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 12]
 solution : [0, 2, 1, 7, 28, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 12]
 solution : [0, 2, 1, 7, 28, 4]


Solution : [0, 2, 1, 7, 28, 4] has cost 36.


Decide in level 14 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 5, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 14

After decision at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4, 5]


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 128), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 10, 12, 13, 14, 16, 17, 18, 19, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 4, 5]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 28, 4, 5]


Solution : [0, 2, 1, 7, 28, 4, 5] has cost 49.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 28, 4, 5]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4, 5]


Invert decision for 5 at level 14


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4]


Solution : [0, 2, 1, 7, 28, 4] has cost 36.


Decide in level 15 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Decide 12 with phase True at level 15

After decision at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4, 12]


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 14, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 12]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, 0), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 12]


Solution : [0, 2, 1, 7, 28, 4, 12] has cost 41.


Before backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 12]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4, 12]


Invert decision for 12 at level 15


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4]

Essensial at level 16 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 14]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 14]


Solution : [0, 2, 1, 7, 28, 4, 14] has cost 38.


Before backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29]
 solution : [0, 2, 1, 7, 28, 4, 14]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4]


Before backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32]
 solution : [0, 2, 1, 7, 28, 4]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4]


Before backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12]
 solution : [0, 2, 1, 7, 28, 4]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5]
 solution : [0, 2, 1, 7, 28]


Before backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5]
 solution : [0, 2, 1, 7, 28]

After backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 28]


Before backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8]
 solution : [0, 2, 1, 7, 28]

After backtrack at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6]
 solution : [0, 2, 1, 7, 28]


Before backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6]
 solution : [0, 2, 1, 7, 28]

After backtrack at level 11
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3]
 solution : [0, 2, 1, 7, 28]


Before backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3]
 solution : [0, 2, 1, 7, 28]

After backtrack at level 10
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 28]


Invert decision for 28 at level 9


New level: 10
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 10 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 10 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 12, 4, 25, 27, 5, 8, 6, 3, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 12 with phase True at level 10

After decision at level 10
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]


New level: 11
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 14, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, 128), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : {14}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, 0), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12]


Solution : [0, 2, 1, 7, 12] has cost 25.


Decide in level 11 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 4, 25, 27, 5, 8, 6, 3, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 4 with phase True at level 11

After decision at level 11
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


New level: 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 25, 27, 5, 8, 6, 3, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : {8, 25, 27, 3}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 12 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 29, 31, 32, 5, 6, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 12

After decision at level 12
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]


Solution : [0, 2, 1, 7, 12, 4, 29] has cost 41.


Before backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]

After backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 29]


Invert decision for 29 at level 12


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 13 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 5, 6, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 13

After decision at level 13
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 5]


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 6, 9, 10, 13, 16, 17, 18, 19, 24, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 5]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 5]


Solution : [0, 2, 1, 7, 12, 4, 5] has cost 44.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 12, 4, 5]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 5]


Invert decision for 5 at level 13


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 14 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 6, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 6]


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 9, 10, 13, 16, 17, 18, 19, 24, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 6]


Solution : [0, 2, 1, 7, 12, 4, 6] has cost 37.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 12, 4, 6]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 15 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 9]


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 10, 13, 16, 17, 18, 19, 24, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 4, 9]


Solution : [0, 2, 1, 7, 12, 4, 9] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 12, 4, 9]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 16 among pending : [16, 26, 30, 17, 18, 19, 10, 13, 31, 32, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 19 with phase True at level 16

After decision at level 16
 pending : [16, 26, 30, 17, 18, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 19]


New level: 17
 pending : [16, 26, 30, 17, 18, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 19]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 10, 13, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 16, 17, 18, 24, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 19]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 19]


Solution : [0, 2, 1, 7, 12, 4, 19] has cost 65.


Before backtrack at level 17
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 19]

After backtrack at level 17
 pending : [10, 13, 16, 26, 30, 17, 18, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 19]


Invert decision for 19 at level 16


New level: 17
 pending : [10, 13, 16, 26, 30, 17, 18, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 18, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 17 among pending : [10, 13, 16, 26, 30, 17, 18, 31, 32, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 18 with phase True at level 17

After decision at level 17
 pending : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 18]


New level: 18
 pending : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 18]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 16, 17, 24, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 18]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 18]


Solution : [0, 2, 1, 7, 12, 4, 18] has cost 65.


Before backtrack at level 18
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 18]

After backtrack at level 18
 pending : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 18]


Invert decision for 18 at level 17


New level: 18
 pending : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Solution : [0, 2, 1, 7, 12, 4] has cost 31.


Decide in level 18 among pending : [10, 13, 16, 26, 30, 17, 31, 32, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 16 with phase True at level 18

After decision at level 18
 pending : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 16]


New level: 19
 pending : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 16]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 17, 24, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 16]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 16]


Solution : [0, 2, 1, 7, 12, 4, 16] has cost 65.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 16]

After backtrack at level 19
 pending : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4, 16]


Invert decision for 16 at level 18


New level: 19
 pending : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Before reduction : 
 pending  : [10, 13, 26, 30, 17, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]

Essensial at level 19 : {17}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 24, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 17]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 17]


Solution : [0, 2, 1, 7, 12, 4, 17] has cost 65.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 4, 17]

After backtrack at level 19
 pending : [10, 13, 17, 26, 30, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 24]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 18
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 17
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 12, 4]


Before backtrack at level 12
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5]
 solution : [0, 2, 1, 7, 12, 4]

After backtrack at level 12
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 4]


Invert decision for 4 at level 11


New level: 12
 pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12]


Solution : [0, 2, 1, 7, 12] has cost 25.


Decide in level 12 among pending : [10, 13, 17, 26, 30, 31, 32, 24, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 24 with phase True at level 12

After decision at level 12
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]


New level: 13
 pending : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 31, 32, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

Covered at level 13 : {32, 31}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]
 solution : [0, 2, 1, 7, 12, 24]


Solution : [0, 2, 1, 7, 12, 24] has cost 35.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 8, 3, 29]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 13

After decision at level 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 3, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 3, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 25, 27, 3, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 2), (30, 32), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {3, 25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]


Solution : [0, 2, 1, 7, 12, 24, 8] has cost 41.


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 8]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 12, 24, 8]


Invert decision for 8 at level 13


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 12, 24]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 12, 24]

Essensial at level 14 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 3]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 3]


Solution : [0, 2, 1, 7, 12, 24, 3] has cost 48.


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29]
 solution : [0, 2, 1, 7, 12, 24, 3]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27]
 solution : [0, 2, 1, 7, 12, 24]


Before backtrack at level 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27]
 solution : [0, 2, 1, 7, 12, 24]

After backtrack at level 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12, 24]


Invert decision for 24 at level 12


New level: 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 8), (11, -1), (12, -1), (13, 8), (14, -1), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12]


Solution : [0, 2, 1, 7, 12] has cost 25.


Decide in level 13 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 3, 25, 27, 31, 32, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12, 3]


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12, 3]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 25, 27, 31, 32, 8]
 solution : [0, 2, 1, 7, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, 32), (6, 32), (7, -1), (8, 128), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : {8, 25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 3]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, 0), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 3]


Solution : [0, 2, 1, 7, 12, 3] has cost 38.


Before backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 3]

After backtrack at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32, 25, 27, 8]
 solution : [0, 2, 1, 7, 12, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32, 25, 27, 8]
 solution : [0, 2, 1, 7, 12]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32, 25, 27, 8]
 solution : [0, 2, 1, 7, 12]

Essensial at level 14 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : {25, 27}

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 14 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 29, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 14

After decision at level 14
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]


New level: 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]


Solution : [0, 2, 1, 7, 12, 8, 29] has cost 41.


Before backtrack at level 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]

After backtrack at level 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 29]


Invert decision for 29 at level 14


New level: 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 15 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 9, 6, 5, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 15

After decision at level 15
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 9]


New level: 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 9]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, 32), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 16 : {32, 5, 6, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 9]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 9]


Solution : [0, 2, 1, 7, 12, 8, 9] has cost 37.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 12, 8, 9]

After backtrack at level 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 9]


Invert decision for 9 at level 15


New level: 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 16 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 6, 5, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 6 with phase True at level 16

After decision at level 16
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 6]


New level: 17
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 6]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, 32), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 5, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 6]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 6]


Solution : [0, 2, 1, 7, 12, 8, 6] has cost 37.


Before backtrack at level 17
 pending : []
 solution : [0, 2, 1, 7, 12, 8, 6]

After backtrack at level 17
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 6]


Invert decision for 6 at level 16


New level: 17
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 17 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 5, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 5 with phase True at level 17

After decision at level 17
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 5]


New level: 18
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 5]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 32), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 18 : {32, 10, 13, 16, 17, 18, 19, 26, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 5]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 12, 8, 5]


Solution : [0, 2, 1, 7, 12, 8, 5] has cost 44.


Before backtrack at level 18
 pending : []
 solution : [0, 2, 1, 7, 12, 8, 5]

After backtrack at level 18
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 5]


Invert decision for 5 at level 17


New level: 18
 pending : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 18 among pending : [10, 13, 17, 26, 30, 16, 18, 19, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 19 with phase True at level 18

After decision at level 18
 pending : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 19]


New level: 19
 pending : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 19]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 16, 17, 18, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 19]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 19]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 19]


Solution : [0, 2, 1, 7, 12, 8, 19] has cost 65.


Before backtrack at level 19
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 19]

After backtrack at level 19
 pending : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 19]


Invert decision for 19 at level 18


New level: 19
 pending : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 18, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 19 among pending : [10, 13, 17, 26, 30, 16, 18, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 18 with phase True at level 19

After decision at level 19
 pending : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 18]


New level: 20
 pending : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 18]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 20 : {32, 16, 17, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 18]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 18]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 18]


Solution : [0, 2, 1, 7, 12, 8, 18] has cost 65.


Before backtrack at level 20
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 18]

After backtrack at level 20
 pending : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 18]


Invert decision for 18 at level 19


New level: 20
 pending : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 20 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 20 : set()

After reduction : 
 pending  : [10, 13, 17, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Solution : [0, 2, 1, 7, 12, 8] has cost 31.


Decide in level 20 among pending : [10, 13, 17, 26, 30, 16, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 17 with phase True at level 20

After decision at level 20
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 17]


New level: 21
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 17]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 16), (11, -1), (12, -1), (13, 16), (14, -1), (15, -1), (16, 18), (17, 18), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 21 : {32, 16, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 17]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 17]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, 0), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 17]


Solution : [0, 2, 1, 7, 12, 8, 17] has cost 65.


Before backtrack at level 21
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 17]

After backtrack at level 21
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8, 17]


Invert decision for 17 at level 20


New level: 21
 pending : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before reduction : 
 pending  : [10, 13, 26, 30, 16, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

Essensial at level 21 : {16}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 21 : {32, 26, 30, 31}

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 16]


Before reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 16]

Essensial at level 21 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 21 : set()

After reduction : 
 pending  : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 16]


Solution : [0, 2, 1, 7, 12, 8, 16] has cost 65.


Before backtrack at level 21
 pending : [10, 13]
 solution : [0, 2, 1, 7, 12, 8, 16]

After backtrack at level 21
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 20
 pending : [10, 13, 16, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 20
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 19
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 18
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 17
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 16
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 15
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 12, 8]


Before backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9]
 solution : [0, 2, 1, 7, 12, 8]

After backtrack at level 14
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29]
 solution : [0, 2, 1, 7, 12]


Before backtrack at level 13
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29]
 solution : [0, 2, 1, 7, 12]

After backtrack at level 13
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3]
 solution : [0, 2, 1, 7, 12]


Before backtrack at level 12
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3]
 solution : [0, 2, 1, 7, 12]

After backtrack at level 12
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24]
 solution : [0, 2, 1, 7, 12]


Before backtrack at level 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24]
 solution : [0, 2, 1, 7, 12]

After backtrack at level 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7, 12]


Invert decision for 12 at level 10


New level: 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 1), (11, -1), (12, -1), (13, 1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 11 among pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 5, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 5 with phase True at level 11

After decision at level 11
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7, 5]


New level: 12
 pending : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7, 5]


Before reduction : 
 pending  : [10, 13, 16, 26, 30, 31, 32, 17, 18, 19, 6, 9, 8, 25, 27, 29, 3, 24, 14, 4]
 solution : [0, 2, 1, 7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, 128), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, 0), (32, 0), (33, -1)]

Covered at level 12 : {32, 6, 9, 10, 13, 14, 31}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 0), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 8, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]


Solution : [0, 2, 1, 7, 5] has cost 33.


Decide in level 12 among pending : [16, 26, 30, 17, 18, 19, 8, 25, 27, 29, 3, 24, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 12

After decision at level 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5, 8]


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5, 8]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : {3, 4, 16, 17, 18, 19, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 8]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 8]


Solution : [0, 2, 1, 7, 5, 8] has cost 39.


Before backtrack at level 13
 pending : []
 solution : [0, 2, 1, 7, 5, 8]

After backtrack at level 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5, 8]


Invert decision for 8 at level 12


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]
 solution : [0, 2, 1, 7, 5]


Solution : [0, 2, 1, 7, 5] has cost 33.


Decide in level 13 among pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 3, 24, 4]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Decide 3 with phase True at level 13

After decision at level 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5, 3]


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5, 3]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 32), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {4, 16, 17, 18, 19, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 3]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 3]


Solution : [0, 2, 1, 7, 5, 3] has cost 46.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 5, 3]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5, 3]


Invert decision for 3 at level 13


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 4]
 solution : [0, 2, 1, 7, 5]

Essensial at level 14 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : {16, 17, 18, 19, 24, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 4]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 5, 4]


Solution : [0, 2, 1, 7, 5, 4] has cost 39.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 5, 4]

After backtrack at level 14
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24]
 solution : [0, 2, 1, 7, 5]


Before backtrack at level 13
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24]
 solution : [0, 2, 1, 7, 5]

After backtrack at level 13
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3]
 solution : [0, 2, 1, 7, 5]


Before backtrack at level 12
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3]
 solution : [0, 2, 1, 7, 5]

After backtrack at level 12
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7, 5]


Invert decision for 5 at level 11


New level: 12
 pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7]

Essensial at level 12 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 12 : set()

After reduction : 
 pending  : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 12 among pending : [4, 16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 4 with phase True at level 12

After decision at level 12
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7, 4]


New level: 13
 pending : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 25, 27, 29, 24, 3, 10, 13, 31, 32, 6, 9, 14, 8]
 solution : [0, 2, 1, 7, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, 128), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 13 : {3, 25, 27, 8}

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 6, 9, 14]
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 6, 9, 14]
 solution : [0, 2, 1, 7, 4]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 6, 9, 14]
 solution : [0, 2, 1, 7, 4]


Solution : [0, 2, 1, 7, 4] has cost 26.


Decide in level 13 among pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 6, 9, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Decide 6 with phase True at level 13

After decision at level 13
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4, 6]


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4, 6]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 14 : {32, 9, 10, 13, 14, 16, 17, 18, 19, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 6]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 6]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 6]


Solution : [0, 2, 1, 7, 4, 6] has cost 32.


Before backtrack at level 14
 pending : []
 solution : [0, 2, 1, 7, 4, 6]

After backtrack at level 14
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4, 6]


Invert decision for 6 at level 13


New level: 14
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]
 solution : [0, 2, 1, 7, 4]


Solution : [0, 2, 1, 7, 4] has cost 26.


Decide in level 14 among pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 9, 14]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4, 9]


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4, 9]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 10, 13, 14, 16, 17, 18, 19, 24, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 4, 9]


Solution : [0, 2, 1, 7, 4, 9] has cost 32.


Before backtrack at level 15
 pending : []
 solution : [0, 2, 1, 7, 4, 9]

After backtrack at level 15
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32, 14]
 solution : [0, 2, 1, 7, 4]

Essensial at level 15 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Solution : [0, 2, 1, 7, 4, 14] has cost 28.


Decide in level 15 among pending : [16, 26, 30, 17, 18, 19, 29, 24, 10, 13, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 15

After decision at level 15
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]


Solution : [0, 2, 1, 7, 4, 14, 29] has cost 38.


Before backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]

After backtrack at level 16
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 29]


Invert decision for 29 at level 15


New level: 16
 pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, 4), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Solution : [0, 2, 1, 7, 4, 14] has cost 28.


Decide in level 16 among pending : [16, 26, 30, 17, 18, 19, 24, 10, 13, 31, 32]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 10 with phase True at level 16

After decision at level 16
 pending : [16, 26, 30, 17, 18, 19, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 10]


New level: 17
 pending : [16, 26, 30, 17, 18, 19, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 10]


Before reduction : 
 pending  : [16, 26, 30, 17, 18, 19, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, 8), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 13, 24, 26, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 10]


Before reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 10]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, 0), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 10]


Solution : [0, 2, 1, 7, 4, 14, 10] has cost 37.


Before backtrack at level 17
 pending : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 10]

After backtrack at level 17
 pending : [16, 17, 18, 19, 26, 30, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14, 10]


Invert decision for 10 at level 16


New level: 17
 pending : [16, 17, 18, 19, 26, 30, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 24, 13, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]

Essensial at level 17 : {13}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 24, 26, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 13]


Before reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 13]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, 0), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 13]


Solution : [0, 2, 1, 7, 4, 14, 13] has cost 37.


Before backtrack at level 17
 pending : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 4, 14, 13]

After backtrack at level 17
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]


Before backtrack at level 16
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32]
 solution : [0, 2, 1, 7, 4, 14]

After backtrack at level 16
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10]
 solution : [0, 2, 1, 7, 4, 14]


Before backtrack at level 15
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10]
 solution : [0, 2, 1, 7, 4, 14]

After backtrack at level 15
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29]
 solution : [0, 2, 1, 7, 4]


Before backtrack at level 14
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29]
 solution : [0, 2, 1, 7, 4]

After backtrack at level 14
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9]
 solution : [0, 2, 1, 7, 4]


Before backtrack at level 13
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9]
 solution : [0, 2, 1, 7, 4]

After backtrack at level 13
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 4]


Invert decision for 4 at level 12


New level: 13
 pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7]

Essensial at level 13 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 13 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 13 among pending : [16, 17, 18, 19, 13, 26, 30, 24, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 24 with phase True at level 13

After decision at level 13
 pending : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24]


New level: 14
 pending : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24]


Before reduction : 
 pending  : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, 128), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24]


Solution : [0, 2, 1, 7, 24] has cost 30.


Decide in level 14 among pending : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 9, 25, 27, 3, 8, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 9 with phase True at level 14

After decision at level 14
 pending : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24, 9]


New level: 15
 pending : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 13, 26, 30, 31, 32, 10, 14, 29, 25, 27, 3, 8, 6]
 solution : [0, 2, 1, 7, 24, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 6, 10, 13, 14, 29, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8]
 solution : [0, 2, 1, 7, 24, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8]
 solution : [0, 2, 1, 7, 24, 9]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, 0), (30, 4), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8]
 solution : [0, 2, 1, 7, 24, 9]


Solution : [0, 2, 1, 7, 24, 9] has cost 36.


Before backtrack at level 15
 pending : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8]
 solution : [0, 2, 1, 7, 24, 9]

After backtrack at level 15
 pending : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 9]


Invert decision for 9 at level 14


New level: 15
 pending : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 10), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 4), (27, 8), (28, -1), (29, -1), (30, 4), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24]


Solution : [0, 2, 1, 7, 24] has cost 30.


Decide in level 15 among pending : [16, 17, 18, 19, 26, 30, 25, 27, 3, 8, 13, 31, 32, 10, 14, 29, 6]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [16, 17, 18, 19, 26, 30, 25, 27, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 25, 27, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 25, 27, 8, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 64), (17, 64), (18, 52), (19, 40), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 8), (26, 32), (27, 8), (28, -1), (29, 16), (30, 32), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : {8, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, 0), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]


Solution : [0, 2, 1, 7, 24, 3] has cost 43.


Before backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 3]

After backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 25, 27, 8]
 solution : [0, 2, 1, 7, 24, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 25, 27, 8]
 solution : [0, 2, 1, 7, 24]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 25, 27, 8]
 solution : [0, 2, 1, 7, 24]

Essensial at level 16 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : {25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 4), (27, 0), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 8]


Solution : [0, 2, 1, 7, 24, 8] has cost 36.


Before backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6]
 solution : [0, 2, 1, 7, 24, 8]

After backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27]
 solution : [0, 2, 1, 7, 24]


Before backtrack at level 15
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27]
 solution : [0, 2, 1, 7, 24]

After backtrack at level 15
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3]
 solution : [0, 2, 1, 7, 24]


Before backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3]
 solution : [0, 2, 1, 7, 24]

After backtrack at level 14
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 24]


Invert decision for 24 at level 13


New level: 14
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7]

Essensial at level 14 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 128), (7, -1), (8, -1), (9, -1), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 16), (17, 16), (18, 14), (19, 16), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 4), (27, -1), (28, -1), (29, 16), (30, 4), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 14 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 14 among pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 6, 8, 25, 27, 3, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 6 with phase True at level 14

After decision at level 14
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 6]


New level: 15
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10, 14, 29, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, 128), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, 0), (32, 0), (33, -1)]

Covered at level 15 : {32, 9, 10, 13, 14, 31}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 8, 25, 27, 3]
 solution : [0, 2, 1, 7, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 8, 25, 27, 3]
 solution : [0, 2, 1, 7, 6]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 0), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 8, 25, 27, 3]
 solution : [0, 2, 1, 7, 6]


Solution : [0, 2, 1, 7, 6] has cost 26.


Decide in level 15 among pending : [16, 17, 18, 19, 26, 30, 29, 8, 25, 27, 3]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

Decide 8 with phase True at level 15

After decision at level 15
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6, 8]


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 20), (17, 20), (18, 26), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 20), (27, 32), (28, -1), (29, 4), (30, 20), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {3, 16, 17, 18, 19, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 8]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 8]


Solution : [0, 2, 1, 7, 6, 8] has cost 32.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 6, 8]

After backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6, 8]


Invert decision for 8 at level 15


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 25, 27, 3]
 solution : [0, 2, 1, 7, 6]

Essensial at level 16 : {3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : {16, 17, 18, 19, 25, 26, 27, 29, 30}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 0), (27, 0), (28, -1), (29, 0), (30, 0), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 6, 3]


Solution : [0, 2, 1, 7, 6, 3] has cost 39.


Before backtrack at level 16
 pending : []
 solution : [0, 2, 1, 7, 6, 3]

After backtrack at level 16
 pending : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27]
 solution : [0, 2, 1, 7, 6]


Before backtrack at level 15
 pending : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27]
 solution : [0, 2, 1, 7, 6]

After backtrack at level 15
 pending : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7, 6]


Invert decision for 6 at level 14


New level: 15
 pending : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7]

Essensial at level 15 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Covered at level 15 : set()

After reduction : 
 pending  : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7]


Solution : [0, 2, 1, 7] has cost 20.


Decide in level 15 among pending : [3, 16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

Decide 3 with phase True at level 15

After decision at level 15
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7, 3]


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 25, 27, 13, 31, 32, 10, 14, 9, 8]
 solution : [0, 2, 1, 7, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 128), (4, -1), (5, -1), (6, -1), (7, -1), (8, 128), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 80), (17, 96), (18, 112), (19, 96), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 32), (26, 96), (27, 32), (28, -1), (29, 64), (30, 96), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 16 : {8, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 3]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 3]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, 0), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 3]


Solution : [0, 2, 1, 7, 3] has cost 33.


Before backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 3]

After backtrack at level 16
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9, 25, 27, 8]
 solution : [0, 2, 1, 7, 3]


Invert decision for 3 at level 15


New level: 16
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9, 25, 27, 8]
 solution : [0, 2, 1, 7]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9, 25, 27, 8]
 solution : [0, 2, 1, 7]

Essensial at level 16 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 16 : {25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 8]

Essensial at level 16 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, 0), (26, 12), (27, 0), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Covered at level 16 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]
 solution : [0, 2, 1, 7, 8]


Solution : [0, 2, 1, 7, 8] has cost 26.


Decide in level 16 among pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

Decide 9 with phase True at level 16

After decision at level 16
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8, 9]


New level: 17
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, 128), (10, 64), (11, -1), (12, -1), (13, 64), (14, 64), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 32), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 17 : {32, 10, 13, 14, 16, 17, 18, 19, 26, 29, 30, 31}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 8, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 8, 9]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, 0), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 7, 8, 9]


Solution : [0, 2, 1, 7, 8, 9] has cost 32.


Before backtrack at level 17
 pending : []
 solution : [0, 2, 1, 7, 8, 9]

After backtrack at level 17
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8, 9]


Invert decision for 9 at level 16


New level: 17
 pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10, 14]
 solution : [0, 2, 1, 7, 8]

Essensial at level 17 : {14}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]

Essensial at level 17 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 17 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]


Solution : [0, 2, 1, 7, 8, 14] has cost 28.


Decide in level 17 among pending : [16, 17, 18, 19, 26, 30, 29, 13, 31, 32, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 29 with phase True at level 17

After decision at level 17
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]


New level: 18
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, 64), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]


Solution : [0, 2, 1, 7, 8, 14, 29] has cost 38.


Before backtrack at level 18
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]

After backtrack at level 18
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 29]


Invert decision for 29 at level 17


New level: 18
 pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]

Essensial at level 18 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 20), (19, 20), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 6), (27, -1), (28, -1), (29, -1), (30, 6), (31, 4), (32, 4), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Covered at level 18 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]


Solution : [0, 2, 1, 7, 8, 14] has cost 28.


Decide in level 18 among pending : [16, 17, 18, 19, 26, 30, 13, 31, 32, 10]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

Decide 13 with phase True at level 18

After decision at level 18
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 13]


New level: 19
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 13]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 13]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 32), (11, -1), (12, -1), (13, 32), (14, -1), (15, -1), (16, 18), (17, 18), (18, 22), (19, 24), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 12), (27, -1), (28, -1), (29, -1), (30, 12), (31, 8), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 10, 26, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 13]


Before reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 13]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, 0), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 13]


Solution : [0, 2, 1, 7, 8, 14, 13] has cost 37.


Before backtrack at level 19
 pending : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 13]

After backtrack at level 19
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14, 13]


Invert decision for 13 at level 18


New level: 19
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 10]
 solution : [0, 2, 1, 7, 8, 14]

Essensial at level 19 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

Covered at level 19 : {32, 26, 30, 31}

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 10]


Before reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 10]

Essensial at level 19 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, 0), (27, -1), (28, -1), (29, -1), (30, 0), (31, 0), (32, 0), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 19 : set()

After reduction : 
 pending  : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 10]


Solution : [0, 2, 1, 7, 8, 14, 10] has cost 37.


Before backtrack at level 19
 pending : [16, 17, 18, 19]
 solution : [0, 2, 1, 7, 8, 14, 10]

After backtrack at level 19
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 8, 14]


Before backtrack at level 18
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32]
 solution : [0, 2, 1, 7, 8, 14]

After backtrack at level 18
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13]
 solution : [0, 2, 1, 7, 8, 14]


Before backtrack at level 17
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13]
 solution : [0, 2, 1, 7, 8, 14]

After backtrack at level 17
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29]
 solution : [0, 2, 1, 7, 8]


Before backtrack at level 16
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29]
 solution : [0, 2, 1, 7, 8]

After backtrack at level 16
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9]
 solution : [0, 2, 1, 7]


Before backtrack at level 15
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9]
 solution : [0, 2, 1, 7]

After backtrack at level 15
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3]
 solution : [0, 2, 1, 7]


Before backtrack at level 14
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3]
 solution : [0, 2, 1, 7]

After backtrack at level 14
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6]
 solution : [0, 2, 1, 7]


Before backtrack at level 13
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6]
 solution : [0, 2, 1, 7]

After backtrack at level 13
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24]
 solution : [0, 2, 1, 7]


Before backtrack at level 12
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24]
 solution : [0, 2, 1, 7]

After backtrack at level 12
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4]
 solution : [0, 2, 1, 7]


Before backtrack at level 11
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4]
 solution : [0, 2, 1, 7]

After backtrack at level 11
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5]
 solution : [0, 2, 1, 7]


Before backtrack at level 10
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5]
 solution : [0, 2, 1, 7]

After backtrack at level 10
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12]
 solution : [0, 2, 1, 7]


Before backtrack at level 9
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12]
 solution : [0, 2, 1, 7]

After backtrack at level 9
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28]
 solution : [0, 2, 1, 7]


Before backtrack at level 8
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28]
 solution : [0, 2, 1, 7]

After backtrack at level 8
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21]
 solution : [0, 2, 1, 7]


Before backtrack at level 7
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21]
 solution : [0, 2, 1, 7]

After backtrack at level 7
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23]
 solution : [0, 2, 1, 7]


Before backtrack at level 6
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23]
 solution : [0, 2, 1, 7]

After backtrack at level 6
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20]
 solution : [0, 2, 1, 7]


Before backtrack at level 5
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20]
 solution : [0, 2, 1, 7]

After backtrack at level 5
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22]
 solution : [0, 2, 1, 7]


Before backtrack at level 4
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22]
 solution : [0, 2, 1, 7]

After backtrack at level 4
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11]
 solution : [0, 2, 1, 7]


Before backtrack at level 3
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11]
 solution : [0, 2, 1, 7]

After backtrack at level 3
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33, 15]
 solution : [0, 2, 1, 7]


Invert decision for 7 at level 2


New level: 3
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33, 15]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33, 15]
 solution : [0, 2, 1]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 8), (17, 8), (18, 7), (19, 8), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33, 15]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 3 among pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33, 15]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Decide 15 with phase True at level 3

After decision at level 3
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15]


New level: 4
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, 576), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 258), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 48), (17, 24), (18, 136), (19, 60), (20, 40), (21, 48), (22, 20), (23, 16), (24, 128), (25, 64), (26, 80), (27, 128), (28, 256), (29, 16), (30, 160), (31, 128), (32, 256), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15]


Solution : [0, 2, 1, 15] has cost 31.


Decide in level 4 among pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 9, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 258), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 48), (17, 24), (18, 136), (19, 60), (20, 40), (21, 48), (22, 20), (23, 16), (24, 128), (25, 64), (26, 80), (27, 128), (28, 256), (29, 16), (30, 160), (31, 128), (32, 256), (33, 128)]

Decide 9 with phase True at level 4

After decision at level 4
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15, 9]


New level: 5
 pending : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 10, 26, 30, 31, 32, 13, 14, 29, 8, 25, 27, 3, 6, 24, 4, 5, 12, 28, 21, 23, 20, 22, 11, 33]
 solution : [0, 2, 1, 15, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 258), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 48), (17, 24), (18, 136), (19, 60), (20, 40), (21, 48), (22, 20), (23, 16), (24, 128), (25, 64), (26, 80), (27, 128), (28, 256), (29, 16), (30, 160), (31, 128), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 12), (17, 6), (18, 34), (19, 15), (20, 40), (21, 12), (22, 20), (23, 4), (24, 128), (25, 64), (26, 66), (27, 128), (28, 256), (29, 4), (30, 132), (31, 2), (32, 8), (33, 32)]

Covered at level 5 : {5, 6, 10, 11, 12, 13, 14}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33]
 solution : [0, 2, 1, 15, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33]
 solution : [0, 2, 1, 15, 9]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 0), (6, 0), (7, -1), (8, 128), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 12), (17, 6), (18, 34), (19, 15), (20, 40), (21, 12), (22, 20), (23, 4), (24, 128), (25, 64), (26, 66), (27, 128), (28, 256), (29, 4), (30, 132), (31, 2), (32, 8), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 12), (17, 6), (18, 34), (19, 15), (20, 40), (21, 12), (22, 20), (23, 4), (24, 128), (25, 64), (26, 66), (27, 128), (28, 256), (29, 4), (30, 132), (31, 2), (32, 8), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33]
 solution : [0, 2, 1, 15, 9]


Solution : [0, 2, 1, 15, 9] has cost 37.


Before backtrack at level 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33]
 solution : [0, 2, 1, 15, 9]

After backtrack at level 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15, 9]


Invert decision for 9 at level 4


New level: 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 8, 25, 27, 3, 24, 4, 28, 21, 23, 20, 22, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15]

Essensial at level 5 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, -1), (6, -1), (7, -1), (8, 128), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, 12), (17, 6), (18, 34), (19, 15), (20, 40), (21, 12), (22, 20), (23, 4), (24, 128), (25, 64), (26, 66), (27, 128), (28, 256), (29, 4), (30, 132), (31, 2), (32, 8), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 258), (6, 128), (7, -1), (8, 0), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 10), (17, 5), (18, 30), (19, 15), (20, 0), (21, 12), (22, 0), (23, 4), (24, 4), (25, 0), (26, 5), (27, 0), (28, 8), (29, 4), (30, 10), (31, 128), (32, 256), (33, 32)]

Covered at level 5 : {3, 8, 20, 22, 25, 27}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 258), (6, 128), (7, -1), (8, 0), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 10), (17, 5), (18, 30), (19, 15), (20, 0), (21, 12), (22, 0), (23, 4), (24, 4), (25, 0), (26, 5), (27, 0), (28, 8), (29, 4), (30, 10), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 10), (17, 5), (18, 30), (19, 15), (20, -1), (21, 12), (22, -1), (23, 4), (24, 4), (25, -1), (26, 5), (27, -1), (28, 8), (29, 4), (30, 10), (31, 128), (32, 256), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15, 4]


Solution : [0, 2, 1, 15, 4] has cost 37.


Before backtrack at level 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 15, 4]

After backtrack at level 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22]
 solution : [0, 2, 1, 15]


Before backtrack at level 4
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22]
 solution : [0, 2, 1, 15]

After backtrack at level 4
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1, 15]


Invert decision for 15 at level 3


New level: 4
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 10), (17, 5), (18, 30), (19, 15), (20, -1), (21, 12), (22, -1), (23, 4), (24, 4), (25, -1), (26, 5), (27, -1), (28, 8), (29, 4), (30, 10), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Covered at level 4 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1]


Solution : [0, 2, 1] has cost 10.


Decide in level 4 among pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 4, 8, 25, 27, 3, 20, 22, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

Decide 4 with phase True at level 4

After decision at level 4
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1, 4]


New level: 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 8, 25, 27, 3, 20, 22, 9]
 solution : [0, 2, 1, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 320), (4, 512), (5, 264), (6, 128), (7, -1), (8, 128), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 160), (17, 102), (18, 480), (19, 224), (20, 384), (21, 448), (22, 192), (23, 176), (24, 128), (25, 64), (26, 96), (27, 128), (28, 256), (29, 64), (30, 192), (31, 128), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 258), (6, 128), (7, -1), (8, 0), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, 0), (26, 12), (27, 0), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Covered at level 5 : {8, 25, 27, 3}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22, 9]
 solution : [0, 2, 1, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22, 9]
 solution : [0, 2, 1, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 0), (4, -1), (5, 258), (6, 128), (7, -1), (8, 0), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, 0), (26, 12), (27, 0), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Covered at level 5 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22, 9]
 solution : [0, 2, 1, 4]


Solution : [0, 2, 1, 4] has cost 16.


Decide in level 5 among pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22, 9]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 9]


New level: 6
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 9]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, 512), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {5, 6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 9]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 9]


Solution : [0, 2, 1, 4, 9] has cost 22.


Before backtrack at level 6
 pending : []
 solution : [0, 2, 1, 4, 9]

After backtrack at level 6
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4]


Solution : [0, 2, 1, 4] has cost 16.


Decide in level 6 among pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 21, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Decide 21 with phase True at level 6

After decision at level 6
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 21]


New level: 7
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 21]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 29, 24, 28, 23, 33, 10, 13, 14, 6, 5, 12, 11, 20, 22]
 solution : [0, 2, 1, 4, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, 400), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 257), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 18), (17, 9), (18, 36), (19, 32), (20, 0), (21, -1), (22, 0), (23, 0), (24, 2), (25, -1), (26, 3), (27, -1), (28, 4), (29, 0), (30, 6), (31, 16), (32, 64), (33, 8)]

Covered at level 7 : {20, 29, 22, 23}

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 4, 21]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 4, 21]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 257), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 18), (17, 9), (18, 36), (19, 32), (20, 0), (21, -1), (22, 0), (23, 0), (24, 2), (25, -1), (26, 3), (27, -1), (28, 4), (29, 0), (30, 6), (31, 16), (32, 64), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 257), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 18), (17, 9), (18, 36), (19, 32), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, 3), (27, -1), (28, 4), (29, -1), (30, 6), (31, 16), (32, 64), (33, 8)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 4, 21]


Solution : [0, 2, 1, 4, 21] has cost 45.


Before backtrack at level 7
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11]
 solution : [0, 2, 1, 4, 21]

After backtrack at level 7
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4, 21]


Invert decision for 21 at level 6


New level: 7
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 257), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 18), (17, 9), (18, 36), (19, 32), (20, -1), (21, -1), (22, -1), (23, -1), (24, 2), (25, -1), (26, 3), (27, -1), (28, 4), (29, -1), (30, 6), (31, 16), (32, 64), (33, 8)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, -1), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Covered at level 7 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4]


Solution : [0, 2, 1, 4] has cost 16.


Decide in level 7 among pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 5, 12, 11, 29, 23, 20, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, -1), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

Decide 5 with phase True at level 7

After decision at level 7
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4, 5]


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4, 5]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 258), (6, 128), (7, -1), (8, -1), (9, -1), (10, 128), (11, 256), (12, 128), (13, 64), (14, 64), (15, -1), (16, 36), (17, 18), (18, 90), (19, 51), (20, 10), (21, -1), (22, 5), (23, 162), (24, 16), (25, -1), (26, 12), (27, -1), (28, 32), (29, 64), (30, 24), (31, 128), (32, 256), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 8 : {6, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 5]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, -1), (22, 0), (23, 0), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 8 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 4, 5]


Solution : [0, 2, 1, 4, 5] has cost 29.


Before backtrack at level 8
 pending : []
 solution : [0, 2, 1, 4, 5]

After backtrack at level 8
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4, 5]


Invert decision for 5 at level 7


New level: 8
 pending : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4]


Before reduction : 
 pending  : [16, 17, 18, 19, 26, 30, 31, 32, 24, 28, 33, 10, 13, 14, 6, 12, 11, 29, 23, 20, 22]
 solution : [0, 2, 1, 4]

Essensial at level 8 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 8), (13, 0), (14, 1), (15, -1), (16, 16), (17, 8), (18, 54), (19, 34), (20, 0), (21, -1), (22, 0), (23, 10), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 2), (32, 16), (33, 16)]

Covered at level 8 : {13, 20, 22, 24, 26, 28, 29, 30}

After reduction : 
 pending  : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23]
 solution : [0, 2, 1, 4, 10]


Before reduction : 
 pending  : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23]
 solution : [0, 2, 1, 4, 10]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 8), (13, 0), (14, 1), (15, -1), (16, 16), (17, 8), (18, 54), (19, 34), (20, 0), (21, -1), (22, 0), (23, 10), (24, 0), (25, -1), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 2), (32, 16), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 8), (13, -1), (14, 1), (15, -1), (16, 16), (17, 8), (18, 54), (19, 34), (20, -1), (21, -1), (22, -1), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 16), (33, 16)]

Covered at level 8 : set()

After reduction : 
 pending  : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23]
 solution : [0, 2, 1, 4, 10]


Solution : [0, 2, 1, 4, 10] has cost 25.


Before backtrack at level 8
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23]
 solution : [0, 2, 1, 4, 10]

After backtrack at level 8
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22]
 solution : [0, 2, 1, 4]


Before backtrack at level 7
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22]
 solution : [0, 2, 1, 4]

After backtrack at level 7
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5]
 solution : [0, 2, 1, 4]


Before backtrack at level 6
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5]
 solution : [0, 2, 1, 4]

After backtrack at level 6
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21]
 solution : [0, 2, 1, 4]


Before backtrack at level 5
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21]
 solution : [0, 2, 1, 4]

After backtrack at level 5
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 3, 9]
 solution : [0, 2, 1, 4]


Invert decision for 4 at level 4


New level: 5
 pending : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 3, 9]
 solution : [0, 2, 1]


Before reduction : 
 pending  : [16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 3, 9]
 solution : [0, 2, 1]

Essensial at level 5 : {9, 3}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 32), (7, -1), (8, -1), (9, -1), (10, -1), (11, 64), (12, 8), (13, -1), (14, 1), (15, -1), (16, 16), (17, 8), (18, 54), (19, 34), (20, -1), (21, -1), (22, -1), (23, 10), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, 2), (32, 16), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 5 : {5, 6, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 3]


Before reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 0), (6, 0), (7, -1), (8, 0), (9, -1), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 5 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 1, 9, 3]


Solution : [0, 2, 1, 9, 3] has cost 29.


Before backtrack at level 5
 pending : []
 solution : [0, 2, 1, 9, 3]

After backtrack at level 5
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27]
 solution : [0, 2, 1]


Before backtrack at level 4
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27]
 solution : [0, 2, 1]

After backtrack at level 4
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4]
 solution : [0, 2, 1]


Before backtrack at level 3
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4]
 solution : [0, 2, 1]

After backtrack at level 3
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15]
 solution : [0, 2, 1]


Before backtrack at level 2
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15]
 solution : [0, 2, 1]

After backtrack at level 2
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2, 1]


Invert decision for 1 at level 1


New level: 2
 pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2]


Before reduction : 
 pending  : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2]

Essensial at level 2 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 448), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 2 : set()

After reduction : 
 pending  : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2]


Solution : [0, 2] has cost 7.


Decide in level 2 among pending : [3, 9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 448), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Decide 3 with phase True at level 2

After decision at level 2
 pending : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2, 3]


New level: 3
 pending : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 25, 27, 4, 15, 7]
 solution : [0, 2, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, 768), (4, 512), (5, 576), (6, 512), (7, 640), (8, 512), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 408), (18, 576), (19, 448), (20, 384), (21, 512), (22, 384), (23, 352), (24, 256), (25, 128), (26, 384), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 576), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, 0), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 3 : {25}

After reduction : 
 pending  : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 576), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, 0), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 576), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 3 : set()

After reduction : 
 pending  : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 3 among pending : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 5, 21, 8, 27, 4, 15, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 576), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 5 with phase True at level 3

After decision at level 3
 pending : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]


New level: 4
 pending : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]


Before reduction : 
 pending  : [9, 16, 17, 18, 19, 31, 32, 33, 14, 6, 12, 11, 23, 10, 26, 30, 24, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, 576), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, 0), (11, 0), (12, 1), (13, 64), (14, 256), (15, 576), (16, 0), (17, 16), (18, 18), (19, 0), (20, 12), (21, 12), (22, 5), (23, 5), (24, 0), (25, -1), (26, 9), (27, 16), (28, 16), (29, 2), (30, 0), (31, 0), (32, 16), (33, 32)]

Covered at level 4 : {10, 11, 16, 19, 24, 30, 31}

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]


Before reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, 0), (11, 0), (12, 1), (13, 64), (14, 256), (15, 576), (16, 0), (17, 16), (18, 18), (19, 0), (20, 12), (21, 12), (22, 5), (23, 5), (24, 0), (25, -1), (26, 9), (27, 16), (28, 16), (29, 2), (30, 0), (31, 0), (32, 16), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, -1), (11, -1), (12, 1), (13, 64), (14, 256), (15, 576), (16, -1), (17, 16), (18, 18), (19, -1), (20, 12), (21, 12), (22, 5), (23, 5), (24, -1), (25, -1), (26, 9), (27, 16), (28, 16), (29, 2), (30, -1), (31, -1), (32, 16), (33, 16)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]


Solution : [0, 2, 3, 5] has cost 33.


Before backtrack at level 4
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7]
 solution : [0, 2, 3, 5]

After backtrack at level 4
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 5]


Invert decision for 5 at level 3


New level: 4
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 128), (7, 128), (8, 128), (9, 128), (10, -1), (11, -1), (12, 1), (13, 64), (14, 256), (15, 576), (16, -1), (17, 16), (18, 18), (19, -1), (20, 12), (21, 12), (22, 5), (23, 5), (24, -1), (25, -1), (26, 9), (27, 16), (28, 16), (29, 2), (30, -1), (31, -1), (32, 16), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 4 among pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 15, 7, 16, 19, 31, 11, 10, 30, 24]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 15 with phase True at level 4

After decision at level 4
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]


New level: 5
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]


Before reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 22, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 264), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 48), (17, 40), (18, 68), (19, 41), (20, 5), (21, 24), (22, 0), (23, 16), (24, 16), (25, -1), (26, 40), (27, 32), (28, 128), (29, 16), (30, 160), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : {22}

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]


Before reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 264), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 48), (17, 40), (18, 68), (19, 41), (20, 5), (21, 24), (22, 0), (23, 16), (24, 16), (25, -1), (26, 40), (27, 32), (28, 128), (29, 16), (30, 160), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 264), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 48), (17, 40), (18, 68), (19, 41), (20, 5), (21, 24), (22, -1), (23, 16), (24, 16), (25, -1), (26, 40), (27, 32), (28, 128), (29, 16), (30, 160), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]


Solution : [0, 2, 3, 15] has cost 41.


Before backtrack at level 5
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24]
 solution : [0, 2, 3, 15]

After backtrack at level 5
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 15]


Invert decision for 15 at level 4


New level: 5
 pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 264), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 48), (17, 40), (18, 68), (19, 41), (20, 5), (21, 24), (22, -1), (23, 16), (24, 16), (25, -1), (26, 40), (27, 32), (28, 128), (29, 16), (30, 160), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 5 among pending : [9, 17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 9 with phase True at level 5

After decision at level 5
 pending : [17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]


New level: 6
 pending : [17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]


Before reduction : 
 pending  : [17, 18, 32, 33, 14, 6, 12, 23, 26, 28, 13, 29, 20, 21, 8, 27, 4, 7, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 512), (7, 0), (8, 128), (9, -1), (10, 64), (11, 64), (12, 512), (13, 256), (14, 512), (15, -1), (16, 5), (17, 144), (18, 0), (19, 18), (20, 0), (21, 7), (22, 40), (23, 320), (24, 8), (25, -1), (26, 96), (27, 0), (28, 0), (29, 128), (30, 5), (31, 16), (32, 0), (33, 0)]

Covered at level 6 : {32, 33, 4, 7, 18, 20, 27, 28}

After reduction : 
 pending  : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]


Before reduction : 
 pending  : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 512), (7, 0), (8, 128), (9, -1), (10, 64), (11, 64), (12, 512), (13, 256), (14, 512), (15, -1), (16, 5), (17, 144), (18, 0), (19, 18), (20, 0), (21, 7), (22, 40), (23, 320), (24, 8), (25, -1), (26, 96), (27, 0), (28, 0), (29, 128), (30, 5), (31, 16), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 64), (12, 512), (13, 256), (14, 512), (15, -1), (16, 5), (17, 144), (18, -1), (19, 18), (20, -1), (21, 7), (22, 40), (23, 320), (24, 8), (25, -1), (26, 96), (27, -1), (28, -1), (29, 128), (30, 5), (31, 16), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]


Solution : [0, 2, 3, 9] has cost 26.


Before backtrack at level 6
 pending : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22]
 solution : [0, 2, 3, 9]

After backtrack at level 6
 pending : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 9]


Invert decision for 9 at level 5


New level: 6
 pending : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, 128), (9, -1), (10, 64), (11, 64), (12, 512), (13, 256), (14, 512), (15, -1), (16, 5), (17, 144), (18, -1), (19, 18), (20, -1), (21, 7), (22, 40), (23, 320), (24, 8), (25, -1), (26, 96), (27, -1), (28, -1), (29, 128), (30, 5), (31, 16), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 6 : set()

After reduction : 
 pending  : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 6 among pending : [17, 14, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 14 with phase True at level 6

After decision at level 6
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]


New level: 7
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, 512), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]


Solution : [0, 2, 3, 14] has cost 22.


Decide in level 7 among pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 11, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, 512), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 11 with phase True at level 7

After decision at level 7
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]


New level: 8
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, 512), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 256), (7, 130), (8, 2), (9, -1), (10, 128), (11, -1), (12, 1), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 196), (19, 51), (20, 96), (21, 448), (22, 5), (23, 321), (24, 16), (25, -1), (26, 24), (27, 16), (28, 128), (29, 128), (30, 24), (31, 16), (32, 128), (33, 32)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]


Solution : [0, 2, 3, 14, 11] has cost 27.


Before backtrack at level 8
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]

After backtrack at level 8
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 11]


Invert decision for 11 at level 7


New level: 8
 pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, 256), (7, 130), (8, 2), (9, -1), (10, 128), (11, -1), (12, 1), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 196), (19, 51), (20, 96), (21, 448), (22, 5), (23, 321), (24, 16), (25, -1), (26, 24), (27, 16), (28, 128), (29, 128), (30, 24), (31, 16), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14]


Solution : [0, 2, 3, 14] has cost 22.


Decide in level 8 among pending : [17, 6, 12, 23, 26, 13, 29, 21, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 21 with phase True at level 8

After decision at level 8
 pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]


New level: 9
 pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 22, 18, 32, 33, 28, 20, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, 448), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 260), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 144), (17, 34), (18, 80), (19, 128), (20, 0), (21, -1), (22, 0), (23, 2), (24, 8), (25, -1), (26, 10), (27, 8), (28, 32), (29, 2), (30, 48), (31, 32), (32, 64), (33, 16)]

Covered at level 9 : {20, 22}

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 260), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 144), (17, 34), (18, 80), (19, 128), (20, 0), (21, -1), (22, 0), (23, 2), (24, 8), (25, -1), (26, 10), (27, 8), (28, 32), (29, 2), (30, 48), (31, 32), (32, 64), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 260), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 144), (17, 34), (18, 80), (19, 128), (20, -1), (21, -1), (22, -1), (23, 2), (24, 8), (25, -1), (26, 10), (27, 8), (28, 32), (29, 2), (30, 48), (31, 32), (32, 64), (33, 16)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]


Solution : [0, 2, 3, 14, 21] has cost 51.


Before backtrack at level 9
 pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7]
 solution : [0, 2, 3, 14, 21]

After backtrack at level 9
 pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14, 21]


Invert decision for 21 at level 8


New level: 9
 pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14]


Before reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 260), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 144), (17, 34), (18, 80), (19, 128), (20, -1), (21, -1), (22, -1), (23, 2), (24, 8), (25, -1), (26, 10), (27, 8), (28, 32), (29, 2), (30, 48), (31, 32), (32, 64), (33, 16)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14]


Solution : [0, 2, 3, 14] has cost 22.


Decide in level 9 among pending : [17, 6, 12, 23, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 23 with phase True at level 9

After decision at level 9
 pending : [17, 6, 12, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14, 23]


New level: 10
 pending : [17, 6, 12, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14, 23]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 29, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 22, 20]
 solution : [0, 2, 3, 14, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, 328), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 264), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 80), (17, 18), (18, 166), (19, 133), (20, 12), (21, -1), (22, 0), (23, -1), (24, 16), (25, -1), (26, 6), (27, 32), (28, 128), (29, 0), (30, 32), (31, 32), (32, 256), (33, 64)]

Covered at level 10 : {29, 22}

After reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20]
 solution : [0, 2, 3, 14, 23]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20]
 solution : [0, 2, 3, 14, 23]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 264), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 80), (17, 18), (18, 166), (19, 133), (20, 12), (21, -1), (22, 0), (23, -1), (24, 16), (25, -1), (26, 6), (27, 32), (28, 128), (29, 0), (30, 32), (31, 32), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 264), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 80), (17, 18), (18, 166), (19, 133), (20, 12), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 6), (27, 32), (28, 128), (29, -1), (30, 32), (31, 32), (32, 256), (33, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20]
 solution : [0, 2, 3, 14, 23]


Solution : [0, 2, 3, 14, 23] has cost 51.


Before backtrack at level 10
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20]
 solution : [0, 2, 3, 14, 23]

After backtrack at level 10
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20, 29, 22]
 solution : [0, 2, 3, 14, 23]


Invert decision for 23 at level 9


New level: 10
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20, 29, 22]
 solution : [0, 2, 3, 14]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20, 29, 22]
 solution : [0, 2, 3, 14]

Essensial at level 10 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 264), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 80), (17, 18), (18, 166), (19, 133), (20, 12), (21, -1), (22, -1), (23, -1), (24, 16), (25, -1), (26, 6), (27, 32), (28, 128), (29, -1), (30, 32), (31, 32), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, -1), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 10 : set()

After reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20, 29, 22]
 solution : [0, 2, 3, 14]


Solution : [0, 2, 3, 14] has cost 22.


Decide in level 10 among pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 7, 20, 29, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, -1), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 7 with phase True at level 10

After decision at level 10
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]


New level: 11
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 33, 28, 27, 4, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 256), (7, 272), (8, 2), (9, -1), (10, 256), (11, -1), (12, 256), (13, 128), (14, -1), (15, -1), (16, 160), (17, 36), (18, 196), (19, 149), (20, 96), (21, -1), (22, 5), (23, -1), (24, 64), (25, -1), (26, 24), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 4), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 22), (19, 24), (20, 5), (21, -1), (22, 5), (23, -1), (24, 8), (25, -1), (26, 24), (27, 0), (28, 8), (29, 128), (30, 24), (31, 16), (32, 8), (33, 0)]

Covered at level 11 : {33, 27, 4}

After reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 4), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 22), (19, 24), (20, 5), (21, -1), (22, 5), (23, -1), (24, 8), (25, -1), (26, 24), (27, 0), (28, 8), (29, 128), (30, 24), (31, 16), (32, 8), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 4), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 22), (19, 24), (20, 5), (21, -1), (22, 5), (23, -1), (24, 8), (25, -1), (26, 24), (27, -1), (28, 8), (29, 128), (30, 24), (31, 16), (32, 8), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]


Solution : [0, 2, 3, 14, 7] has cost 32.


Before backtrack at level 11
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22]
 solution : [0, 2, 3, 14, 7]

After backtrack at level 11
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22, 33, 27, 4]
 solution : [0, 2, 3, 14, 7]


Invert decision for 7 at level 10


New level: 11
 pending : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22, 33, 27, 4]
 solution : [0, 2, 3, 14]


Before reduction : 
 pending  : [17, 6, 12, 26, 13, 8, 16, 19, 31, 10, 30, 24, 18, 32, 28, 20, 29, 22, 33, 27, 4]
 solution : [0, 2, 3, 14]

Essensial at level 11 : {10, 18, 4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, 64), (11, -1), (12, 4), (13, 128), (14, -1), (15, -1), (16, 36), (17, 36), (18, 22), (19, 24), (20, 5), (21, -1), (22, 5), (23, -1), (24, 8), (25, -1), (26, 24), (27, -1), (28, 8), (29, 128), (30, 24), (31, 16), (32, 8), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 64), (13, 2), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 11 : {32, 33, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31}

After reduction : 
 pending  : [6, 12, 13, 8]
 solution : [0, 2, 3, 14, 10, 18, 4]


Before reduction : 
 pending  : [6, 12, 13, 8]
 solution : [0, 2, 3, 14, 10, 18, 4]

Essensial at level 11 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 256), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 64), (13, 2), (14, -1), (15, -1), (16, 0), (17, 0), (18, -1), (19, 0), (20, 0), (21, -1), (22, 0), (23, -1), (24, 0), (25, -1), (26, 0), (27, 0), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 1), (13, 2), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 11 : set()

After reduction : 
 pending  : [6, 12, 13, 8]
 solution : [0, 2, 3, 14, 10, 18, 4]


Solution : [0, 2, 3, 14, 10, 18, 4] has cost 71.


Before backtrack at level 11
 pending : [6, 12, 13, 8]
 solution : [0, 2, 3, 14, 10, 18, 4]

After backtrack at level 11
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27]
 solution : [0, 2, 3, 14]


Before backtrack at level 10
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27]
 solution : [0, 2, 3, 14]

After backtrack at level 10
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7]
 solution : [0, 2, 3, 14]


Before backtrack at level 9
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7]
 solution : [0, 2, 3, 14]

After backtrack at level 9
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23]
 solution : [0, 2, 3, 14]


Before backtrack at level 8
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23]
 solution : [0, 2, 3, 14]

After backtrack at level 8
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21]
 solution : [0, 2, 3, 14]


Before backtrack at level 7
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21]
 solution : [0, 2, 3, 14]

After backtrack at level 7
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 14]


Invert decision for 14 at level 6


New level: 7
 pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3]

Essensial at level 7 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 2), (7, -1), (8, 2), (9, -1), (10, -1), (11, -1), (12, 1), (13, 2), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 7 : set()

After reduction : 
 pending  : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 7 among pending : [6, 12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 6 with phase True at level 7

After decision at level 7
 pending : [12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]


New level: 8
 pending : [12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]


Before reduction : 
 pending  : [12, 13, 8, 10, 18, 4, 17, 26, 16, 19, 31, 30, 24, 32, 28, 20, 29, 22, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, 512), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, 0), (9, -1), (10, 64), (11, 512), (12, 4), (13, 0), (14, -1), (15, -1), (16, 20), (17, 0), (18, 196), (19, 9), (20, 96), (21, 386), (22, 0), (23, 12), (24, 2), (25, -1), (26, 0), (27, 32), (28, 128), (29, 4), (30, 36), (31, 64), (32, 256), (33, 64)]

Covered at level 8 : {8, 13, 17, 22, 26}

After reduction : 
 pending  : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]


Before reduction : 
 pending  : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, 0), (9, -1), (10, 64), (11, 512), (12, 4), (13, 0), (14, -1), (15, -1), (16, 20), (17, 0), (18, 196), (19, 9), (20, 96), (21, 386), (22, 0), (23, 12), (24, 2), (25, -1), (26, 0), (27, 32), (28, 128), (29, 4), (30, 36), (31, 64), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, -1), (9, -1), (10, 64), (11, 512), (12, 4), (13, -1), (14, -1), (15, -1), (16, 20), (17, -1), (18, 196), (19, 9), (20, 96), (21, 386), (22, -1), (23, 12), (24, 2), (25, -1), (26, -1), (27, 32), (28, 128), (29, 4), (30, 36), (31, 64), (32, 256), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]


Solution : [0, 2, 3, 6] has cost 26.


Before backtrack at level 8
 pending : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11]
 solution : [0, 2, 3, 6]

After backtrack at level 8
 pending : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 6]


Invert decision for 6 at level 7


New level: 8
 pending : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3]

Essensial at level 8 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, -1), (9, -1), (10, 64), (11, 512), (12, 4), (13, -1), (14, -1), (15, -1), (16, 20), (17, -1), (18, 196), (19, 9), (20, 96), (21, 386), (22, -1), (23, 12), (24, 2), (25, -1), (26, -1), (27, 32), (28, 128), (29, 4), (30, 36), (31, 64), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Covered at level 8 : set()

After reduction : 
 pending  : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3]


Solution : [0, 2, 3] has cost 20.


Decide in level 8 among pending : [12, 10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

Decide 12 with phase True at level 8

After decision at level 8
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]


New level: 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 272), (8, 128), (9, -1), (10, 256), (11, 512), (12, 512), (13, 256), (14, -1), (15, -1), (16, 160), (17, 144), (18, 196), (19, 197), (20, 96), (21, 448), (22, 40), (23, 328), (24, 64), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, 64), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, -1), (15, -1), (16, 160), (17, 132), (18, 196), (19, 51), (20, 96), (21, 400), (22, 40), (23, 328), (24, 16), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 128), (32, 256), (33, 64)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]


Solution : [0, 2, 3, 12] has cost 25.


Before backtrack at level 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]

After backtrack at level 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 12]


Invert decision for 12 at level 8


New level: 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 11, 13, 8, 17, 26, 22]
 solution : [0, 2, 3]

Essensial at level 9 : {11}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 128), (5, -1), (6, -1), (7, 258), (8, 64), (9, -1), (10, 128), (11, 128), (12, -1), (13, 128), (14, -1), (15, -1), (16, 160), (17, 132), (18, 196), (19, 51), (20, 96), (21, 400), (22, 40), (23, 328), (24, 16), (25, -1), (26, 96), (27, 32), (28, 128), (29, 128), (30, 192), (31, 128), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 130), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 36), (17, 144), (18, 196), (19, 195), (20, 96), (21, 448), (22, 40), (23, 321), (24, 64), (25, -1), (26, 96), (27, 16), (28, 128), (29, 128), (30, 24), (31, 32), (32, 128), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 11]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 11]

Essensial at level 9 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 130), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 36), (17, 144), (18, 196), (19, 195), (20, 96), (21, 448), (22, 40), (23, 321), (24, 64), (25, -1), (26, 96), (27, 16), (28, 128), (29, 128), (30, 24), (31, 32), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 130), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 36), (17, 144), (18, 196), (19, 195), (20, 96), (21, 448), (22, 40), (23, 321), (24, 64), (25, -1), (26, 96), (27, 16), (28, 128), (29, 128), (30, 24), (31, 32), (32, 128), (33, 32)]

Covered at level 9 : set()

After reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 11]


Solution : [0, 2, 3, 11] has cost 25.


Before backtrack at level 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22]
 solution : [0, 2, 3, 11]

After backtrack at level 9
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11]
 solution : [0, 2, 3]


Before backtrack at level 8
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11]
 solution : [0, 2, 3]

After backtrack at level 8
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12]
 solution : [0, 2, 3]


Before backtrack at level 7
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12]
 solution : [0, 2, 3]

After backtrack at level 7
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6]
 solution : [0, 2, 3]


Before backtrack at level 6
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6]
 solution : [0, 2, 3]

After backtrack at level 6
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14]
 solution : [0, 2, 3]


Before backtrack at level 5
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14]
 solution : [0, 2, 3]

After backtrack at level 5
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9]
 solution : [0, 2, 3]


Before backtrack at level 4
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9]
 solution : [0, 2, 3]

After backtrack at level 4
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9, 15]
 solution : [0, 2, 3]


Before backtrack at level 3
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9, 15]
 solution : [0, 2, 3]

After backtrack at level 3
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 3]


Invert decision for 3 at level 2


New level: 3
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 8, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2]

Essensial at level 3 : {8}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 64), (5, -1), (6, -1), (7, 130), (8, 128), (9, -1), (10, 128), (11, -1), (12, -1), (13, 256), (14, -1), (15, -1), (16, 36), (17, 144), (18, 196), (19, 195), (20, 96), (21, 448), (22, 40), (23, 321), (24, 64), (25, -1), (26, 96), (27, 16), (28, 128), (29, 128), (30, 24), (31, 32), (32, 128), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 520), (6, 512), (7, 640), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 204), (18, 576), (19, 202), (20, 384), (21, 448), (22, 96), (23, 352), (24, 128), (25, 64), (26, 192), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8]

Essensial at level 3 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 520), (6, 512), (7, 640), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 204), (18, 576), (19, 202), (20, 384), (21, 448), (22, 96), (23, 352), (24, 128), (25, 64), (26, 192), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 520), (6, 512), (7, 640), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 204), (18, 576), (19, 202), (20, 384), (21, 448), (22, 96), (23, 352), (24, 128), (25, 64), (26, 192), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Covered at level 3 : set()

After reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8]


Solution : [0, 2, 8] has cost 13.


Decide in level 3 among pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 7, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 520), (6, 512), (7, 640), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 204), (18, 576), (19, 202), (20, 384), (21, 448), (22, 96), (23, 352), (24, 128), (25, 64), (26, 192), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

Decide 7 with phase True at level 3

After decision at level 3
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8, 7]


New level: 4
 pending : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8, 7]


Before reduction : 
 pending  : [10, 18, 4, 16, 19, 31, 30, 24, 32, 28, 20, 29, 33, 27, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 25, 5]
 solution : [0, 2, 8, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 512), (5, 520), (6, 512), (7, 640), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 320), (17, 204), (18, 576), (19, 202), (20, 384), (21, 448), (22, 96), (23, 352), (24, 128), (25, 64), (26, 192), (27, 128), (28, 256), (29, 128), (30, 384), (31, 256), (32, 256), (33, 128)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 256), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 36), (17, 72), (18, 22), (19, 48), (20, 5), (21, 162), (22, 10), (23, 321), (24, 16), (25, 0), (26, 48), (27, 0), (28, 8), (29, 128), (30, 24), (31, 64), (32, 32), (33, 0)]

Covered at level 4 : {33, 27, 4, 25}

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5]
 solution : [0, 2, 8, 7]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5]
 solution : [0, 2, 8, 7]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, 0), (5, 256), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 36), (17, 72), (18, 22), (19, 48), (20, 5), (21, 162), (22, 10), (23, 321), (24, 16), (25, 0), (26, 48), (27, 0), (28, 8), (29, 128), (30, 24), (31, 64), (32, 32), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 256), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 36), (17, 72), (18, 22), (19, 48), (20, 5), (21, 162), (22, 10), (23, 321), (24, 16), (25, -1), (26, 48), (27, -1), (28, 8), (29, 128), (30, 24), (31, 64), (32, 32), (33, -1)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5]
 solution : [0, 2, 8, 7]


Solution : [0, 2, 8, 7] has cost 23.


Before backtrack at level 4
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5]
 solution : [0, 2, 8, 7]

After backtrack at level 4
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 4, 33, 27, 25]
 solution : [0, 2, 8, 7]


Invert decision for 7 at level 3


New level: 4
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 4, 33, 27, 25]
 solution : [0, 2, 8]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 4, 33, 27, 25]
 solution : [0, 2, 8]

Essensial at level 4 : {4}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 256), (6, 512), (7, -1), (8, -1), (9, 128), (10, 128), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 36), (17, 72), (18, 22), (19, 48), (20, 5), (21, 162), (22, 10), (23, 321), (24, 16), (25, -1), (26, 48), (27, -1), (28, 8), (29, 128), (30, 24), (31, 64), (32, 32), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, 0), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

Covered at level 4 : {27}

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 33, 25]
 solution : [0, 2, 8, 4]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 33, 25]
 solution : [0, 2, 8, 4]

Essensial at level 4 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, 0), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

Covered at level 4 : set()

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 33, 25]
 solution : [0, 2, 8, 4]


Solution : [0, 2, 8, 4] has cost 19.


Decide in level 4 among pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 15, 5, 33, 25]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

Decide 15 with phase True at level 4

After decision at level 4
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]


New level: 5
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 20, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, 576), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 40), (17, 48), (18, 60), (19, 41), (20, 0), (21, 24), (22, 5), (23, 16), (24, 128), (25, 32), (26, 160), (27, -1), (28, 16), (29, 16), (30, 40), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : {20}

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 40), (17, 48), (18, 60), (19, 41), (20, 0), (21, 24), (22, 5), (23, 16), (24, 128), (25, 32), (26, 160), (27, -1), (28, 16), (29, 16), (30, 40), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 40), (17, 48), (18, 60), (19, 41), (20, -1), (21, 24), (22, 5), (23, 16), (24, 128), (25, 32), (26, 160), (27, -1), (28, 16), (29, 16), (30, 40), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]


Solution : [0, 2, 8, 4, 15] has cost 40.


Before backtrack at level 5
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25]
 solution : [0, 2, 8, 4, 15]

After backtrack at level 5
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25, 20]
 solution : [0, 2, 8, 4, 15]


Invert decision for 15 at level 4


New level: 5
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25, 20]
 solution : [0, 2, 8, 4]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25, 20]
 solution : [0, 2, 8, 4]

Essensial at level 5 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 40), (17, 48), (18, 60), (19, 41), (20, -1), (21, 24), (22, 5), (23, 16), (24, 128), (25, 32), (26, 160), (27, -1), (28, 16), (29, 16), (30, 40), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

Covered at level 5 : set()

After reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25, 20]
 solution : [0, 2, 8, 4]


Solution : [0, 2, 8, 4] has cost 19.


Decide in level 5 among pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 5, 33, 25, 20]

Coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

Decide 5 with phase True at level 5

After decision at level 5
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 5]


New level: 6
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 5]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, 514), (6, 512), (7, -1), (8, -1), (9, 512), (10, 256), (11, 512), (12, 512), (13, 256), (14, 512), (15, -1), (16, 144), (17, 197), (18, 256), (19, 197), (20, 40), (21, 448), (22, 96), (23, 328), (24, 128), (25, 32), (26, 192), (27, -1), (28, 64), (29, 128), (30, 96), (31, 256), (32, 256), (33, 64)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

Covered at level 6 : {6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33}

After reduction : 
 pending  : []
 solution : [0, 2, 8, 4, 5]


Before reduction : 
 pending  : []
 solution : [0, 2, 8, 4, 5]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 0), (7, -1), (8, -1), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0), (15, -1), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0), (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, -1), (28, 0), (29, 0), (30, 0), (31, 0), (32, 0), (33, 0)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

Covered at level 6 : set()

After reduction : 
 pending  : []
 solution : [0, 2, 8, 4, 5]


Solution : [0, 2, 8, 4, 5] has cost 32.


Before backtrack at level 6
 pending : []
 solution : [0, 2, 8, 4, 5]

After backtrack at level 6
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 5]


Invert decision for 5 at level 5


New level: 6
 pending : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4]


Before reduction : 
 pending  : [10, 18, 16, 19, 31, 30, 24, 32, 28, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4]

Essensial at level 6 : {10}

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, -1), (7, -1), (8, -1), (9, -1), (10, -1), (11, -1), (12, -1), (13, -1), (14, -1), (15, -1), (16, -1), (17, -1), (18, -1), (19, -1), (20, -1), (21, -1), (22, -1), (23, -1), (24, -1), (25, -1), (26, -1), (27, -1), (28, -1), (29, -1), (30, -1), (31, -1), (32, -1), (33, -1)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 128), (13, 8), (14, 512), (15, -1), (16, 128), (17, 36), (18, 164), (19, 146), (20, 2), (21, 160), (22, 9), (23, 258), (24, 16), (25, 8), (26, 4), (27, -1), (28, 0), (29, 2), (30, 4), (31, 128), (32, 32), (33, 32)]

Covered at level 6 : {28}

After reduction : 
 pending  : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 10]


Before reduction : 
 pending  : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 10]

Essensial at level 6 : set()

Before removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 128), (13, 8), (14, 512), (15, -1), (16, 128), (17, 36), (18, 164), (19, 146), (20, 2), (21, 160), (22, 9), (23, 258), (24, 16), (25, 8), (26, 4), (27, -1), (28, 0), (29, 2), (30, 4), (31, 128), (32, 32), (33, 32)]

After removed
 coverage : [(0, -1), (1, -1), (2, -1), (3, -1), (4, -1), (5, -1), (6, 512), (7, -1), (8, -1), (9, 512), (10, -1), (11, 128), (12, 128), (13, 8), (14, 512), (15, -1), (16, 128), (17, 36), (18, 164), (19, 146), (20, 2), (21, 160), (22, 9), (23, 258), (24, 16), (25, 8), (26, 4), (27, -1), (28, -1), (29, 2), (30, 4), (31, 128), (32, 32), (33, 32)]

Covered at level 6 : set()

After reduction : 
 pending  : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 10]


Solution : [0, 2, 8, 4, 10] has cost 28.


Before backtrack at level 6
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20]
 solution : [0, 2, 8, 4, 10]

After backtrack at level 6
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28]
 solution : [0, 2, 8, 4]


Before backtrack at level 5
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28]
 solution : [0, 2, 8, 4]

After backtrack at level 5
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5]
 solution : [0, 2, 8, 4]


Before backtrack at level 4
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5]
 solution : [0, 2, 8, 4]

After backtrack at level 4
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15]
 solution : [0, 2, 8]


Before backtrack at level 3
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15]
 solution : [0, 2, 8]

After backtrack at level 3
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15, 8, 7]
 solution : [0, 2]


Before backtrack at level 2
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15, 8, 7]
 solution : [0, 2]

After backtrack at level 2
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15, 8, 7, 3]
 solution : [0, 2]


Before backtrack at level 1
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15, 8, 7, 3]
 solution : [0, 2]

After backtrack at level 1
 pending : [18, 16, 19, 31, 30, 24, 32, 29, 23, 21, 13, 17, 26, 22, 11, 12, 6, 14, 9, 33, 25, 20, 10, 28, 5, 4, 27, 15, 8, 7, 3, 1]
 solution : [0, 2]


============================================================================================

	[MIN RESULT]: Minimized Invariants on [ivybench/sym/ivy/firewall.ivy: node=3]

============================================================================================

[MIN NOTE]: number of minimal solution found: 1

[MIN NOTE]: upper bound: 22

[MIN NOTE]: maximum branch and bound depth: 21

[MIN NOTE]: number of definitions: 0

[MIN NOTE]: number of equality relations: 0

[MIN NOTE]: Solution 0 : [0, 2, 1, 4, 9]

[MIN NOTE]: solution length: 5

invariant [invar_0] forall NODE0. ~sent(NODE0,NODE0) # qcost: 2

invariant [invar_2] forall NODE1. ~allowed_in(NODE1) | (exists NODE0. (sent(NODE0,NODE1) & NODE0 ~= NODE1)) # qcost: 5

invariant [invar_1] forall NODE0. ~internal(NODE0) | ~allowed_in(NODE0) # qcost: 3

invariant [invar_4] forall NODE1,NODE0. ~sent(NODE0,NODE1) | allowed_in(NODE0) | allowed_in(NODE1) | NODE0 = NODE1 # qcost: 6

invariant [invar_9] forall NODE1,NODE0. internal(NODE1) | internal(NODE0) | ~sent(NODE0,NODE1) | NODE0 = NODE1 # qcost: 6

[MIN NOTE]: number of total invariants: 5

[MIN NOTE]: total qCost: 22




[QRM NOTE]: Time elapsed since start: 4.392 seconds

[QRM NOTE]: Time elapsed since last: 2.700 seconds

[QRM NOTE]: Peak memory: 2241302 bytes


*********************************************************************************************

	[Reachability Convergence Check]: [ivybench/sym/ivy/firewall.ivy: node=3]

*********************************************************************************************

python3 qrm.py ivybench/sym/ivy/firewall.node_3.0.ivy -s node=4 -f 2 -g -w -r -v 5 -w -l ivybench/sym/ivy/firewall.log


---------- Parsing Ivy ----------


Printing isolate this:

OK


=============================================================================================

	[FW]: Forward Reachability on [ivybench/sym/ivy/firewall.node_3.0.ivy: node=4]

=============================================================================================


==============================================

	Set up for forward reachability

==============================================

[FW NOTE]: number of state atoms: 24

[FW NOTE]: number of interpreted atoms (e.g. member,le): 0

[FW NOTE]: symmetric group order: 24

[FW NOTE]: number of branching actions: 32

ivy_to_cpp target=qrm firewall.node_4.finite.ivy

[IVY_TO_CPP RESULT]: OK

swig -c++ -python -o firewall.node_4.finite_wrap.cpp ivy_exec.i

[SWIG RESULT]: OK

g++ -std=c++11 -fpic -pthread -O3 firewall.node_4.finite.cpp firewall.node_4.finite_wrap.cpp -I/home/yunrong/.pyenv/versions/3.12.0/include/python3.12 -c

[G++ RESULT]: OK

g++ -shared firewall.node_4.finite.o firewall.node_4.finite_wrap.o -o _ivy_exec.so -lm -lstdc++

[LINK RESULT]: OK

[QRM NOTE]: Time elapsed since start: 7.520 seconds

[QRM NOTE]: Time elapsed since last: 7.520 seconds

[QRM NOTE]: Peak memory: 1185421 bytes


===================================

	Forward reachability

===================================

[FW NOTE]: dfs max depth: 8

[FW NOTE]: number of total reachable states:        1352

[FW NOTE]: number of dfs representative states:     80

[FW NOTE]: number of dfs non-representative states: 1272


====================================================================================================

	[FW RESULT]: Forward Reachability on [ivybench/sym/ivy/firewall.node_3.0.ivy: node=4]

====================================================================================================

sort: node=['node0', 'node1', 'node2', 'node3']
predicate: sent('node', 'node')
predicate: allowed_in('node',)
predicate: internal('node',)
interpreted atoms: {}
state atoms: ['allowed_in(node0)', 'allowed_in(node1)', 'allowed_in(node2)', 'allowed_in(node3)', 'internal(node0)', 'internal(node1)', 'internal(node2)', 'internal(node3)', 'sent(node0,node0)', 'sent(node0,node1)', 'sent(node0,node2)', 'sent(node0,node3)', 'sent(node1,node0)', 'sent(node1,node1)', 'sent(node1,node2)', 'sent(node1,node3)', 'sent(node2,node0)', 'sent(node2,node1)', 'sent(node2,node2)', 'sent(node2,node3)', 'sent(node3,node0)', 'sent(node3,node1)', 'sent(node3,node2)', 'sent(node3,node3)']
representative states : 0, 983040, 458752, 65536, 196608, 1966096, 1966352, 1970448, 1970450, 1970454, 1970462, 1966354, 1966358, 1966366, 1966362, 1966360, 1966098, 1966102, 1966110, 1966100, 1966108, 1179664, 3408640, 7892992, 7893000, 7893128, 7895176, 3408644, 3408708, 1179666, 1441808, 3932928, 3937024, 3945216, 3945220, 3945228, 3945292, 3945420, 3945284, 3945288, 3937028, 3937036, 3937100, 3937228, 3937164, 3937092, 3937220, 3937156, 3937032, 3937096, 3937224, 3937160, 3937088, 3937216, 3937152, 3932932, 3932940, 3933004, 3933132, 3933068, 3932996, 3933000, 3932936, 3933064, 1442064, 1442066, 1442070, 3936768, 3936776, 3936780, 3936908, 3936972, 3936844, 3936836, 3936840, 3936772, 3936900, 1441810, 1441814, 1441812


=== State Orbit 0 =====================
size : 1
repr state: 000000000000000000000000
lex min decimal: 0
states:
000000000000000000000000




=== State Orbit 1 =====================
size : 1
repr state: 000011110000000000000000
lex min decimal: 983040
states:
000011110000000000000000




=== State Orbit 2 =====================
size : 4
repr state: 000001110000000000000000
lex min decimal: 458752
states:
000001110000000000000000
000011010000000000000000
000011100000000000000000
000010110000000000000000




=== State Orbit 3 =====================
size : 4
repr state: 000000010000000000000000
lex min decimal: 65536
states:
000001000000000000000000
000000010000000000000000
000000100000000000000000
000010000000000000000000




=== State Orbit 4 =====================
size : 6
repr state: 000010010000000000000000
lex min decimal: 196608
states:
000001100000000000000000
000010010000000000000000
000001010000000000000000
000011000000000000000000
000010100000000000000000
000000110000000000000000




=== State Orbit 5 =====================
size : 12
repr state: 100001110000100000000000
lex min decimal: 1966096
states:
001011010000001000000000
010010110100000000000000
000111100000000000010000
001011010010000000000000
001011010000000000000010
010010110000000001000000
000111100001000000000000
000111100000000100000000
010010110000000000000100
100001110000000010000000
100001110000000000001000
100001110000100000000000




=== State Orbit 6 =====================
size : 12
repr state: 100001110000100010000000
lex min decimal: 1966352
states:
000111100000000100010000
001011010010000000000010
001011010010001000000000
100001110000100010000000
010010110100000001000000
001011010000001000000010
100001110000000010001000
000111100001000100000000
000111100001000000010000
100001110000100000001000
010010110100000000000100
010010110000000001000100




=== State Orbit 7 =====================
size : 4
repr state: 100001110000100010001000
lex min decimal: 1970448
states:
100001110000100010001000
000111100001000100010000
010010110100000001000100
001011010010001000000010




=== State Orbit 8 =====================
size : 12
repr state: 100001110100100010001000
lex min decimal: 1970450
states:
100001110010100010001000
010010110100000101000100
000111100001000100011000
001011010010001001000010
000111100001000100010100
001011010010001000010010
100001110100100010001000
000111100001000100010010
100001110001100010001000
010010110100001001000100
010010110100100001000100
001011010010001010000010




=== State Orbit 9 =====================
size : 12
repr state: 100001110110100010001000
lex min decimal: 1970454
states:
001011010010001001010010
001011010010001010010010
000111100001000100011010
100001110101100010001000
100001110110100010001000
010010110100101001000100
010010110100001101000100
010010110100100101000100
100001110011100010001000
000111100001000100010110
001011010010001011000010
000111100001000100011100




=== State Orbit 10 =====================
size : 4
repr state: 100001110111100010001000
lex min decimal: 1970462
states:
001011010010001011010010
100001110111100010001000
000111100001000100011110
010010110100101101000100




=== State Orbit 11 =====================
size : 24
repr state: 100001110100100010000000
lex min decimal: 1966354
states:
001011010010000010000010
010010110000001001000100
100001110010100010000000
000111100000000100010100
100001110001100000001000
001011010000001001000010
010010110100100001000000
010010110100001001000000
010010110100100000000100
010010110000000101000100
000111100001000000011000
000111100001000000010010
000111100001000100000100
100001110010000010001000
100001110100100000001000
001011010010001010000000
100001110100100010000000
000111100001000100001000
001011010000001000010010
100001110001000010001000
010010110100000100000100
001011010010000000010010
001011010010001001000000
000111100000000100010010




=== State Orbit 12 =====================
size : 12
repr state: 100001110110100010000000
lex min decimal: 1966358
states:
001011010010001011000000
000111100001000000011010
010010110000001101000100
100001110101100000001000
001011010010000010010010
100001110011000010001000
000111100001000100001100
000111100000000100010110
010010110100100100000100
100001110110100010000000
001011010000001001010010
010010110100101001000000




=== State Orbit 13 =====================
size : 12
repr state: 100001110111100010000000
lex min decimal: 1966366
states:
010010110000101101000100
000111100001000000011110
001011010010000011010010
010010110100101100000100
100001110111000010001000
100001110111100000001000
001011010010001011010000
001011010000001011010010
000111100001000100001110
000111100000000100011110
010010110100101101000000
100001110111100010000000




=== State Orbit 14 =====================
size : 24
repr state: 100001110101100010000000
lex min decimal: 1966362
states:
010010110000101001000100
010010110100101000000100
000111100000000100011010
100001110011100000001000
001011010010000001010010
100001110101000010001000
001011010010000011000010
010010110100100101000000
100001110101100010000000
001011010000001011000010
010010110000100101000100
000111100000000100011100
000111100001000000011100
000111100001000000010110
000111100001000100001010
100001110011100010000000
100001110110000010001000
000111100001000100000110
001011010010001010010000
001011010010001001010000
010010110100001100000100
001011010000001010010010
100001110110100000001000
010010110100001101000000




=== State Orbit 15 =====================
size : 12
repr state: 100001110001100010000000
lex min decimal: 1966360
states:
010010110000100001000100
001011010010000001000010
010010110100000101000000
000111100001000000010100
001011010010001000010000
000111100000000100011000
000111100001000100000010
010010110100001000000100
100001110100000010001000
001011010000001010000010
100001110001100010000000
100001110010100000001000




=== State Orbit 16 =====================
size : 12
repr state: 100001110100100000000000
lex min decimal: 1966098
states:
100001110100100000000000
000111100000000100000100
000111100001000000001000
010010110000001001000000
010010110000000100000100
100001110001000000001000
010010110100100000000000
001011010000000000010010
001011010010000010000000
001011010000001001000000
100001110010000010000000
000111100000000000010010




=== State Orbit 17 =====================
size : 24
repr state: 100001110110100000000000
lex min decimal: 1966102
states:
001011010000001001010000
000111100001000000001100
100001110011000000001000
001011010000000010010010
001011010000000001010010
000111100000000000010110
001011010000001011000000
010010110100100100000000
100001110101000000001000
100001110011000010000000
000111100001000000001010
100001110110100000000000
001011010010000010010000
010010110000001100000100
000111100000000100001100
010010110000101001000000
100001110101100000000000
010010110100101000000000
010010110000001101000000
010010110000100100000100
100001110110000010000000
000111100000000100000110
001011010010000011000000
000111100000000000011010




=== State Orbit 18 =====================
size : 12
repr state: 100001110111100000000000
lex min decimal: 1966110
states:
000111100000000100001110
100001110111100000000000
001011010000001011010000
010010110000101100000100
100001110111000000001000
010010110000101101000000
001011010010000011010000
010010110100101100000000
001011010000000011010010
100001110111000010000000
000111100001000000001110
000111100000000000011110




=== State Orbit 19 =====================
size : 24
repr state: 100001110010100000000000
lex min decimal: 1966100
states:
010010110000100000000100
001011010000001010000000
000111100000000000010100
100001110100000010000000
001011010000000010000010
000111100000000100001000
100001110001000010000000
100001110010000000001000
000111100000000000011000
010010110000000101000000
100001110100000000001000
001011010010000001000000
001011010010000000010000
000111100000000100000010
001011010000001000010000
100001110001100000000000
100001110010100000000000
010010110000001000000100
000111100001000000000010
010010110000100001000000
000111100001000000000100
001011010000000001000010
010010110100000100000000
010010110100001000000000




=== State Orbit 20 =====================
size : 12
repr state: 100001110011100000000000
lex min decimal: 1966108
states:
010010110000100101000000
100001110101000010000000
010010110000101000000100
000111100001000000000110
001011010000000011000010
100001110110000000001000
000111100000000000011100
010010110100001100000000
000111100000000100001010
001011010000001010010000
100001110011100000000000
001011010010000001010000




=== State Orbit 21 =====================
size : 12
repr state: 100000010000000000001000
lex min decimal: 1179664
states:
100000010000000000001000
001001000000001000000000
100001000000100000000000
000110000001000000000000
001000010000000000000010
010000010000000000000100
000100100000000000010000
001010000010000000000000
010010000100000000000000
000101000000000100000000
010000100000000001000000
100000100000000010000000




=== State Orbit 22 =====================
size : 12
repr state: 110000010000000000001100
lex min decimal: 3408640
states:
010110000101000000000000
110000010000000000001100
101000010000000000001010
110000100000000011000000
101001000000101000000000
001101000000001100000000
010100100000000001010000
100100100000000010010000
011010000110000000000000
001110000011000000000000
011000010000000000000110
100101000000100100000000




=== State Orbit 23 =====================
size : 4
repr state: 111000010000000000001110
lex min decimal: 7892992
states:
101101000000101100000000
111000010000000000001110
011110000111000000000000
110100100000000011010000




=== State Orbit 24 =====================
size : 12
repr state: 111000010001000000001110
lex min decimal: 7893000
states:
011110000111000000001000
011110000111000010000000
110100100010000011010000
111000010000000000011110
110100100000000011010010
011110000111100000000000
101101000000101101000000
101101000000101100000100
101101000100101100000000
111000010001000000001110
111000010000000100001110
110100100000001011010000




=== State Orbit 25 =====================
size : 12
repr state: 111000010001000100001110
lex min decimal: 7893128
states:
101101000000101101000100
111000010001000000011110
011110000111000010001000
110100100010000011010010
101101000100101101000000
110100100010001011010000
011110000111100010000000
011110000111100000001000
110100100000001011010010
111000010000000100011110
101101000100101100000100
111000010001000100001110




=== State Orbit 26 =====================
size : 4
repr state: 111000010001000100011110
lex min decimal: 7895176
states:
011110000111100010001000
111000010001000100011110
110100100010001011010010
101101000100101101000100




=== State Orbit 27 =====================
size : 24
repr state: 110000010001000000001100
lex min decimal: 3408644
states:
010110000101100000000000
010100100000000001010010
110000010001000000001100
011000010000000000010110
110000100000001011000000
011000010000000100000110
001101000000001100000100
100101000100100100000000
001110000011000000001000
101000010000000000011010
110000100010000011000000
101001000100101000000000
101000010001000000001010
110000010000000100001100
011010000110100000000000
001110000011000010000000
001101000000001101000000
010110000101000000001000
100100100010000010010000
100101000000100100000100
100100100000000010010010
010100100000001001010000
101001000000101001000000
011010000110000010000000




=== State Orbit 28 =====================
size : 12
repr state: 110000010001000100001100
lex min decimal: 3408708
states:
110000100010001011000000
100101000100100100000100
011000010000000100010110
100100100010000010010010
010100100000001001010010
010110000101100000001000
001110000011000010001000
110000010001000100001100
101001000100101001000000
001101000000001101000100
101000010001000000011010
011010000110100010000000




=== State Orbit 29 =====================
size : 12
repr state: 100000010001000000001000
lex min decimal: 1179666
states:
000110000001000000001000
001001000000001001000000
100001000100100000000000
000101000000000100000100
001000010000000000010010
100000010001000000001000
100000100010000010000000
010010000100100000000000
010000100000001001000000
010000010000000100000100
000100100000000000010010
001010000010000010000000




=== State Orbit 30 =====================
size : 24
repr state: 010010010100000000000000
lex min decimal: 1441808
states:
001010010010000000000000
010010010100000000000000
000101100000000100000000
000111000001000000000000
001011000000001000000000
100000110000000010000000
010000110000000000000100
000111000000000100000000
001011000010000000000000
010010100100000000000000
001010010000000000000010
001001010000001000000000
000101100000000000010000
001001010000000000000010
100000110000000000001000
000110100001000000000000
100001010000100000000000
100001010000000000001000
000110100000000000010000
010010100000000001000000
100001100000000010000000
010000110000000001000000
010010010000000000000100
100001100000100000000000




=== State Orbit 31 =====================
size : 12
repr state: 011010010110000000000000
lex min decimal: 3932928
states:
011010010110000000000000
110000110000000011000000
100101100000000010010000
011010010000000000000110
101001010000101000000000
101001010000000000001010
010110100000000001010000
001111000000001100000000
001111000011000000000000
110000110000000000001100
100101100000100100000000
010110100101000000000000




=== State Orbit 32 =====================
size : 24
repr state: 011010010110000000000100
lex min decimal: 3937024
states:
110000110000000011000100
100101100000000110010000
011010010100000000000110
010110100100000001010000
100101100000100010010000
101001010000101000000010
011010010010000000000110
110000110000000011001000
100101100000100100010000
001111000010001100000000
011010010110000000000010
010110100001000001010000
110000110000000010001100
001111000011000100000000
001111000011001000000000
010110100101000000010000
010110100101000001000000
110000110000000001001100
011010010110000000000100
001111000001001100000000
101001010000100000001010
101001010000101000001000
101001010000001000001010
100101100000100110000000




=== State Orbit 33 =====================
size : 6
repr state: 011010010110000000000110
lex min decimal: 3945216
states:
001111000011001100000000
010110100101000001010000
101001010000101000001010
011010010110000000000110
100101100000100110010000
110000110000000011001100




=== State Orbit 34 =====================
size : 24
repr state: 011010010110100000000110
lex min decimal: 3945220
states:
011010010110000000010110
100101100100100110010000
010110100101001001010000
110000110010000011001100
011010010110100000000110
100101100010100110010000
110000110000001011001100
100101100000100110010010
110000110000000111001100
010110100101000001010010
101001010001101000001010
100101100000100110010100
110000110001000011001100
011010010110000100000110
001111000011001110000000
001111000011001100001000
011010010110000010000110
001111000011001100000100
010110100101000001011000
101001010100101000001010
101001010000101000011010
010110100101100001010000
001111000011001101000000
101001010000101001001010




=== State Orbit 35 =====================
size : 12
repr state: 011010010110100100000110
lex min decimal: 3945228
states:
101001010101101000001010
001111000011001100001100
010110100101101001010000
100101100110100110010000
110000110000001111001100
011010010110000010010110
101001010000101001011010
110000110011000011001100
001111000011001111000000
100101100000100110010110
011010010110100100000110
010110100101000001011010




=== State Orbit 36 =====================
size : 24
repr state: 011010010110100110000110
lex min decimal: 3945292
states:
011010010110100010010110
011010010110000110010110
110000110010001111001100
100101100100100110010110
001111000011001101001100
011010010110100100010110
010110100101001001011010
101001010101101000011010
100101100110100110010010
011010010110100110000110
010110100101101001011000
101001010001101001011010
110000110001001111001100
100101100110100110010100
110000110011001011001100
101001010101101001001010
110000110011000111001100
101001010100101001011010
100101100010100110010110
001111000011001111000100
010110100101100001011010
010110100101101001010010
001111000011001111001000
001111000011001110001100




=== State Orbit 37 =====================
size : 6
repr state: 011010010110100110010110
lex min decimal: 3945420
states:
011010010110100110010110
100101100110100110010110
001111000011001111001100
110000110011001111001100
101001010101101001011010
010110100101101001011010




=== State Orbit 38 =====================
size : 12
repr state: 011010010110100010000110
lex min decimal: 3945284
states:
011010010110100010000110
110000110001000111001100
100101100100100110010100
101001010001101000011010
110000110010001011001100
010110100101001001010010
001111000011001110001000
101001010100101001001010
010110100101100001011000
100101100010100110010010
001111000011001101000100
011010010110000100010110




=== State Orbit 39 =====================
size : 12
repr state: 011010010110100000010110
lex min decimal: 3945288
states:
110000110001001011001100
001111000011001101001000
011010010110100000010110
011010010110000110000110
101001010001101001001010
110000110010000111001100
100101100010100110010100
001111000011001110000100
100101100100100110010010
010110100101100001010010
010110100101001001011000
101001010100101000011010




=== State Orbit 40 =====================
size : 24
repr state: 011010010110100000000100
lex min decimal: 3937028
states:
010110100001000001010010
011010010100000100000110
101001010100101000001000
011010010110000010000010
100101100000100100010100
110000110000001011000100
101001010000001000011010
110000110001000010001100
101001010001100000001010
110000110010000011001000
011010010110100000000100
001111000011000100001000
011010010010000000010110
001111000010001101000000
101001010000101001000010
010110100100001001010000
110000110000000101001100
100101100000000110010010
001111000001001100000100
010110100101000000011000
010110100101100001000000
100101100010100010010000
100101100100100110000000
001111000011001010000000




=== State Orbit 41 =====================
size : 24
repr state: 011010010110100100000100
lex min decimal: 3937036
states:
110000110011000011001000
110000110000001111000100
001111000011001011000000
110000110011000010001100
011010010110000010010010
011010010110100100000100
010110100100101001010000
001111000011000100001100
010110100101000000011010
101001010101100000001010
001111000001001100001100
011010010100100100000110
011010010010000010010110
100101100000100100010110
100101100000000110010110
101001010000101001010010
110000110000001101001100
100101100110100010010000
101001010000001001011010
101001010101101000001000
001111000010001111000000
010110100101101001000000
010110100001000001011010
100101100110100110000000




=== State Orbit 42 =====================
size : 24
repr state: 011010010110100110000100
lex min decimal: 3937100
states:
101001010101101001001000
110000110010001111000100
110000110011000110001100
011010010110100110000100
101001010001001001011010
011010010100100100010110
010110100001001001011010
100101100010000110010110
010110100101100000011010
101001010101100000011010
100101100110100110000100
001111000011000110001100
010110100100101001010010
001111000011001011001000
100101100100100100010110
101001010100101001010010
001111000001001101001100
001111000010001111000100
011010010110100010010010
011010010010000110010110
110000110001001101001100
100101100110100010010010
010110100101101001001000
110000110011001011001000




=== State Orbit 43 =====================
size : 24
repr state: 011010010110100110010100
lex min decimal: 3937228
states:
110000110011001111001000
100101100110100100010110
010110100101101001001010
011010010110100110010010
001111000010001111001100
100101100110100010010110
101001010101001001011010
011010010110100110010100
110000110011001110001100
101001010101101001011000
001111000011001011001100
010110100001101001011010
001111000011000111001100
011010010100100110010110
110000110011001111000100
101001010101101001010010
001111000001001111001100
010110100100101001011010
101001010101100001011010
011010010010100110010110
010110100101101000011010
100101100110100110000110
110000110011001101001100
100101100110000110010110




=== State Orbit 44 =====================
size : 24
repr state: 011010010110100100010100
lex min decimal: 3937164
states:
100101100110100110000010
110000110010001101001100
010110100100101001011000
100101100100000110010110
001111000011001011000100
101001010001101001010010
010110100001100001011010
110000110011000111001000
101001010100001001011010
100101100010100100010110
010110100101001000011010
001111000011000101001100
011010010110000110010010
001111000010001111001000
001111000001001110001100
100101100110100010010100
011010010010100010010110
011010010100100110000110
110000110001001111000100
101001010101101000011000
101001010101100001001010
010110100101101001000010
011010010110100100010100
110000110011001010001100




=== State Orbit 45 =====================
size : 24
repr state: 011010010110100010000100
lex min decimal: 3937092
states:
011010010010000100010110
110000110001000110001100
001111000001001101000100
010110100100001001010010
001111000010001101000100
110000110010001011001000
010110100001001001010010
001111000011000110001000
011010010110100010000100
100101100010000110010010
110000110001000101001100
011010010100000100010110
100101100010100010010010
100101100100100100010100
010110100101100000011000
101001010001100000011010
101001010100101001001000
001111000011001010001000
011010010110100010000010
110000110010001011000100
101001010100101001000010
010110100101100001001000
100101100100100110000100
101001010001001000011010




=== State Orbit 46 =====================
size : 24
repr state: 011010010110100010010100
lex min decimal: 3937220
states:
110000110011000101001100
100101100100100110000110
001111000011000111001000
110000110010001111001000
100101100110000110010010
001111000001001111000100
101001010101001000011010
101001010001100001011010
011010010010100100010110
110000110011001011000100
101001010100101001011000
001111000011001010001100
011010010110100110000010
010110100001101001010010
100101100110100100010100
011010010100000110010110
100101100010100010010110
010110100100001001011010
011010010110100010010100
001111000010001101001100
010110100101100001001010
101001010101101001000010
010110100101101000011000
110000110001001110001100




=== State Orbit 47 =====================
size : 24
repr state: 011010010110100000010100
lex min decimal: 3937156
states:
100101100100100110000010
100101100100000110010010
101001010001100001001010
101001010100001000011010
001111000010001101001000
100101100010100010010100
010110100001100001010010
110000110010000111001000
011010010110100000010100
011010010100000110000110
110000110001001010001100
001111000011001010000100
010110100101100001000010
110000110010000101001100
010110100101001000011000
001111000001001110000100
101001010001101001000010
011010010110000110000010
101001010100101000011000
010110100100001001011000
110000110001001011000100
100101100010100100010100
001111000011000101001000
011010010010100000010110




=== State Orbit 48 =====================
size : 24
repr state: 011010010110000100000100
lex min decimal: 3937032
states:
110000110000001001001100
110000110010000010001100
001111000001001100001000
100101100000000110010100
001111000011000100000100
010110100101000000010010
010110100101001001000000
100101100010100110000000
010110100001000001011000
010110100100100001010000
011010010110000000010010
101001010000001001001010
110000110001000011001000
101001010000101000010010
110000110000000111000100
011010010100100000000110
001111000011001001000000
101001010001101000001000
011010010110000100000100
001111000010001110000000
100101100000100100010010
101001010100100000001010
011010010010000010000110
100101100100100010010000




=== State Orbit 49 =====================
size : 24
repr state: 011010010110000110000100
lex min decimal: 3937096
states:
110000110001001011001000
001111000011001001001000
001111000001001101001000
100101100010100110000100
001111000011000110000100
010110100101100000010010
101001010100101000010010
010110100101001001001000
101001010001001001001010
110000110001001001001100
100101100100100100010010
001111000010001110000100
110000110010000110001100
100101100010000110010100
101001010100100000011010
010110100100100001010010
100101100100100010010010
101001010001101001001000
011010010010000110000110
010110100001001001011000
011010010100100000010110
110000110010000111000100
011010010110100000010010
011010010110000110000100




=== State Orbit 50 =====================
size : 24
repr state: 011010010110000110010100
lex min decimal: 3937224
states:
100101100110000110010100
011010010010100110000110
100101100100100010010110
011010010110100100010010
001111000010001110001100
101001010100100001011010
110000110011000111000100
110000110001001111001000
010110100100100001011010
110000110011001001001100
101001010101101000010010
010110100101001001001010
100101100110100100010010
010110100001101001011000
101001010001101001011000
011010010100100010010110
100101100010100110000110
001111000011000111000100
010110100101101000010010
001111000011001001001100
011010010110000110010100
101001010101001001001010
110000110010001110001100
001111000001001111001000




=== State Orbit 51 =====================
size : 24
repr state: 011010010110000100010100
lex min decimal: 3937160
states:
100101100010100110000010
110000110010001010001100
101001010100100001001010
110000110001000111001000
101001010100001001001010
101001010001101000010010
100101100100000110010100
010110100101001001000010
110000110010001001001100
001111000010001110001000
011010010010100010000110
100101100100100010010100
010110100001100001011000
010110100101001000010010
001111000001001110001000
011010010100100010000110
010110100100100001011000
011010010110000100010010
001111000011001001000100
110000110001000111000100
001111000011000101000100
101001010001101000011000
011010010110000100010100
100101100010100100010010




=== State Orbit 52 =====================
size : 24
repr state: 011010010110000010000100
lex min decimal: 3937088
states:
010110100100000001010010
101001010001001000001010
101001010100101000000010
010110100001001001010000
100101100010000110010000
101001010000100000011010
110000110010000011000100
110000110000000110001100
100101100000100110000100
011010010110100000000010
001111000011000110000000
101001010000101001001000
011010010110000010000100
010110100101100000010000
001111000010001100000100
110000110000001011001000
010110100101000001001000
011010010010000100000110
110000110001000001001100
001111000011001000001000
100101100000100010010010
100101100100100100010000
011010010100000000010110
001111000001001101000000




=== State Orbit 53 =====================
size : 24
repr state: 011010010110000010010100
lex min decimal: 3937216
states:
110000110000001111001000
110000110000001110001100
110000110011000001001100
011010010110000010010100
101001010101101000000010
001111000011001000001100
100101100110000110010000
101001010000101001011000
001111000010001100001100
011010010100000010010110
010110100100000001011010
011010010010100100000110
100101100000100010010110
100101100000100110000110
010110100101101000010000
100101100110100100010000
101001010101001000001010
010110100001101001010000
001111000001001111000000
010110100101000001001010
011010010110100100000010
101001010000100001011010
110000110011000011000100
001111000011000111000000




=== State Orbit 54 =====================
size : 24
repr state: 011010010110000000010100
lex min decimal: 3937152
states:
010110100001100001010000
011010010110000000010100
001111000010001100001000
011010010010100000000110
100101100000100010010100
010110100100000001011000
101001010000101000011000
101001010001101000000010
100101100100000110010000
100101100010100100010000
110000110000001010001100
011010010100000010000110
100101100000100110000010
110000110000000111001000
110000110010000001001100
011010010110000100000010
010110100101000001000010
010110100101001000010000
110000110001000011000100
101001010100001000001010
101001010000100001001010
001111000011000101000000
001111000001001110000000
001111000011001000000100




=== State Orbit 55 =====================
size : 24
repr state: 011010010110100000000000
lex min decimal: 3932932
states:
110000110000000100001100
011010010000000100000110
001111000011000010000000
010110100101000000001000
101001010000000000011010
100101100000000010010010
011010010110000010000000
011010010110100000000000
100101100100100100000000
001111000000001100000100
101001010000101001000000
100101100010000010010000
011010010000000000010110
101001010100101000000000
010110100000001001010000
110000110000001011000000
010110100101100000000000
101001010001000000001010
110000110010000011000000
001111000011000000001000
001111000000001101000000
100101100000100100000100
110000110001000000001100
010110100000000001010010




=== State Orbit 56 =====================
size : 24
repr state: 011010010110100100000000
lex min decimal: 3932940
states:
001111000011000011000000
010110100000000001011010
110000110011000011000000
101001010101000000001010
110000110000001111000000
011010010110000010010000
101001010000000001011010
011010010000100100000110
001111000000001111000000
110000110011000000001100
010110100000101001010000
011010010000000010010110
001111000011000000001100
001111000000001100001100
100101100000000010010110
110000110000001100001100
100101100110100100000000
101001010000101001010000
010110100101000000001010
100101100000100100000110
011010010110100100000000
100101100110000010010000
101001010101101000000000
010110100101101000000000




=== State Orbit 57 =====================
size : 24
repr state: 011010010110100110000000
lex min decimal: 3933004
states:
011010010110100010010000
010110100101100000001010
011010010110100110000000
100101100010000010010110
010110100000001001011010
011010010000000110010110
110000110010001111000000
001111000000001111000100
110000110001001100001100
101001010101000000011010
011010010000100100010110
110000110011000100001100
110000110011001011000000
100101100100100100000110
100101100110000010010010
101001010101101001000000
101001010100101001010000
010110100000101001010010
100101100110100100000100
101001010001000001011010
001111000000001101001100
001111000011000011001000
001111000011000010001100
010110100101101000001000




=== State Orbit 58 =====================
size : 12
repr state: 011010010110100110010000
lex min decimal: 3933132
states:
001111000000001111001100
101001010101101001010000
001111000011000011001100
010110100101101000001010
101001010101000001011010
010110100000101001011010
100101100110000010010110
100101100110100100000110
110000110011001100001100
011010010000100110010110
011010010110100110010000
110000110011001111000000




=== State Orbit 59 =====================
size : 24
repr state: 011010010110100100010000
lex min decimal: 3933068
states:
100101100110000010010100
110000110001001111000000
011010010000100010010110
001111000011000011000100
001111000011000001001100
001111000000001111001000
100101100110100100000010
110000110011000111000000
101001010101101000010000
101001010101000001001010
101001010001101001010000
010110100101101000000010
001111000000001110001100
010110100101001000001010
010110100000100001011010
011010010000100110000110
100101100100000010010110
010110100000101001011000
110000110011001000001100
101001010100000001011010
011010010110100100010000
110000110010001100001100
011010010110000110010000
100101100010100100000110




=== State Orbit 60 =====================
size : 12
repr state: 011010010110100010000000
lex min decimal: 3932996
states:
100101100010000010010010
110000110010001011000000
010110100101100000001000
101001010001000000011010
011010010000000100010110
011010010110100010000000
010110100000001001010010
110000110001000100001100
001111000000001101000100
001111000011000010001000
100101100100100100000100
101001010100101001000000




=== State Orbit 61 =====================
size : 24
repr state: 011010010110100000010000
lex min decimal: 3933000
states:
001111000000001110000100
001111000011000001001000
100101100100100100000010
101001010100101000010000
101001010001000001001010
110000110010000100001100
010110100101001000001000
011010010110000110000000
010110100000100001010010
010110100000001001011000
011010010000000110000110
001111000011000010000100
110000110001001011000000
011010010110100000010000
010110100101100000000010
110000110001001000001100
011010010000100000010110
100101100010100100000100
101001010100000000011010
100101100010000010010100
001111000000001101001000
110000110010000111000000
101001010001101001000000
100101100100000010010010




=== State Orbit 62 =====================
size : 24
repr state: 011010010110000100000000
lex min decimal: 3932936
states:
110000110000000111000000
100101100000100100000010
001111000011000000000100
010110100000000001011000
001111000000001110000000
010110100101000000000010
100101100010100100000000
011010010000000010000110
001111000011000001000000
011010010110000100000000
011010010110000000010000
100101100100000010010000
110000110001000011000000
110000110000001000001100
001111000000001100001000
100101100000000010010100
110000110010000000001100
101001010000101000010000
010110100101001000000000
101001010000000001001010
101001010001101000000000
010110100000100001010000
101001010100000000001010
011010010000100000000110




=== State Orbit 63 =====================
size : 12
repr state: 011010010110000100010000
lex min decimal: 3933064
states:
010110100101001000000010
100101100010100100000010
110000110001000111000000
011010010000100010000110
010110100000100001011000
100101100100000010010100
110000110010001000001100
001111000011000001000100
001111000000001110001000
101001010001101000010000
011010010110000100010000
101001010100000001001010




=== State Orbit 64 =====================
size : 12
repr state: 010010010100000000000100
lex min decimal: 1442064
states:
001001010000001000000010
010010010100000000000100
100001100000100010000000
010010100100000001000000
001011000010001000000000
100000110000000010001000
000111000001000100000000
000101100000000100010000
000110100001000000010000
100001010000100000001000
010000110000000001000100
001010010010000000000010




=== State Orbit 65 =====================
size : 24
repr state: 010010010100100000000100
lex min decimal: 1442066
states:
000101100000000100010010
001001010000001000010010
001010010010000010000010
001010010010000000010010
100001100100100010000000
010010100100001001000000
000111000001000100001000
010000110000001001000100
000101100000000100010100
000111000001000100000100
001011000010001001000000
001011000010001010000000
100001010001100000001000
010010010100000100000100
001001010000001001000010
000110100001000000010010
010010100100100001000000
100000110001000010001000
010000110000000101000100
100000110010000010001000
000110100001000000011000
100001010100100000001000
010010010100100000000100
100001100010100010000000




=== State Orbit 66 =====================
size : 12
repr state: 010010010100100100000100
lex min decimal: 1442070
states:
010010010100100100000100
000101100000000100010110
100001100110100010000000
001010010010000010010010
100001010101100000001000
010010100100101001000000
001001010000001001010010
010000110000001101000100
001011000010001011000000
100000110011000010001000
000111000001000100001100
000110100001000000011010




=== State Orbit 67 =====================
size : 12
repr state: 011010010100000000000010
lex min decimal: 3936768
states:
010110100100000000010000
011010010100000000000010
001111000010000100000000
100101100000000110000000
011010010010000000000100
100101100000100000010000
110000110000000010000100
110000110000000001001000
010110100001000001000000
001111000001001000000000
101001010000001000001000
101001010000100000000010




=== State Orbit 68 =====================
size : 24
repr state: 011010010100100000000010
lex min decimal: 3936776
states:
001111000010000110000000
001111000010000100000100
010110100100000000010010
101001010001001000001000
110000110000000110000100
011010010010000010000100
101001010000100000010010
110000110000001001001000
010110100100100000010000
101001010100100000000010
100101100000000110000100
001111000001001000001000
100101100010000110000000
100101100000100000010010
110000110010000010000100
011010010010000100000100
010110100001000001001000
110000110001000001001000
011010010100100000000010
100101100100100000010000
010110100001001001000000
001111000001001001000000
101001010000001001001000
011010010100000000010010




=== State Orbit 69 =====================
size : 24
repr state: 011010010100100100000010
lex min decimal: 3936780
states:
101001010000100001010010
011010010100100100000010
100101100000000110000110
010110100100101000010000
001111000001001011000000
101001010101001000001000
110000110000001101001000
101001010000001001011000
100101100110000110000000
010110100100000000011010
011010010010000010010100
001111000010000100001100
010110100001000001001010
100101100110100000010000
010110100001101001000000
001111000001001000001100
110000110011000010000100
110000110011000001001000
011010010100000010010010
011010010010100100000100
001111000010000111000000
101001010101100000000010
100101100000100000010110
110000110000001110000100




=== State Orbit 70 =====================
size : 24
repr state: 011010010100100110000010
lex min decimal: 3936908
states:
001111000010000111001000
101001010001100001010010
110000110001001110000100
100101100100000110000110
010110100001101001000010
100101100110100000010100
110000110011000101001000
110000110010001101001000
010110100001100001001010
100101100110000110000010
101001010101001000011000
011010010100000110010010
011010010010100010010100
001111000001001010001100
011010010010100100010100
001111000010000101001100
001111000001001011000100
101001010100001001011000
110000110011001010000100
100101100010100000010110
101001010101100001000010
011010010100100110000010
010110100100001000011010
010110100100101000011000




=== State Orbit 71 =====================
size : 12
repr state: 011010010100100110010010
lex min decimal: 3936972
states:
010110100001101001001010
001111000001001011001100
100101100110100000010110
110000110011001110000100
100101100110000110000110
001111000010000111001100
010110100100101000011010
110000110011001101001000
011010010100100110010010
011010010010100110010100
101001010101001001011000
101001010101100001010010




=== State Orbit 72 =====================
size : 24
repr state: 011010010100100100010010
lex min decimal: 3936844
states:
001111000010000111000100
001111000010000110001100
110000110011000110000100
011010010100100010010010
101001010001001001011000
010110100001101001001000
010110100100100000011010
101001010101100000010010
101001010101001001001000
010110100001001001001010
001111000001001011001000
110000110001001101001000
100101100110000110000100
101001010100100001010010
011010010010100110000100
110000110011001001001000
011010010010000110010100
001111000001001001001100
110000110010001110000100
010110100100101000010010
100101100010000110000110
100101100100100000010110
011010010100100100010010
100101100110100000010010




=== State Orbit 73 =====================
size : 24
repr state: 011010010100100010000010
lex min decimal: 3936836
states:
010110100100100000011000
001111000001001001000100
110000110010001010000100
110000110001000110000100
100101100100100000010100
100101100100000110000100
101001010100100001000010
011010010010000100010100
011010010010100010000100
001111000010000110001000
101001010001100000010010
110000110010001001001000
001111000001001010001000
011010010100100010000010
100101100010000110000010
101001010100001001001000
100101100010100000010010
010110100001001001000010
011010010100000100010010
010110100001100001001000
001111000010000101000100
101001010001001000011000
110000110001000101001000
010110100100001000010010




=== State Orbit 74 =====================
size : 12
repr state: 011010010100100000010010
lex min decimal: 3936840
states:
001111000010000110000100
010110100100100000010010
100101100010000110000100
011010010010000110000100
110000110001001001001000
101001010100100000010010
101001010001001001001000
110000110010000110000100
001111000001001001001000
100101100100100000010010
011010010100100000010010
010110100001001001001000




=== State Orbit 75 =====================
size : 24
repr state: 011010010100000100000010
lex min decimal: 3936772
states:
110000110010000001001000
011010010100000100000010
100101100100000110000000
011010010010100000000100
010110100100000000011000
011010010010000000010100
110000110001000010000100
100101100000100000010100
101001010100001000001000
001111000010000100001000
011010010100000010000010
010110100001100001000000
101001010000001000011000
010110100001000001000010
110000110000001010000100
001111000010000101000000
101001010000100001000010
110000110000000101001000
010110100100001000010000
001111000001001000000100
100101100010100000010000
101001010001100000000010
001111000001001010000000
100101100000000110000010




=== State Orbit 76 =====================
size : 12
repr state: 011010010100000110000010
lex min decimal: 3936900
states:
011010010100000110000010
010110100100001000011000
001111000010000101001000
011010010010100000010100
101001010001100001000010
110000110010000101001000
001111000001001010000100
010110100001100001000010
101001010100001000011000
100101100100000110000010
110000110001001010000100
100101100010100000010100




=== State Orbit 77 =====================
size : 24
repr state: 010010010100100000000000
lex min decimal: 1441810
states:
001001010000001001000000
100001100010000010000000
100000110001000000001000
001011000010000010000000
010010100100100000000000
000110100001000000001000
001011000000001001000000
000111000000000100000100
001010010000000000010010
010010100000001001000000
100000110010000010000000
000111000001000000001000
000101100000000000010010
001001010000000000010010
100001010100100000000000
000110100000000000010010
100001010001000000001000
000101100000000100000100
010010010100100000000000
001010010010000010000000
010010010000000100000100
010000110000001001000000
010000110000000100000100
100001100100100000000000




=== State Orbit 78 =====================
size : 24
repr state: 010010010100100100000000
lex min decimal: 1441814
states:
100001010101100000000000
010010100000101001000000
100000110011000000001000
010000110000001100000100
001001010000000001010010
010010010100100100000000
100001100110100000000000
000111000000000100001100
100001100110000010000000
000101100000000000010110
000101100000000100000110
000110100000000000011010
001011000010000011000000
001011000000001011000000
010000110000001101000000
100000110011000010000000
001010010000000010010010
000111000001000000001100
001001010000001001010000
001010010010000010010000
100001010101000000001000
000110100001000000001010
010010100100101000000000
010010010000100100000100




=== State Orbit 79 =====================
size : 24
repr state: 010010010100000100000000
lex min decimal: 1441812
states:
001011000000001010000000
000101100000000000010100
000111000000000100001000
001011000010000001000000
000110100001000000000010
010000110000001000000100
000110100000000000011000
100001010100000000001000
010010010100000100000000
100001010001100000000000
000111000001000000000100
001010010000000010000010
001001010000001000010000
000101100000000100000010
100001100010100000000000
001010010010000000010000
010000110000000101000000
100000110001000010000000
001001010000000001000010
010010100000100001000000
010010100100001000000000
010010010000100000000100
100001100100000010000000
100000110010000000001000



[QRM NOTE]: Time elapsed since start: 8.277 seconds

[QRM NOTE]: Time elapsed since last: 0.757 seconds

[QRM NOTE]: Peak memory: 1626127 bytes


=========================================================================================================================

	[REACH_CHECK]: Reachability Convergence Check for Rmin on [ivybench/sym/ivy/firewall.node_3.0.ivy: node=4]

=========================================================================================================================

[REACH_CHECK RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 8.884 seconds

[QRM NOTE]: Time elapsed since last: 0.607 seconds

[QRM NOTE]: Peak memory: 599070 bytes


*********************************************************************

	[IVY_CHECK]: Ivy Check for Reachability Invariant

*********************************************************************


=================================================================================

	[IVY_CHECK]: Ivy check on [ivybench/sym/ivy/firewall.node_3.0.ivy]

=================================================================================

ivy_check complete=fo ivybench/sym/ivy/firewall.node_3.0.ivy


Isolate this:

    The inductive invariant consists of the following conjectures:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_4
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9

    The following action implementations are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 15: implementation of send_from_internal
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 23: implementation of send_to_internal

    The following initializers are present:
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 10: init[after1]

    Initialization must establish the invariant
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_4 ... PASS
        ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS

    The following set of external actions must preserve the invariant:
        (internal) ext:send_from_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_4 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS
        (internal) ext:send_to_internal
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 38: invar_0 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 39: invar_2 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 40: invar_1 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 41: invar_4 ... PASS
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 42: invar_9 ... PASS

    The following program assertions are treated as assumptions:
        in action send_from_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 16: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 17: assumption
        in action send_to_internal when called from the environment:
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 24: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 25: assumption
            ivybench/sym/ivy/firewall.node_3.0.ivy: line 26: assumption

OK
[IVY_CHECK RESULT]: PASS


*****************************************************************

	[QRM]: ivybench/sym/ivy/firewall.node_3.0.ivy

*****************************************************************

[RMIN NUM]: 1

[RMIN RESULT]: ['ivybench/sym/ivy/firewall.node_3.0.ivy']

[CUTOFF]: node=3

[QRM RESULT]: PASS

[QRM NOTE]: Time elapsed since start: 54.141 seconds

[QRM NOTE]: Time elapsed since last: 54.141 seconds

