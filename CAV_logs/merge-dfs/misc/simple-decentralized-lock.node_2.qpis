
=== Prime Orbit 0 =====================
size : 8
num_suborbits: 4
0 (*) : -1---1--
0     : ['has_lock(node1)', 'message(node1,node1)']
1     : 1-1-----
1     : ['has_lock(node0)', 'message(node0,node0)']
2 (*) : 1----1--
2     : ['has_lock(node0)', 'message(node1,node1)']
3     : -11-----
3     : ['has_lock(node1)', 'message(node0,node0)']
12 (*) : -1-1----
12     : ['has_lock(node1)', 'message(node0,node1)']
13     : 1---1---
13     : ['has_lock(node0)', 'message(node1,node0)']
14 (*) : 1--1----
14     : ['has_lock(node0)', 'message(node0,node1)']
15     : -1--1---
15     : ['has_lock(node1)', 'message(node1,node0)']
num_forall :   3
num_exists :   0
num_literals : 2
quantified form : forall NODE0,NODE1,NODE2. ~has_lock(NODE0) | ~message(NODE1,NODE2)
qcost : 5


=== Prime Orbit 1 =====================
size : 6
num_suborbits: 4
4 (*) : --1--1--
4     : ['message(node0,node0)', 'message(node1,node1)']
5 (*) : ---1-1--
5     : ['message(node0,node1)', 'message(node1,node1)']
6     : --1-1---
6     : ['message(node0,node0)', 'message(node1,node0)']
7 (*) : ----11--
7     : ['message(node1,node0)', 'message(node1,node1)']
8     : --11----
8     : ['message(node0,node0)', 'message(node0,node1)']
16 (*) : ---11---
16     : ['message(node0,node1)', 'message(node1,node0)']
num_forall :   4
num_exists :   0
num_literals : 4
quantified form : forall NODE0,NODE1,NODE2,NODE3. ~message(NODE1,NODE3) | ~message(NODE0,NODE2) | (NODE0 = NODE1 & NODE2 = NODE3)
qcost : 8


=== Prime Orbit 4 =====================
size : 1
num_suborbits: 1
11 (*) : 11------
11     : ['has_lock(node0)', 'has_lock(node1)']
num_forall :   0
num_exists :   1
num_literals : 1
quantified form : exists NODE0. ~has_lock(NODE0)
qcost : 2


=== Prime Orbit 5 =====================
size : 1
num_suborbits: 1
17 (*) : 000000--
17     : ['~has_lock(node0)', '~has_lock(node1)', '~message(node0,node0)', '~message(node0,node1)', '~message(node1,node0)', '~message(node1,node1)']
num_forall :   0
num_exists :   2
num_literals : 2
quantified form : exists NODE0,NODE1. has_lock(NODE0) | message(NODE0,NODE1)
qcost : 4

